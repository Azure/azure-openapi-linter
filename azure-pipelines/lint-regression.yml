
trigger:
  - master

pr:
  branches:
    include:
      - "*"
jobs:
- job: regression_test
  timeoutInMinutes: 0
  pool:
    vmImage: "Ubuntu 18.04"

  variables:
    NODE_OPTIONS: '--max-old-space-size=8192'
    NodeVersion: '12.x'
  steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(NodeVersion)'
      displayName: 'Install Node.js $(NodeVersion)'
      
    - script: git submodule update --init
      displayName: Init submodule
      condition: always()

    - script: 'node common/scripts/install-run-rush.js install'
      displayName: 'rush install'

    - script: 'node common/scripts/install-run-rush.js install'
      displayName: 'rush install'

    - script: 'node common/scripts/install-run-rush.js rebuild --verbose'
      displayName: 'rush build'

    - script: 'node common/scripts/install-run-rush.js regression-test'
      displayName: 'regression test'

    # this command will return non zero if git repo has changes ie if the snapshots have been updated
    - script: echo "If this step fails, go to the published artifacts apply the patch provided to your local git repo using 'git apply <file>'" && git status --porcelain
      displayName: Fail test if snapshots have been updated
      condition: always()

    - script: git diff > $(Build.ArtifactStagingDirectory)/snapshot.patch
      displayName: Publish jest update snapshot patch
      condition: always()

    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        pathtoPublish: $(Build.ArtifactStagingDirectory)/snapshot.patch
        artifactName: "snapshot-patch"
