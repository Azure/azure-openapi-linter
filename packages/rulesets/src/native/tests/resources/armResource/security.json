{
  "swagger": "2.0",
  "info": {
    "title": "SecurityCenter",
    "description": "API spec for Microsoft.Security (Azure Security Center) resource provider"
  },
  "host": "management.azure.com",
  "schemes": ["https"],
  "security": [
    {
      "azure_auth": ["user_impersonation"]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Security/complianceResults": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Compliance Results"],
        "description": "Security compliance results in the subscription",
        "operationId": "ComplianceResults_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01"]
          },
          {
            "$ref": "#/parameters/Scope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ComplianceResultList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{resourceId}/providers/Microsoft.Security/complianceResults/{complianceResultName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Compliance Results"],
        "description": "Security Compliance Result",
        "operationId": "ComplianceResults_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/ComplianceResultName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ComplianceResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Pricings"],
        "description": "Lists Security Center pricing configurations in the subscription.",
        "operationId": "Pricings_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2018-06-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PricingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/pricings/{pricingName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Pricings"],
        "description": "Gets a provided Security Center pricing configuration in the subscription.",
        "operationId": "Pricings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2018-06-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/PricingName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pricing"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Pricings"],
        "description": "Updates a provided Security Center pricing configuration in the subscription.",
        "operationId": "Pricings_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2018-06-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/PricingName"
          },
          {
            "$ref": "#/parameters/Pricing"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Pricing"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/alerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "List all the alerts that are associated with the subscription",
        "operationId": "Alerts_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataSelect"
          },
          {
            "$ref": "#/parameters/ODataExpand"
          },
          {
            "$ref": "#/parameters/AutoDismissRuleName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/alerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "List all the alerts that are associated with the resource group",
        "operationId": "Alerts_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataSelect"
          },
          {
            "$ref": "#/parameters/ODataExpand"
          },
          {
            "$ref": "#/parameters/AutoDismissRuleName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "List all the alerts that are associated with the subscription that are stored in a specific location",
        "operationId": "Alerts_ListSubscriptionLevelAlertsByRegion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataSelect"
          },
          {
            "$ref": "#/parameters/ODataExpand"
          },
          {
            "$ref": "#/parameters/AutoDismissRuleName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "List all the alerts that are associated with the resource group that are stored in a specific location",
        "operationId": "Alerts_ListResourceGroupLevelAlertsByRegion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          },
          {
            "$ref": "#/parameters/ODataSelect"
          },
          {
            "$ref": "#/parameters/ODataExpand"
          },
          {
            "$ref": "#/parameters/AutoDismissRuleName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Get an alert that is associated with a subscription",
        "operationId": "Alerts_GetSubscriptionLevelAlert",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Get an alert that is associated a resource group or a resource in a resource group",
        "operationId": "Alerts_GetResourceGroupLevelAlerts",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}/dismiss": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Update the alert's state",
        "operationId": "Alerts_UpdateSubscriptionLevelAlertStateToDismiss",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}/reactivate": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Update the alert's state",
        "operationId": "Alerts_UpdateSubscriptionLevelAlertStateToReactivate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}/dismiss": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Update the alert's state",
        "operationId": "Alerts_UpdateResourceGroupLevelAlertStateToDismiss",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/alerts/{alertName}/reactivate": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Alerts"],
        "description": "Update the alert's state",
        "operationId": "Alerts_UpdateResourceGroupLevelAlertStateToReactivate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/AlertName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/settings": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Settings"],
        "description": "Settings about different configurations in security center",
        "operationId": "Settings_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SettingsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/settings/{settingName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Settings"],
        "description": "Settings of different configurations in security center",
        "operationId": "Settings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SettingName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Setting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Settings"],
        "description": "updating settings about different configurations in security center",
        "operationId": "Settings_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SettingName"
          },
          {
            "$ref": "#/parameters/Setting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Setting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{resourceId}/providers/Microsoft.Security/advancedThreatProtectionSettings/{settingName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AdvancedThreatProtection"],
        "description": "Gets the Advanced Threat Protection settings for the specified resource.",
        "operationId": "AdvancedThreatProtection_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionSettingName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get Advanced Threat Protection settings.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["AdvancedThreatProtection"],
        "description": "Creates or updates the Advanced Threat Protection settings on a specified resource.",
        "operationId": "AdvancedThreatProtection_Create",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionSettingName"
          },
          {
            "$ref": "#/parameters/AdvancedThreatProtectionSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to put Advanced Threat Protection settings.",
            "schema": {
              "$ref": "#/definitions/AdvancedThreatProtectionSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{resourceId}/providers/Microsoft.Security/deviceSecurityGroups": {
      "get": {
        "x-ms-examples": null,
        "tags": ["DeviceSecurityGroups"],
        "description": "Use this method get the list of device security groups for the specified IoT Hub resource.",
        "operationId": "DeviceSecurityGroups_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceSecurityGroupList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{resourceId}/providers/Microsoft.Security/deviceSecurityGroups/{deviceSecurityGroupName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["DeviceSecurityGroups"],
        "description": "Use this method to get the device security group for the specified IoT Hub resource.",
        "operationId": "DeviceSecurityGroups_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/DeviceSecurityGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get device security group.",
            "schema": {
              "$ref": "#/definitions/DeviceSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["DeviceSecurityGroups"],
        "description": "Use this method to creates or updates the device security group on a specified IoT Hub resource.",
        "operationId": "DeviceSecurityGroups_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/DeviceSecurityGroupName"
          },
          {
            "$ref": "#/parameters/DeviceSecurityGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "Security group was updated.",
            "schema": {
              "$ref": "#/definitions/DeviceSecurityGroup"
            }
          },
          "201": {
            "description": "Security group was created.",
            "schema": {
              "$ref": "#/definitions/DeviceSecurityGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["DeviceSecurityGroups"],
        "description": "User this method to deletes the device security group.",
        "operationId": "DeviceSecurityGroups_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/DeviceSecurityGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "Device security group has been deleted."
          },
          "204": {
            "description": "Device security group does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/iotSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "Use this method to get the list of IoT Security solutions by subscription.",
        "operationId": "IotSecuritySolution_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/FilterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "Use this method to get the list IoT Security solutions organized by resource group.",
        "operationId": "IotSecuritySolution_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/FilterParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "User this method to get details of a specific IoT Security solution based on solution name",
        "operationId": "IotSecuritySolution_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "Use this method to create or update yours IoT Security solution",
        "operationId": "IotSecuritySolution_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "$ref": "#/parameters/IotSecuritySolutionData"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionModel"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "patch": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "Use this method to update existing IoT Security solution tags or user defined resources. To update other fields use the CreateOrUpdate method.",
        "operationId": "IotSecuritySolution_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "$ref": "#/parameters/UpdateIotSecuritySolution"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution"],
        "description": "Use this method to delete yours IoT Security solution",
        "operationId": "IotSecuritySolution_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          }
        ],
        "responses": {
          "200": {
            "description": "Security Solution deleted."
          },
          "204": {
            "description": "Security Solution does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution Analytics"],
        "description": "Use this method to get IoT security Analytics metrics in an array.",
        "operationId": "IotSecuritySolutionAnalytics_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionAnalyticsModelList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Solution Analytics"],
        "description": "Use this method to get IoT Security Analytics metrics.",
        "operationId": "IotSecuritySolutionAnalytics_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecuritySolutionAnalyticsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedAlerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Aggregated Alert"],
        "description": "Use this method to get the aggregated alert list of yours IoT Security solution.",
        "operationId": "IotSecuritySolutionsAnalyticsAggregatedAlert_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of results to retrieve.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecurityAggregatedAlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedAlerts/{aggregatedAlertName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Aggregated Alert"],
        "description": "Use this method to get a single the aggregated alert of yours IoT Security solution. This aggregation is performed by alert name.",
        "operationId": "IotSecuritySolutionsAnalyticsAggregatedAlert_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "$ref": "#/parameters/AggregatedAlertName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecurityAggregatedAlert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedAlerts/{aggregatedAlertName}/dismiss": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Aggregated Alert"],
        "description": "Use this method to dismiss an aggregated IoT Security Solution Alert.",
        "operationId": "IotSecuritySolutionsAnalyticsAggregatedAlert_Dismiss",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "$ref": "#/parameters/AggregatedAlertName"
          }
        ],
        "responses": {
          "200": {
            "description": "This aggregate alert is permanently dismissed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedRecommendations/{aggregatedRecommendationName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Aggregated Recommendation"],
        "description": "Use this method to get the aggregated security analytics recommendation of yours IoT Security solution. This aggregation is performed by recommendation name.",
        "operationId": "IotSecuritySolutionsAnalyticsRecommendation_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "$ref": "#/parameters/AggregatedRecommendationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecurityAggregatedRecommendation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/analyticsModels/default/aggregatedRecommendations": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Aggregated Recommendation"],
        "description": "Use this method to get the list of aggregated security analytics recommendations of yours IoT Security solution.",
        "operationId": "IotSecuritySolutionsAnalyticsRecommendation_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "name": "$top",
            "in": "query",
            "description": "Number of results to retrieve.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IoTSecurityAggregatedRecommendationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/iotAlertTypes": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Alert Types"],
        "description": "List IoT alert types",
        "operationId": "IotAlertTypes_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotAlertTypeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/iotAlertTypes/{iotAlertTypeName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Alert Types"],
        "operationId": "IotAlertTypes_Get",
        "description": "Get IoT alert type",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "in": "path",
            "name": "iotAlertTypeName",
            "required": true,
            "type": "string",
            "description": "Name of the alert type"
          }
        ],
        "responses": {
          "200": {
            "description": "IoT alert type",
            "schema": {
              "$ref": "#/definitions/IotAlertType"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/iotAlerts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Alerts"],
        "description": "List IoT alerts",
        "operationId": "IotAlerts_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "in": "query",
            "name": "startTimeUtc>",
            "x-ms-client-name": "minStartTimeUtc",
            "required": false,
            "type": "string",
            "description": "Filter by minimum startTimeUtc (ISO 8601 format)"
          },
          {
            "in": "query",
            "name": "startTimeUtc<",
            "x-ms-client-name": "maxStartTimeUtc",
            "required": false,
            "type": "string",
            "description": "Filter by maximum startTimeUtc (ISO 8601 format)"
          },
          {
            "in": "query",
            "name": "alertType",
            "required": false,
            "type": "string",
            "description": "Filter by alert type"
          },
          {
            "in": "query",
            "name": "$limit",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "Limit the number of items returned in a single page"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string",
            "description": "Skip token used for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IotAlertList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/iotSecuritySolutions/{solutionName}/iotAlerts/{iotAlertId}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["IoT Security Alerts"],
        "operationId": "IotAlerts_Get",
        "description": "Get IoT alert",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-08-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SolutionName"
          },
          {
            "in": "path",
            "name": "iotAlertId",
            "required": true,
            "type": "string",
            "description": "Id of the alert"
          }
        ],
        "responses": {
          "200": {
            "description": "IoT alert",
            "schema": {
              "$ref": "#/definitions/IotAlert"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Locations"],
        "description": "The location of the responsible ASC of the specific subscription (home region). For each subscription there is only one responsible location. The location in the response should be used to read or write other resources in ASC according to their ID.",
        "operationId": "Locations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AscLocationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Locations"],
        "description": "Details of a specific location",
        "operationId": "Locations_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AscLocation"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/providers/Microsoft.Security/operations": {
      "get": {
        "tags": ["Operations"],
        "description": "Exposes all available operations for discovery purposes.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/tasks": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTaskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/tasks": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_ListByHomeRegion",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTaskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_GetSubscriptionLevelTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/TaskName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}/{taskUpdateActionType}": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_UpdateSubscriptionLevelTaskState",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/TaskName"
          },
          {
            "$ref": "#/parameters/TaskUpdateActionType"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/tasks": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTaskList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_GetResourceGroupLevelTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/TaskName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityTask"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/tasks/{taskName}/{taskUpdateActionType}": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Tasks"],
        "description": "Recommended tasks that will help improve the security of the subscription proactively",
        "operationId": "Tasks_UpdateResourceGroupLevelTaskState",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2015-06-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/TaskName"
          },
          {
            "$ref": "#/parameters/TaskUpdateActionType"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/autoProvisioningSettings": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AutoProvisioningSettings"],
        "description": "Exposes the auto provisioning settings of the subscriptions",
        "operationId": "AutoProvisioningSettings_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutoProvisioningSettingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/autoProvisioningSettings/{settingName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AutoProvisioningSettings"],
        "description": "Details of a specific setting",
        "operationId": "AutoProvisioningSettings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AutoProvisioningSettingName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutoProvisioningSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["AutoProvisioningSettings"],
        "description": "Details of a specific setting",
        "operationId": "AutoProvisioningSettings_Create",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AutoProvisioningSettingName"
          },
          {
            "$ref": "#/parameters/AutoProvisioningSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutoProvisioningSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/compliances": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Compliances"],
        "description": "The Compliance scores of the specific management group.",
        "operationId": "Compliances_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ComplianceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/compliances/{complianceName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Compliances"],
        "description": "Details of a specific Compliance.",
        "operationId": "Compliances_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          },
          {
            "$ref": "#/parameters/ComplianceName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Compliance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/informationProtectionPolicies/{informationProtectionPolicyName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["InformationProtectionPolicies"],
        "description": "Details of the information protection policy.",
        "operationId": "InformationProtectionPolicies_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          },
          {
            "$ref": "#/parameters/InformationProtectionPolicyName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InformationProtectionPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["InformationProtectionPolicies"],
        "description": "Details of the information protection policy.",
        "operationId": "InformationProtectionPolicies_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          },
          {
            "$ref": "#/parameters/InformationProtectionPolicyName"
          },
          {
            "$ref": "#/parameters/InformationProtectionPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InformationProtectionPolicy"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/InformationProtectionPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/informationProtectionPolicies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["InformationProtectionPolicies"],
        "description": "Information protection policies of a specific management group.",
        "operationId": "InformationProtectionPolicies_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InformationProtectionPolicyList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Security Contacts"],
        "description": "Security contact configurations for the subscription",
        "operationId": "SecurityContacts_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityContactList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/securityContacts/{securityContactName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Security Contacts"],
        "description": "Security contact configurations for the subscription",
        "operationId": "SecurityContacts_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SecurityContactName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityContact"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Security Contacts"],
        "description": "Security contact configurations for the subscription",
        "operationId": "SecurityContacts_Create",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SecurityContactName"
          },
          {
            "$ref": "#/parameters/SecurityContact"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityContact"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Security Contacts"],
        "description": "Security contact configurations for the subscription",
        "operationId": "SecurityContacts_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SecurityContactName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "patch": {
        "x-ms-examples": null,
        "tags": ["Security Contacts"],
        "description": "Security contact configurations for the subscription",
        "operationId": "SecurityContacts_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SecurityContactName"
          },
          {
            "$ref": "#/parameters/SecurityContact"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityContact"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/workspaceSettings": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Workspace Settings"],
        "description": "Settings about where we should store your security data and logs. If the result is empty, it means that no custom-workspace configuration was set",
        "operationId": "WorkspaceSettings_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceSettingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/workspaceSettings/{workspaceSettingName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Workspace Settings"],
        "description": "Settings about where we should store your security data and logs. If the result is empty, it means that no custom-workspace configuration was set",
        "operationId": "WorkspaceSettings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/WorkspaceSettingName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Workspace Settings"],
        "description": "creating settings about where we should store your security data and logs",
        "operationId": "WorkspaceSettings_Create",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/WorkspaceSettingName"
          },
          {
            "$ref": "#/parameters/WorkspaceSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "patch": {
        "x-ms-examples": null,
        "tags": ["Workspace Settings"],
        "description": "Settings about where we should store your security data and logs",
        "operationId": "WorkspaceSettings_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/WorkspaceSettingName"
          },
          {
            "$ref": "#/parameters/WorkspaceSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkspaceSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Workspace Settings"],
        "description": "Deletes the custom workspace settings for this subscription. new VMs will report to the default workspace",
        "operationId": "WorkspaceSettings_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2017-08-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/WorkspaceSettingName"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "Supported regulatory compliance standards details and state",
        "operationId": "RegulatoryComplianceStandards_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceStandardList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "Supported regulatory compliance details state for selected standard",
        "operationId": "RegulatoryComplianceStandards_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceStandardName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceStandard"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}/regulatoryComplianceControls": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "All supported regulatory compliance controls details and state for selected standard",
        "operationId": "RegulatoryComplianceControls_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceStandardName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceControlList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}/regulatoryComplianceControls/{regulatoryComplianceControlName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "Selected regulatory compliance control details and state",
        "operationId": "RegulatoryComplianceControls_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceStandardName"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceControlName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceControl"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}/regulatoryComplianceControls/{regulatoryComplianceControlName}/regulatoryComplianceAssessments": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "Details and state of assessments mapped to selected regulatory compliance control",
        "operationId": "RegulatoryComplianceAssessments_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceStandardName"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceControlName"
          },
          {
            "$ref": "#/parameters/ODataFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceAssessmentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/regulatoryComplianceStandards/{regulatoryComplianceStandardName}/regulatoryComplianceControls/{regulatoryComplianceControlName}/regulatoryComplianceAssessments/{regulatoryComplianceAssessmentName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["RegulatoryCompliance"],
        "description": "Supported regulatory compliance details and state for selected assessment",
        "operationId": "RegulatoryComplianceAssessments_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceStandardName"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceControlName"
          },
          {
            "$ref": "#/parameters/RegulatoryComplianceAssessmentName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RegulatoryComplianceAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/subAssessments": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SubAssessments"],
        "description": "Get security sub-assessments on all your scanned resources inside a subscription scope",
        "operationId": "SubAssessments_ListAll",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecuritySubAssessmentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SubAssessments"],
        "description": "Get security sub-assessments on all your scanned resources inside a scope",
        "operationId": "SubAssessments_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          },
          {
            "$ref": "#/parameters/AssessmentName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecuritySubAssessmentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/assessments/{assessmentName}/subAssessments/{subAssessmentName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SubAssessments"],
        "description": "Get a security sub-assessment on your scanned resource",
        "operationId": "SubAssessments_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/Scope"
          },
          {
            "$ref": "#/parameters/AssessmentName"
          },
          {
            "$ref": "#/parameters/SubAssessmentName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecuritySubAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/automations": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "description": "Lists all the security automations in the specified subscription. Use the 'nextLink' property in the response to get the next page of security automations for the specified subscription.",
        "operationId": "Automations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomationList"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/automations": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "description": "Lists all the security automations in the specified resource group. Use the 'nextLink' property in the response to get the next page of security automations for the specified resource group.",
        "operationId": "Automations_ListByResourceGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomationList"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/automations/{automationName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "description": "Retrieves information about the model of a security automation.",
        "operationId": "Automations_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AutomationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Automation"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "description": "Creates or updates a security automation. If a security automation is already created and a subsequent request is issued for the same automation id, then it will be updated.",
        "operationId": "Automations_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AutomationName"
          },
          {
            "$ref": "#/parameters/AutomationInBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Automation"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Automation"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "operationId": "Automations_Delete",
        "description": "Deletes a security automation.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AutomationName"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/automations/{automationName}/validate": {
      "post": {
        "x-ms-examples": null,
        "tags": ["Automations"],
        "description": "Validates the security automation model before create or update. Any validation errors are returned to the client.",
        "operationId": "Automations_Validate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AutomationName"
          },
          {
            "$ref": "#/parameters/AutomationInBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutomationValidationStatus"
            }
          },
          "default": {
            "description": "Error response that describes why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AlertsSuppressionRules"],
        "description": "List of all the dismiss rules for the given subscription",
        "operationId": "AlertsSuppressionRules_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AlertType"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertsSuppressionRulesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/alertsSuppressionRules/{alertsSuppressionRuleName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AlertsSuppressionRules"],
        "description": "Get dismiss rule, with name: {alertsSuppressionRuleName}, for the given subscription",
        "operationId": "AlertsSuppressionRules_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AlertsSuppressionRuleName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertsSuppressionRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["AlertsSuppressionRules"],
        "description": "Update existing rule or create new rule if it doesn't exist",
        "operationId": "AlertsSuppressionRules_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AlertsSuppressionRuleName"
          },
          {
            "$ref": "#/parameters/AlertsSuppressionRule"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AlertsSuppressionRule"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["AlertsSuppressionRules"],
        "description": "Delete dismiss alert rule for this subscription.",
        "operationId": "AlertsSuppressionRules_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2019-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AlertsSuppressionRuleName"
          }
        ],
        "responses": {
          "204": {
            "description": "OK, No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/serverVulnerabilityAssessments": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a list of server vulnerability assessment onboarding statuses on a given resource.",
        "tags": ["ServerVulnerabilityAssessments"],
        "operationId": "ServerVulnerabilityAssessment_ListByExtendedResource",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerVulnerabilityAssessmentsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/serverVulnerabilityAssessments/{serverVulnerabilityAssessment}": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a server vulnerability assessment onboarding statuses on a given resource.",
        "tags": ["ServerVulnerabilityAssessments"],
        "operationId": "ServerVulnerabilityAssessment_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverVulnerabilityAssessment",
            "in": "path",
            "description": "ServerVulnerabilityAssessment status. only a 'default' value is supported.",
            "required": true,
            "type": "string",
            "enum": ["default"]
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServerVulnerabilityAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "description": "Creating a server vulnerability assessment on a resource, which will onboard a resource for having a vulnerability assessment on it",
        "tags": ["ServerVulnerabilityAssessment"],
        "operationId": "ServerVulnerabilityAssessment_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverVulnerabilityAssessment",
            "in": "path",
            "description": "ServerVulnerabilityAssessment status. only a 'default' value is supported.",
            "required": true,
            "type": "string",
            "enum": ["default"]
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/ServerVulnerabilityAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "description": "Removing server vulnerability assessment from a resource.",
        "tags": ["ServerVulnerabilityAssessment"],
        "operationId": "ServerVulnerabilityAssessment_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "serverVulnerabilityAssessment",
            "in": "path",
            "description": "ServerVulnerabilityAssessment status. only a 'default' value is supported.",
            "required": true,
            "type": "string",
            "enum": ["default"]
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - Resource does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/providers/Microsoft.Security/assessmentMetadata": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Get metadata information on all assessment types",
        "operationId": "AssessmentsMetadata_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Get metadata information on an assessment type",
        "operationId": "AssessmentsMetadata_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AssessmentsMetadataName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Get metadata information on all assessment types in a specific subscription",
        "operationId": "AssessmentsMetadata_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentMetadataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/assessmentMetadata/{assessmentMetadataName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Get metadata information on an assessment type in a specific subscription",
        "operationId": "AssessmentsMetadata_GetInSubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AssessmentsMetadataName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Create metadata information on an assessment type in a specific subscription",
        "operationId": "AssessmentsMetadata_CreateInSubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AssessmentsMetadataName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/SecurityAssessmentMetadata"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentMetadata"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Assessments Metadata"],
        "description": "Delete metadata information on an assessment type in a specific subscription, will cause the deletion of all the assessments of that type in that subscription",
        "operationId": "AssessmentsMetadata_DeleteInSubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AssessmentsMetadataName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{scope}/providers/Microsoft.Security/assessments": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments"],
        "description": "Get security assessments on all your scanned resources inside a scope",
        "operationId": "Assessments_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/Scope"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessmentList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/{resourceId}/providers/Microsoft.Security/assessments/{assessmentName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Assessments"],
        "description": "Get a security assessment on your scanned resource",
        "operationId": "Assessments_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/AssessmentName"
          },
          {
            "$ref": "#/parameters/ExpandAssessments"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecurityAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Assessments"],
        "description": "Create a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result",
        "operationId": "Assessments_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/AssessmentName"
          },
          {
            "$ref": "#/parameters/AssessmentBody"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Updated",
            "schema": {
              "$ref": "#/definitions/SecurityAssessment"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SecurityAssessment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Assessments"],
        "description": "Delete a security assessment on your resource. An assessment metadata that describes this assessment must be predefined with the same name before inserting the assessment result",
        "operationId": "Assessments_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/ResourceId"
          },
          {
            "$ref": "#/parameters/AssessmentName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Assessment was deleted"
          },
          "204": {
            "description": "No Content - Assessment does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/applicationWhitelistings": {
      "get": {
        "description": "Gets a list of application control VM/server groups for the subscription.",
        "operationId": "AdaptiveApplicationControls_List",
        "x-ms-examples": null,
        "tags": ["applicationWhitelistings"],
        "produces": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/IncludePathRecommendations"
          },
          {
            "$ref": "#/parameters/Summary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppWhitelistingGroups"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/applicationWhitelistings/{groupName}": {
      "get": {
        "description": "Gets an application control VM/server group.",
        "operationId": "AdaptiveApplicationControls_Get",
        "x-ms-examples": null,
        "tags": ["applicationWhitelistings"],
        "produces": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/GroupName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppWhitelistingGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "consumes": ["application/json"]
      },
      "put": {
        "tags": ["applicationWhitelistings"],
        "x-ms-examples": null,
        "description": "Update an application control VM/server group",
        "operationId": "AdaptiveApplicationControls_Put",
        "consumes": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/GroupName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AppWhitelistingGroup"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppWhitelistingGroup"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["applicationWhitelistings"],
        "description": "Delete an application control VM/server group",
        "operationId": "AdaptiveApplicationControls_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/GroupName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - The response indicates that the delete operation completed successfully"
          },
          "202": {
            "description": "Accepted. The response indicates the delete operation is performed in the background."
          },
          "204": {
            "description": "No Content. The response indicates the resource is already deleted."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/adaptiveNetworkHardenings": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a list of Adaptive Network Hardenings resources in scope of an extended resource.",
        "tags": ["AdaptiveNetworkHardenings"],
        "operationId": "AdaptiveNetworkHardenings_ListByExtendedResource",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdaptiveNetworkHardeningsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/adaptiveNetworkHardenings/{adaptiveNetworkHardeningResourceName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AdaptiveNetworkHardenings"],
        "description": "Gets a single Adaptive Network Hardening resource",
        "operationId": "AdaptiveNetworkHardenings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/AdaptiveNetworkHardeningResourceName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdaptiveNetworkHardening"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.Security/adaptiveNetworkHardenings/{adaptiveNetworkHardeningResourceName}/{adaptiveNetworkHardeningEnforceAction}": {
      "post": {
        "x-ms-long-running-operation": true,
        "x-ms-examples": null,
        "tags": ["AdaptiveNetworkHardenings"],
        "description": "Enforces the given rules on the NSG(s) listed in the request",
        "operationId": "AdaptiveNetworkHardenings_Enforce",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "resourceNamespace",
            "in": "path",
            "description": "The Namespace of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "The type of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "Name of the resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/AdaptiveNetworkHardeningResourceName"
          },
          {
            "$ref": "#/parameters/AdaptiveNetworkHardeningEnforceAction"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/AdaptiveNetworkHardeningEnforceRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/allowedConnections": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AllowedConnections"],
        "description": "Gets the list of all possible traffic between resources for the subscription",
        "operationId": "AllowedConnections_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllowedConnectionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AllowedConnections"],
        "description": "Gets the list of all possible traffic between resources for the subscription and location.",
        "operationId": "AllowedConnections_ListByHomeRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllowedConnectionsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/allowedConnections/{connectionType}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["AllowedConnections"],
        "description": "Gets the list of all possible traffic between resources for the subscription and location, based on connection type.",
        "operationId": "AllowedConnections_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ConnectionType"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllowedConnectionsResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/topologies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Topology"],
        "description": "Gets a list that allows to build a topology view of a subscription.",
        "operationId": "Topology_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopologyList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/topologies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Topology"],
        "description": "Gets a list that allows to build a topology view of a subscription and location.",
        "operationId": "Topology_ListByHomeRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopologyList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/topologies/{topologyResourceName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Topology"],
        "description": "Gets a specific topology component.",
        "operationId": "Topology_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/TopologyResourceName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TopologyResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/jitNetworkAccessPolicies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Policies for protecting resources using Just-in-Time access control.",
        "operationId": "JitNetworkAccessPolicies_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Policies for protecting resources using Just-in-Time access control for the subscription, location",
        "operationId": "JitNetworkAccessPolicies_ListByRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/jitNetworkAccessPolicies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Policies for protecting resources using Just-in-Time access control for the subscription, location",
        "operationId": "JitNetworkAccessPolicies_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies": {
      "get": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Policies for protecting resources using Just-in-Time access control for the subscription, location",
        "operationId": "JitNetworkAccessPolicies_ListByResourceGroupAndRegion",
        "produces": ["application/json"],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPoliciesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies/{jitNetworkAccessPolicyName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Policies for protecting resources using Just-in-Time access control for the subscription, location",
        "operationId": "JitNetworkAccessPolicies_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Create a policy for protecting resources using Just-in-Time access control",
        "operationId": "JitNetworkAccessPolicies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicy"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessPolicy"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Delete a Just-in-Time access control policy.",
        "operationId": "JitNetworkAccessPolicies_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Resource was deleted"
          },
          "204": {
            "description": "No Content - Resource does not exist"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/jitNetworkAccessPolicies/{jitNetworkAccessPolicyName}/{jitNetworkAccessPolicyInitiateType}": {
      "post": {
        "x-ms-examples": null,
        "tags": ["JitNetworkAccessPolicies"],
        "description": "Initiate a JIT access from a specific Just-in-Time policy configuration.",
        "operationId": "JitNetworkAccessPolicies_Initiate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyName"
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyInitiateType"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/JitNetworkAccessPolicyInitiateRequest"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/JitNetworkAccessRequest"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/discoveredSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["DiscoveredSecuritySolutions"],
        "description": "Gets a list of discovered Security Solutions for the subscription.",
        "operationId": "DiscoveredSecuritySolutions_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoveredSecuritySolutionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["DiscoveredSecuritySolutions"],
        "description": "Gets a list of discovered Security Solutions for the subscription and location.",
        "operationId": "DiscoveredSecuritySolutions_ListByHomeRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoveredSecuritySolutionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/discoveredSecuritySolutions/{discoveredSecuritySolutionName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["DiscoveredSecuritySolutions"],
        "description": "Gets a specific discovered Security Solution.",
        "operationId": "DiscoveredSecuritySolutions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/DiscoveredSecuritySolutionName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DiscoveredSecuritySolution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutionsReferenceData": {
      "get": {
        "x-ms-examples": null,
        "tags": ["securitySolutionsReferenceData"],
        "description": "Gets a list of all supported Security Solutions for the subscription.",
        "operationId": "securitySolutionsReferenceData_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/securitySolutionsReferenceDataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutionsReferenceData": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SecuritySolutionsReferenceData"],
        "description": "Gets list of all supported Security Solutions for subscription and location.",
        "operationId": "SecuritySolutionsReferenceData_ListByHomeRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/securitySolutionsReferenceDataList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/externalSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a list of external security solutions for the subscription.",
        "tags": ["ExternalSecuritySolutions"],
        "operationId": "ExternalSecuritySolutions_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalSecuritySolutionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a list of external Security Solutions for the subscription and location.",
        "tags": ["ExternalSecuritySolutions"],
        "operationId": "ExternalSecuritySolutions_ListByHomeRegion",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalSecuritySolutionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/ExternalSecuritySolutions/{externalSecuritySolutionsName}": {
      "get": {
        "x-ms-examples": null,
        "description": "Gets a specific external Security Solution.",
        "tags": ["ExternalSecuritySolutions"],
        "operationId": "ExternalSecuritySolutions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/ExternalSecuritySolutionsName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExternalSecuritySolution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScores": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score"],
        "description": "List secure scores for all your Security Center initiatives within your current scope.",
        "operationId": "SecureScores_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecureScoresList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScores/{secureScoreName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score"],
        "description": "Get secure score for a specific Security Center initiative within your current scope. For the ASC Default initiative, use 'ascScore'.",
        "operationId": "SecureScores_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/secureScoreName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecureScoreItem"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScores/{secureScoreName}/secureScoreControls": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score"],
        "description": "Get all security controls for a specific initiative within a scope",
        "operationId": "SecureScoreControls_ListBySecureScore",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/secureScoreName"
          },
          {
            "$ref": "#/parameters/ExpandControlsDefinition"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecureScoreControlList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControls": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score Controls"],
        "description": "Get all security controls within a scope",
        "operationId": "SecureScoreControls_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ExpandControlsDefinition"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecureScoreControlList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/providers/Microsoft.Security/secureScoreControlDefinitions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score Control Definitions"],
        "description": "List the available security controls, their assessments, and the max score",
        "operationId": "SecureScoreControlDefinitions_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/secureScoreControlDefinitionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/secureScoreControlDefinitions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Secure Score Control Definitions"],
        "description": "For a specified subscription, list the available security controls, their assessments, and the max score",
        "operationId": "SecureScoreControlDefinitions_ListBySubscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/secureScoreControlDefinitionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/securitySolutions": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SecuritySolutions"],
        "description": "Gets a list of Security Solutions for the subscription.",
        "operationId": "SecuritySolutions_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecuritySolutionList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Security/locations/{ascLocation}/securitySolutions/{securitySolutionName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["SecuritySolutions"],
        "description": "Gets a specific Security Solution.",
        "operationId": "SecuritySolutions_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/AscLocation"
          },
          {
            "$ref": "#/parameters/SecuritySolutionName"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SecuritySolution"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/connectors": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Connectors"],
        "description": "Cloud accounts connectors of a subscription",
        "operationId": "Connectors_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectorSettingList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Security/connectors/{connectorName}": {
      "get": {
        "x-ms-examples": null,
        "tags": ["Connectors"],
        "description": "Details of a specific cloud account connector",
        "operationId": "Connectors_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectorSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "put": {
        "x-ms-examples": null,
        "tags": ["Connectors"],
        "description": "Create a cloud account connector or update an existing one. Connect to your AWS cloud account using either account credentials or role-based authentication.",
        "operationId": "Connectors_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          },
          {
            "$ref": "#/parameters/ConnectorSetting"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConnectorSetting"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      },
      "delete": {
        "x-ms-examples": null,
        "tags": ["Connectors"],
        "description": "Delete a cloud account connector from a subscription",
        "operationId": "Connectors_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "API version for the operation",
            "enum": ["2020-01-01-preview"]
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "$ref": "#/parameters/ConnectorName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "The connector is not found"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "produces": ["application/json"],
        "consumes": ["application/json"]
      }
    }
  },
  "definitions": {
    "ComplianceResultList": {
      "description": "List of compliance results response",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of compliance results",
          "items": {
            "$ref": "#/definitions/ComplianceResult"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "ComplianceResult": {
      "type": "object",
      "description": "a compliance result",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Compliance result data",
          "$ref": "#/definitions/ComplianceResultProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ComplianceResultProperties": {
      "type": "object",
      "description": "Compliance result data",
      "properties": {
        "resourceStatus": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the resource regarding a single assessment",
          "enum": ["Healthy", "NotApplicable", "OffByPolicy", "NotHealthy"],
          "x-ms-enum": {
            "name": "resourceStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Healthy",
                "description": "This assessment on the resource is healthy"
              },
              {
                "value": "NotApplicable",
                "description": "This assessment is not applicable to this resource"
              },
              {
                "value": "OffByPolicy",
                "description": "This assessment is turned off by policy on this subscription"
              },
              {
                "value": "NotHealthy",
                "description": "This assessment on the resource is not healthy"
              }
            ]
          }
        }
      }
    },
    "AscLocationProperties": {
      "type": "object",
      "description": "An empty set of properties"
    },
    "AscLocation": {
      "type": "object",
      "description": "The ASC location of the subscription is in the \"name\" field",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AscLocationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "TrackedResource": {
      "type": "object",
      "description": "Describes an Azure tracked resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        },
        {
          "$ref": "#/definitions/Kind"
        },
        {
          "$ref": "#/definitions/ETag"
        },
        {
          "$ref": "#/definitions/Tags"
        }
      ]
    },
    "Location": {
      "type": "object",
      "description": "Describes an Azure resource with location",
      "properties": {
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "Location where the resource is stored"
        }
      }
    },
    "Kind": {
      "type": "object",
      "description": "Describes an Azure resource with kind",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Kind of the resource"
        }
      }
    },
    "ETag": {
      "type": "object",
      "description": "Entity tag is used for comparing two or more entities from the same requested resource.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Entity tag is used for comparing two or more entities from the same requested resource."
        }
      }
    },
    "Tags": {
      "type": "object",
      "description": "A list of key value pairs that describe the resource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "A list of key value pairs that describe the resource.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "type": "object",
      "description": "Describes an Azure resource.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "x-ms-azure-resource": true
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "type": "object",
      "description": "Error details.",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        }
      }
    },
    "CloudError": {
      "x-ms-external": true,
      "type": "object",
      "description": "Error response structure.",
      "properties": {
        "error": {
          "x-ms-client-flatten": true,
          "description": "Error data",
          "$ref": "#/definitions/CloudErrorBody"
        }
      }
    },
    "PricingList": {
      "description": "List of pricing configurations response.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of pricing configurations",
          "items": {
            "$ref": "#/definitions/Pricing"
          }
        }
      }
    },
    "Pricing": {
      "type": "object",
      "description": "Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Pricing data",
          "$ref": "#/definitions/PricingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "PricingProperties": {
      "type": "object",
      "description": "Pricing properties for the relevant scope",
      "properties": {
        "pricingTier": {
          "type": "string",
          "description": "The pricing tier value. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features.",
          "enum": ["Free", "Standard"],
          "x-ms-enum": {
            "name": "pricingTier",
            "modelAsString": true,
            "values": [
              {
                "value": "Free",
                "description": "Get free Azure security center experience with basic security features"
              },
              {
                "value": "Standard",
                "description": "Get the standard Azure security center experience with advanced security features"
              }
            ]
          }
        },
        "freeTrialRemainingTime": {
          "type": "string",
          "format": "duration",
          "readOnly": true,
          "description": "The duration left for the subscriptions free trial period - in ISO 8601 format (e.g. P3Y6M4DT12H30M5S)."
        }
      },
      "required": ["pricingTier"]
    },
    "AlertList": {
      "type": "object",
      "description": "List of security alerts",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "Alert": {
      "type": "object",
      "description": "Security alert",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "AlertProperties": {
      "type": "object",
      "description": "describes security alert properties.",
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "State of the alert (Active, Dismissed etc.)"
        },
        "reportedTimeUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the incident was reported to Microsoft.Security in UTC"
        },
        "vendorName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the vendor that discovered the incident"
        },
        "alertName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the alert type"
        },
        "alertDisplayName": {
          "readOnly": true,
          "type": "string",
          "description": "Display name of the alert type"
        },
        "detectedTimeUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time the incident was detected by the vendor"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the incident and what it means"
        },
        "remediationSteps": {
          "readOnly": true,
          "type": "string",
          "description": "Recommended steps to reradiate the incident"
        },
        "actionTaken": {
          "readOnly": true,
          "type": "string",
          "description": "The action that was taken as a response to the alert (Active, Blocked etc.)"
        },
        "reportedSeverity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "reportedSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "Estimated severity of this alert"
        },
        "compromisedEntity": {
          "readOnly": true,
          "type": "string",
          "description": "The entity that the incident happened on"
        },
        "associatedResource": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource ID of the associated resource"
        },
        "extendedProperties": {
          "$ref": "#/definitions/AlertExtendedProperties"
        },
        "systemSource": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the alerted resource (Azure, Non-Azure)"
        },
        "canBeInvestigated": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether this alert can be investigated with Azure Security Center"
        },
        "isIncident": {
          "readOnly": true,
          "type": "boolean",
          "description": "Whether this alert is for incident type or not (otherwise - single alert)"
        },
        "entities": {
          "type": "array",
          "description": "objects that are related to this alerts",
          "items": {
            "$ref": "#/definitions/AlertEntity"
          }
        },
        "confidenceScore": {
          "readOnly": true,
          "type": "number",
          "format": "float",
          "minimum": 0,
          "maximum": 1,
          "description": "level of confidence we have on the alert"
        },
        "confidenceReasons": {
          "type": "array",
          "description": "reasons the alert got the confidenceScore value",
          "items": {
            "$ref": "#/definitions/AlertConfidenceReason"
          }
        },
        "subscriptionId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure subscription ID of the resource that had the security alert or the subscription ID of the workspace that this resource reports to"
        },
        "instanceId": {
          "readOnly": true,
          "type": "string",
          "description": "Instance ID of the alert."
        },
        "workspaceArmId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource ID of the workspace that the alert was reported to."
        },
        "correlationKey": {
          "readOnly": true,
          "type": "string",
          "description": "Alerts with the same CorrelationKey will be grouped together in Ibiza."
        }
      }
    },
    "AlertConfidenceReason": {
      "type": "object",
      "description": "Factors that increase our confidence that the alert is a true positive",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of confidence factor"
        },
        "reason": {
          "readOnly": true,
          "type": "string",
          "description": "description of the confidence reason"
        }
      }
    },
    "AlertEntity": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "description": "Changing set of properties depending on the entity type.",
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of entity"
        }
      }
    },
    "AlertExtendedProperties": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "description": "Changing set of properties depending on the alert type."
    },
    "SettingsList": {
      "type": "object",
      "description": "Subscription settings list.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The settings list.",
          "items": {
            "$ref": "#/definitions/Setting"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "Setting": {
      "type": "object",
      "description": "Represents a security setting in Azure Security Center.",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/SettingResource"
        }
      ]
    },
    "DataExportSettings": {
      "type": "object",
      "description": "Represents a data export setting",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Data export setting data",
          "$ref": "#/definitions/DataExportSettingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Setting"
        }
      ],
      "x-ms-discriminator-value": "DataExportSettings"
    },
    "SettingResource": {
      "type": "object",
      "description": "The kind of the security setting",
      "properties": {
        "kind": {
          "type": "string",
          "description": "the kind of the settings string (DataExportSettings)",
          "enum": ["DataExportSettings", "AlertSuppressionSetting"],
          "x-ms-enum": {
            "name": "SettingKind",
            "modelAsString": true,
            "values": [
              {
                "value": "DataExportSettings"
              },
              {
                "value": "AlertSuppressionSetting"
              }
            ]
          }
        }
      },
      "discriminator": "kind",
      "required": ["kind"],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "DataExportSettingProperties": {
      "type": "object",
      "description": "The data export setting properties",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Is the data export setting is enabled"
        }
      },
      "required": ["enabled"]
    },
    "AdvancedThreatProtectionProperties": {
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Indicates whether Advanced Threat Protection is enabled."
        }
      },
      "description": "The Advanced Threat Protection settings."
    },
    "AdvancedThreatProtectionSetting": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdvancedThreatProtectionProperties"
        }
      },
      "description": "The Advanced Threat Protection resource."
    },
    "DeviceSecurityGroupList": {
      "type": "object",
      "readOnly": true,
      "description": "List of device security groups",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of device security group objects",
          "items": {
            "$ref": "#/definitions/DeviceSecurityGroup"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "DeviceSecurityGroup": {
      "type": "object",
      "description": "The device security group resource",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Device Security group data",
          "$ref": "#/definitions/DeviceSecurityGroupProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "DeviceSecurityGroupProperties": {
      "type": "object",
      "description": "describes properties of a security group.",
      "properties": {
        "thresholdRules": {
          "type": "array",
          "description": "The list of custom alert threshold rules.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ThresholdCustomAlertRule"
          }
        },
        "timeWindowRules": {
          "type": "array",
          "description": "The list of custom alert time-window rules.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/TimeWindowCustomAlertRule"
          }
        },
        "allowlistRules": {
          "type": "array",
          "description": "The allow-list custom alert rules.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AllowlistCustomAlertRule"
          }
        },
        "denylistRules": {
          "type": "array",
          "description": "The deny-list custom alert rules.",
          "items": {
            "type": "object",
            "$ref": "#/definitions/DenylistCustomAlertRule"
          }
        }
      }
    },
    "CustomAlertRule": {
      "type": "object",
      "description": "A custom alert rule.",
      "discriminator": "ruleType",
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the custom alert."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The description of the custom alert."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Status of the custom alert."
        },
        "ruleType": {
          "type": "string",
          "description": "The type of the custom alert rule."
        }
      },
      "required": ["isEnabled", "ruleType"]
    },
    "ListCustomAlertRule": {
      "type": "object",
      "description": "A List custom alert rule.",
      "allOf": [
        {
          "$ref": "#/definitions/CustomAlertRule"
        }
      ],
      "properties": {
        "valueType": {
          "type": "string",
          "description": "The value type of the items in the list.",
          "enum": ["IpCidr", "String"],
          "readOnly": true,
          "x-ms-enum": {
            "name": "valueType",
            "modelAsString": true,
            "values": [
              {
                "value": "IpCidr",
                "description": "An IP range in CIDR format (e.g. '192.168.0.1/8')."
              },
              {
                "value": "String",
                "description": "Any string value."
              }
            ]
          }
        }
      }
    },
    "AllowlistCustomAlertRule": {
      "type": "object",
      "description": "A custom alert rule that checks if a value (depends on the custom alert type) is allowed.",
      "allOf": [
        {
          "$ref": "#/definitions/ListCustomAlertRule"
        }
      ],
      "properties": {
        "allowlistValues": {
          "type": "array",
          "description": "The values to allow. The format of the values depends on the rule type.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["allowlistValues"]
    },
    "ConnectionToIpNotAllowed": {
      "type": "object",
      "description": "Outbound connection to an ip that isn't allowed. Allow list consists of ipv4 or ipv6 range in CIDR notation.",
      "allOf": [
        {
          "$ref": "#/definitions/AllowlistCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "LocalUserNotAllowed": {
      "type": "object",
      "description": "Login by a local user that isn't allowed. Allow list consists of login names to allow.",
      "allOf": [
        {
          "$ref": "#/definitions/AllowlistCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "ProcessNotAllowed": {
      "type": "object",
      "description": "Execution of a process that isn't allowed. Allow list consists of process names to allow.",
      "allOf": [
        {
          "$ref": "#/definitions/AllowlistCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "DenylistCustomAlertRule": {
      "type": "object",
      "description": "A custom alert rule that checks if a value (depends on the custom alert type) is denied.",
      "allOf": [
        {
          "$ref": "#/definitions/ListCustomAlertRule"
        }
      ],
      "properties": {
        "denylistValues": {
          "type": "array",
          "description": "The values to deny. The format of the values depends on the rule type.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["denylistValues"]
    },
    "ThresholdCustomAlertRule": {
      "type": "object",
      "description": "A custom alert rule that checks if a value (depends on the custom alert type) is within the given range.",
      "allOf": [
        {
          "$ref": "#/definitions/CustomAlertRule"
        }
      ],
      "properties": {
        "minThreshold": {
          "type": "integer",
          "description": "The minimum threshold."
        },
        "maxThreshold": {
          "type": "integer",
          "description": "The maximum threshold."
        }
      },
      "required": ["minThreshold", "maxThreshold"]
    },
    "TimeWindowCustomAlertRule": {
      "type": "object",
      "description": "A custom alert rule that checks if the number of activities (depends on the custom alert type) in a time window is within the given range.",
      "allOf": [
        {
          "$ref": "#/definitions/ThresholdCustomAlertRule"
        }
      ],
      "properties": {
        "timeWindowSize": {
          "type": "string",
          "description": "The time window size in iso8601 format.",
          "format": "duration"
        }
      },
      "required": ["timeWindowSize"]
    },
    "ActiveConnectionsNotInAllowedRange": {
      "type": "object",
      "description": "Number of active connections is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "AmqpC2DMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of cloud to device messages (AMQP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "MqttC2DMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of cloud to device messages (MQTT protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "HttpC2DMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of cloud to device messages (HTTP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "AmqpC2DRejectedMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of rejected cloud to device messages (AMQP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "MqttC2DRejectedMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of rejected cloud to device messages (MQTT protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "HttpC2DRejectedMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of rejected cloud to device messages (HTTP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "AmqpD2CMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of device to cloud messages (AMQP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "MqttD2CMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of device to cloud messages (MQTT protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "HttpD2CMessagesNotInAllowedRange": {
      "type": "object",
      "description": "Number of device to cloud messages (HTTP protocol) is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "DirectMethodInvokesNotInAllowedRange": {
      "type": "object",
      "description": "Number of direct method invokes is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "FailedLocalLoginsNotInAllowedRange": {
      "type": "object",
      "description": "Number of failed local logins is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "FileUploadsNotInAllowedRange": {
      "type": "object",
      "description": "Number of file uploads is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "QueuePurgesNotInAllowedRange": {
      "type": "object",
      "description": "Number of device queue purges is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "TwinUpdatesNotInAllowedRange": {
      "type": "object",
      "description": "Number of twin updates is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "UnauthorizedOperationsNotInAllowedRange": {
      "type": "object",
      "description": "Number of unauthorized operations is not in allowed range.",
      "allOf": [
        {
          "$ref": "#/definitions/TimeWindowCustomAlertRule"
        }
      ],
      "properties": {}
    },
    "TagsResource": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "A container holding only the Tags for a resource, allowing the user to update the tags."
    },
    "IoTSecuritySolutionsList": {
      "description": "List of IoT Security solutions.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of IoT Security solutions",
          "items": {
            "$ref": "#/definitions/IoTSecuritySolutionModel"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "IoTSecuritySolutionModel": {
      "type": "object",
      "description": "IoT Security solution configuration and resource information.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security Solution data",
          "$ref": "#/definitions/IoTSecuritySolutionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/TagsResource"
        }
      ]
    },
    "UpdateIoTSecuritySolutionProperties": {
      "type": "object",
      "description": "Update Security Solution setting data",
      "properties": {
        "userDefinedResources": {
          "$ref": "#/definitions/UserDefinedResourcesProperties"
        },
        "recommendationsConfiguration": {
          "$ref": "#/definitions/RecommendationConfigurationList"
        }
      }
    },
    "IoTSecuritySolutionProperties": {
      "type": "object",
      "description": "Security Solution setting data",
      "properties": {
        "workspace": {
          "type": "string",
          "description": "Workspace resource ID"
        },
        "displayName": {
          "type": "string",
          "description": "Resource display name."
        },
        "status": {
          "type": "string",
          "enum": ["Enabled", "Disabled"],
          "default": "Enabled",
          "description": "Status of the IoT Security solution.",
          "x-ms-enum": {
            "name": "SecuritySolutionStatus",
            "modelAsString": true
          }
        },
        "export": {
          "type": "array",
          "items": {
            "enum": ["RawEvents"],
            "type": "string",
            "x-ms-enum": {
              "name": "ExportData",
              "modelAsString": true,
              "values": [
                {
                  "value": "RawEvents",
                  "description": "Agent raw events"
                }
              ]
            }
          },
          "description": "List of additional options for exporting to workspace data."
        },
        "disabledDataSources": {
          "type": "array",
          "items": {
            "enum": ["TwinData"],
            "type": "string",
            "x-ms-enum": {
              "name": "DataSource",
              "modelAsString": true,
              "values": [
                {
                  "value": "TwinData",
                  "description": "Devices twin data"
                }
              ]
            }
          },
          "description": "Disabled data sources. Disabling these data sources compromises the system."
        },
        "iotHubs": {
          "type": "array",
          "description": "IoT Hub resource IDs",
          "items": {
            "type": "string"
          }
        },
        "userDefinedResources": {
          "$ref": "#/definitions/UserDefinedResourcesProperties"
        },
        "autoDiscoveredResources": {
          "type": "array",
          "description": "List of resources that were automatically discovered as relevant to the security solution.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "recommendationsConfiguration": {
          "$ref": "#/definitions/RecommendationConfigurationList"
        },
        "unmaskedIpLoggingStatus": {
          "description": "Unmasked IP address logging status",
          "type": "string",
          "enum": ["Disabled", "Enabled"],
          "default": "Disabled",
          "x-ms-enum": {
            "name": "UnmaskedIpLoggingStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "Unmasked IP logging is disabled"
              },
              {
                "value": "Enabled",
                "description": "Unmasked IP logging is enabled"
              }
            ]
          }
        }
      },
      "required": ["iotHubs", "displayName"]
    },
    "UserDefinedResourcesProperties": {
      "type": "object",
      "description": "Properties of the IoT Security solution's user defined resources.",
      "properties": {
        "query": {
          "type": "string",
          "x-nullable": true,
          "description": "Azure Resource inventory query which represents the security solution's user defined resources. Required to start with \"where type != \"Microsoft.Devices/IotHubs\"\""
        },
        "querySubscriptions": {
          "type": "array",
          "x-nullable": true,
          "description": "List of Azure subscription ids on which the user defined resources query should be executed.",
          "items": {
            "type": "string",
            "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$"
          }
        }
      },
      "required": ["query", "querySubscriptions"]
    },
    "RecommendationConfigurationProperties": {
      "type": "object",
      "description": "The type of IoT Security recommendation.",
      "properties": {
        "recommendationType": {
          "type": "string",
          "description": "The type of IoT Security recommendation.",
          "enum": [
            "IoT_ACRAuthentication",
            "IoT_AgentSendsUnutilizedMessages",
            "IoT_Baseline",
            "IoT_EdgeHubMemOptimize",
            "IoT_EdgeLoggingOptions",
            "IoT_InconsistentModuleSettings",
            "IoT_InstallAgent",
            "IoT_IPFilter_DenyAll",
            "IoT_IPFilter_PermissiveRule",
            "IoT_OpenPorts",
            "IoT_PermissiveFirewallPolicy",
            "IoT_PermissiveInputFirewallRules",
            "IoT_PermissiveOutputFirewallRules",
            "IoT_PrivilegedDockerOptions",
            "IoT_SharedCredentials",
            "IoT_VulnerableTLSCipherSuite"
          ],
          "x-ms-enum": {
            "name": "RecommendationType",
            "modelAsString": true,
            "values": [
              {
                "value": "IoT_ACRAuthentication",
                "description": "Authentication schema used for pull an edge module from an ACR repository does not use Service Principal Authentication."
              },
              {
                "value": "IoT_AgentSendsUnutilizedMessages",
                "description": "IoT agent message size capacity is currently underutilized, causing an increase in the number of sent messages. Adjust message intervals for better utilization."
              },
              {
                "value": "IoT_Baseline",
                "description": "Identified security related system configuration issues."
              },
              {
                "value": "IoT_EdgeHubMemOptimize",
                "description": "You can optimize Edge Hub memory usage by turning off protocol heads for any protocols not used by Edge modules in your solution."
              },
              {
                "value": "IoT_EdgeLoggingOptions",
                "description": "Logging is disabled for this edge module."
              },
              {
                "value": "IoT_InconsistentModuleSettings",
                "description": "A minority within a device security group has inconsistent Edge Module settings with the rest of their group."
              },
              {
                "value": "IoT_InstallAgent",
                "description": "Install the Azure Security of Things Agent."
              },
              {
                "value": "IoT_IPFilter_DenyAll",
                "description": "IP Filter Configuration should have rules defined for allowed traffic and should deny all other traffic by default."
              },
              {
                "value": "IoT_IPFilter_PermissiveRule",
                "description": "An Allow IP Filter rules source IP range is too large. Overly permissive rules might expose your IoT hub to malicious intenders."
              },
              {
                "value": "IoT_OpenPorts",
                "description": "A listening endpoint was found on the device."
              },
              {
                "value": "IoT_PermissiveFirewallPolicy",
                "description": "An Allowed firewall policy was found (INPUT/OUTPUT). The policy should Deny all traffic by default and define rules to allow necessary communication to/from the device."
              },
              {
                "value": "IoT_PermissiveInputFirewallRules",
                "description": "A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports."
              },
              {
                "value": "IoT_PermissiveOutputFirewallRules",
                "description": "A rule in the firewall has been found that contains a permissive pattern for a wide range of IP addresses or Ports."
              },
              {
                "value": "IoT_PrivilegedDockerOptions",
                "description": "Edge module is configured to run in privileged mode, with extensive Linux capabilities or with host-level network access (send/receive data to host machine)."
              },
              {
                "value": "IoT_SharedCredentials",
                "description": "Same authentication credentials to the IoT Hub used by multiple devices. This could indicate an illegitimate device impersonating a legitimate device. It also exposes the risk of device impersonation by an attacker."
              },
              {
                "value": "IoT_VulnerableTLSCipherSuite",
                "description": "Insecure TLS configurations detected. Immediate upgrade recommended."
              }
            ]
          }
        },
        "name": {
          "type": "string",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": ["Disabled", "Enabled"],
          "default": "Enabled",
          "description": "Recommendation status. When the recommendation status is disabled recommendations are not generated.",
          "x-ms-enum": {
            "name": "RecommendationConfigStatus",
            "modelAsString": true
          }
        }
      },
      "required": ["recommendationType", "status"]
    },
    "RecommendationConfigurationList": {
      "type": "array",
      "description": "List of the configuration status for each recommendation type.",
      "items": {
        "$ref": "#/definitions/RecommendationConfigurationProperties"
      }
    },
    "UpdateIotSecuritySolutionData": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security Solution data",
          "$ref": "#/definitions/UpdateIoTSecuritySolutionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TagsResource"
        }
      ]
    },
    "IoTSeverityMetrics": {
      "type": "object",
      "description": "IoT Security solution analytics severity metrics.",
      "properties": {
        "high": {
          "type": "integer",
          "description": "Count of high severity alerts/recommendations."
        },
        "medium": {
          "type": "integer",
          "description": "Count of medium severity alerts/recommendations."
        },
        "low": {
          "type": "integer",
          "description": "Count of low severity alerts/recommendations."
        }
      }
    },
    "IoTSecuritySolutionAnalyticsModel": {
      "type": "object",
      "description": "Security analytics of your IoT Security solution",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security Solution  Aggregated Alert data",
          "$ref": "#/definitions/IoTSecuritySolutionAnalyticsModelProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "IoTSecuritySolutionAnalyticsModelProperties": {
      "description": "Security analytics properties of your IoT Security solution",
      "properties": {
        "metrics": {
          "type": "object",
          "$ref": "#/definitions/IoTSeverityMetrics",
          "description": "Security analytics of your IoT Security solution.",
          "readOnly": true
        },
        "unhealthyDeviceCount": {
          "type": "integer",
          "readOnly": true,
          "description": "Number of unhealthy devices within your IoT Security solution."
        },
        "devicesMetrics": {
          "description": "List of device metrics by the aggregation date.",
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "date": {
                "type": "string",
                "format": "date-time",
                "description": "Aggregation of IoT Security solution device alert metrics by date."
              },
              "devicesMetrics": {
                "type": "object",
                "$ref": "#/definitions/IoTSeverityMetrics",
                "description": "Device alert count by severity."
              }
            }
          }
        },
        "topAlertedDevices": {
          "description": "List of the 3 devices with the most alerts.",
          "type": "object",
          "$ref": "#/definitions/IoTSecurityAlertedDevicesList"
        },
        "mostPrevalentDeviceAlerts": {
          "description": "List of the 3 most prevalent device alerts.",
          "type": "object",
          "$ref": "#/definitions/IoTSecurityDeviceAlertsList"
        },
        "mostPrevalentDeviceRecommendations": {
          "description": "List of the 3 most prevalent device recommendations.",
          "type": "object",
          "$ref": "#/definitions/IoTSecurityDeviceRecommendationsList"
        }
      }
    },
    "IoTSecuritySolutionAnalyticsModelList": {
      "description": "List of Security analytics of your IoT Security solution",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Security analytics of your IoT Security solution",
          "items": {
            "$ref": "#/definitions/IoTSecuritySolutionAnalyticsModel"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "When there is too much alert data for one page, use this URI to fetch the next page."
        }
      }
    },
    "IoTSecurityAggregatedAlertList": {
      "description": "List of IoT Security solution aggregated alert data.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of aggregated alerts data.",
          "items": {
            "$ref": "#/definitions/IoTSecurityAggregatedAlert"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "When there is too much alert data for one page, use this URI to fetch the next page."
        }
      }
    },
    "IoTSecurityAggregatedRecommendationList": {
      "description": "List of IoT Security solution aggregated recommendations.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of aggregated recommendations data.",
          "items": {
            "$ref": "#/definitions/IoTSecurityAggregatedRecommendation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "When there is too much alert data for one page, use this URI to fetch the next page."
        }
      }
    },
    "IoTSecurityAlertedDevicesList": {
      "description": "List of devices with open alerts including the count of alerts per device.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IoTSecurityAlertedDevice"
      }
    },
    "IoTSecurityDeviceAlertsList": {
      "description": "List of alerts with the count of raised alerts",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IoTSecurityDeviceAlert"
      }
    },
    "IoTSecurityDeviceRecommendationsList": {
      "description": "List of aggregated recommendation data, per recommendation type, per device.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/IoTSecurityDeviceRecommendation"
      }
    },
    "IoTSecurityAggregatedAlert": {
      "type": "object",
      "description": "Security Solution Aggregated Alert information",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "IoT Security solution aggregated alert details.",
          "$ref": "#/definitions/IoTSecurityAggregatedAlertProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/TagsResource"
        }
      ]
    },
    "IoTSecurityAggregatedAlertProperties": {
      "type": "object",
      "description": "IoT Security solution aggregated alert details.",
      "properties": {
        "alertType": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the alert type."
        },
        "alertDisplayName": {
          "readOnly": true,
          "type": "string",
          "description": "Display name of the alert type."
        },
        "aggregatedDateUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date",
          "description": "Date of detection."
        },
        "vendorName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the organization that raised the alert."
        },
        "reportedSeverity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "reportedSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "Assessed alert severity."
        },
        "remediationSteps": {
          "readOnly": true,
          "type": "string",
          "description": "Recommended steps for remediation."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the suspected vulnerability and meaning."
        },
        "count": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of alerts occurrences within the aggregated time window."
        },
        "effectedResourceType": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource ID of the resource that received the alerts."
        },
        "systemSource": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the alerted resource (Azure, Non-Azure)."
        },
        "actionTaken": {
          "readOnly": true,
          "type": "string",
          "description": "IoT Security solution alert response."
        },
        "logAnalyticsQuery": {
          "readOnly": true,
          "type": "string",
          "description": "Log analytics query for getting the list of affected devices/alerts."
        },
        "topDevicesList": {
          "description": "10 devices with the highest number of occurrences of this alert type, on this day.",
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "deviceId": {
                "readOnly": true,
                "type": "string",
                "description": "Name of the device."
              },
              "alertsCount": {
                "readOnly": true,
                "type": "integer",
                "description": "Number of alerts raised for this device."
              },
              "lastOccurrence": {
                "readOnly": true,
                "type": "string",
                "description": "Most recent time this alert was raised for this device, on this day."
              }
            }
          }
        }
      }
    },
    "IoTSecurityAggregatedRecommendation": {
      "type": "object",
      "description": "IoT Security solution recommendation information.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security Solution data",
          "$ref": "#/definitions/IoTSecurityAggregatedRecommendationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/TagsResource"
        }
      ]
    },
    "IoTSecurityAggregatedRecommendationProperties": {
      "type": "object",
      "description": "IoT Security solution aggregated recommendation information",
      "properties": {
        "recommendationName": {
          "type": "string",
          "description": "Name of the recommendation."
        },
        "recommendationDisplayName": {
          "readOnly": true,
          "type": "string",
          "description": "Display name of the recommendation type."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the suspected vulnerability and meaning."
        },
        "recommendationTypeId": {
          "description": "Recommendation-type GUID.",
          "type": "string",
          "readOnly": true
        },
        "detectedBy": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the organization that made the recommendation."
        },
        "remediationSteps": {
          "readOnly": true,
          "type": "string",
          "description": "Recommended steps for remediation"
        },
        "reportedSeverity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "reportedSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "Assessed recommendation severity."
        },
        "healthyDevices": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of healthy devices within the IoT Security solution."
        },
        "unhealthyDeviceCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of unhealthy devices within the IoT Security solution."
        },
        "logAnalyticsQuery": {
          "readOnly": true,
          "type": "string",
          "description": "Log analytics query for getting the list of affected devices/alerts."
        }
      }
    },
    "IoTSecurityAlertedDevice": {
      "type": "object",
      "description": "Statistical information about the number of alerts per device during last set number of days.",
      "properties": {
        "deviceId": {
          "readOnly": true,
          "type": "string",
          "description": "Device identifier."
        },
        "alertsCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of alerts raised for this device."
        }
      }
    },
    "IoTSecurityDeviceAlert": {
      "type": "object",
      "description": "Statistical information about the number of alerts per alert type during last set number of days",
      "properties": {
        "alertDisplayName": {
          "readOnly": true,
          "type": "string",
          "description": "Display name of the alert"
        },
        "reportedSeverity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "reportedSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "Assessed Alert severity."
        },
        "alertsCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of alerts raised for this alert type."
        }
      }
    },
    "IoTSecurityDeviceRecommendation": {
      "type": "object",
      "description": "Statistical information about the number of recommendations per device, per recommendation type.",
      "properties": {
        "recommendationDisplayName": {
          "readOnly": true,
          "type": "string",
          "description": "Display name of the recommendation."
        },
        "reportedSeverity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "reportedSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "Assessed recommendation severity."
        },
        "devicesCount": {
          "readOnly": true,
          "type": "integer",
          "description": "Number of devices with this recommendation."
        }
      }
    },
    "IotAlertTypeList": {
      "type": "object",
      "description": "List of alert types",
      "properties": {
        "value": {
          "type": "array",
          "description": "List data",
          "items": {
            "$ref": "#/definitions/IotAlertType"
          }
        }
      }
    },
    "IotAlertType": {
      "type": "object",
      "description": "IoT alert type.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Alert type properties",
          "$ref": "#/definitions/IotAlertTypeProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "IotAlertTypeProperties": {
      "type": "object",
      "description": "IoT alert type information.",
      "properties": {
        "alertDisplayName": {
          "readOnly": true,
          "type": "string",
          "example": "Privileged container detected",
          "description": "The display name of the alert"
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "example": "Medium",
          "description": "The severity of the alert",
          "enum": ["Informational", "Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "alertSeverity",
            "modelAsString": true,
            "values": [
              {
                "value": "Informational"
              },
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          }
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the suspected vulnerability and meaning.",
          "example": "Machine logs indicate that a privileged Docker container is running. A privileged container has full access to host  resources. If compromised, a malicious actor can use the privileged container to gain access to the host machine."
        },
        "providerName": {
          "readOnly": true,
          "type": "string",
          "example": "IoTSecurity",
          "description": "The name of the alert provider or internal partner"
        },
        "vendorName": {
          "readOnly": true,
          "type": "string",
          "example": "Microsoft",
          "description": "The name of the vendor that raise the alert"
        },
        "intent": {
          "readOnly": true,
          "type": "string",
          "example": "Exploitation,Execution",
          "description": "Kill chain related intent behind the alert. Could contain multiple enum values (separated by commas)",
          "enum": [
            "Unknown",
            "PreAttack",
            "InitialAccess",
            "Persistence",
            "PrivilegeEscalation",
            "DefenseEvasion",
            "CredentialAccess",
            "Discovery",
            "LateralMovement",
            "Execution",
            "Collection",
            "Exfiltration",
            "CommandAndControl",
            "Impact",
            "Probing",
            "Exploitation"
          ],
          "x-ms-enum": {
            "name": "alertIntent",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown"
              },
              {
                "value": "PreAttack"
              },
              {
                "value": "InitialAccess"
              },
              {
                "value": "Persistence"
              },
              {
                "value": "PrivilegeEscalation"
              },
              {
                "value": "DefenseEvasion"
              },
              {
                "value": "CredentialAccess"
              },
              {
                "value": "Discovery"
              },
              {
                "value": "LateralMovement"
              },
              {
                "value": "Execution"
              },
              {
                "value": "Collection"
              },
              {
                "value": "Exfiltration"
              },
              {
                "value": "CommandAndControl"
              },
              {
                "value": "Impact"
              },
              {
                "value": "Probing"
              },
              {
                "value": "Exploitation"
              }
            ]
          }
        },
        "remediationSteps": {
          "readOnly": true,
          "description": "Manual action items to take to remediate the alert",
          "type": "array",
          "items": {
            "type": "string",
            "example": "If the container doesn't need to run in privileged mode, remove the privileges from the container."
          }
        }
      }
    },
    "IotAlertList": {
      "description": "List of IoT alerts",
      "type": "object",
      "properties": {
        "value": {
          "description": "List data",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/IotAlert"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "When available, follow the URI to get the next page of data"
        },
        "totalCount": {
          "readOnly": true,
          "format": "int32",
          "type": "integer",
          "description": "Total count of alerts that conforms with the given filter options (not affected by page size)"
        }
      }
    },
    "IotAlert": {
      "type": "object",
      "description": "IoT alert",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Alert properties",
          "$ref": "#/definitions/IotAlertProperties"
        }
      }
    },
    "IotAlertProperties": {
      "type": "object",
      "description": "IoT alert properties",
      "properties": {
        "systemAlertId": {
          "description": "Holds the product canonical identifier of the alert within the scope of a product",
          "readOnly": true,
          "type": "string",
          "example": "903e76ff-17eb-4bac-ac8a-2bc31ab68fd8"
        },
        "compromisedEntity": {
          "description": "Display name of the main entity being reported on",
          "readOnly": true,
          "type": "string",
          "example": "device-1"
        },
        "alertType": {
          "description": "The type name of the alert",
          "readOnly": true,
          "type": "string",
          "example": "IoT_PrivilegedContainer"
        },
        "startTimeUtc": {
          "description": "The impact start time of the alert (the time of the first event or activity included in the alert)",
          "readOnly": true,
          "type": "string",
          "example": "2020-05-13T06:32:25Z"
        },
        "endTimeUtc": {
          "description": "The impact end time of the alert (the time of the last event or activity included in the alert)",
          "readOnly": true,
          "type": "string",
          "example": "2020-05-13T06:32:25Z"
        },
        "entities": {
          "description": "A list of entities related to the alert",
          "type": "array",
          "items": {
            "type": "object"
          },
          "example": [
            {
              "$id": "1",
              "CommandLine": "docker run --privileged",
              "Type": "process"
            }
          ]
        },
        "extendedProperties": {
          "type": "object",
          "description": "A bag of fields which extends the alert information",
          "example": {
            "CommandLine": "docker run --privileged",
            "User Name": "aUser",
            "UserId": "",
            "ParentProcessId": 1593,
            "DeviceId": "device-1"
          }
        }
      }
    },
    "AscLocationList": {
      "type": "object",
      "description": "List of locations where ASC saves your data",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AscLocation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "OperationList": {
      "type": "object",
      "description": "List of possible operations for Microsoft.Security resource provider",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Security operations",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "Possible operation in the REST API of Microsoft.Security",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the operation"
        },
        "origin": {
          "readOnly": true,
          "type": "string",
          "description": "Where the operation is originated"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        }
      }
    },
    "OperationDisplay": {
      "type": "object",
      "description": "Security operation display",
      "properties": {
        "provider": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provider for the operation."
        },
        "resource": {
          "readOnly": true,
          "type": "string",
          "description": "The display name of the resource the operation applies to."
        },
        "operation": {
          "readOnly": true,
          "type": "string",
          "description": "The display name of the security operation."
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "The description of the operation."
        }
      }
    },
    "SecurityTaskList": {
      "type": "object",
      "description": "List of security task recommendations",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityTask"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecurityTask": {
      "type": "object",
      "description": "Security task that we recommend to do in order to strengthen security",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityTaskProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecurityTaskProperties": {
      "type": "object",
      "description": "Describes properties of a task.",
      "properties": {
        "state": {
          "readOnly": true,
          "type": "string",
          "description": "State of the task (Active, Resolved etc.)"
        },
        "creationTimeUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time this task was discovered in UTC"
        },
        "securityTaskParameters": {
          "$ref": "#/definitions/SecurityTaskParameters"
        },
        "lastStateChangeTimeUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The time this task's details were last changed in UTC"
        },
        "subState": {
          "readOnly": true,
          "type": "string",
          "description": "Additional data on the state of the task"
        }
      }
    },
    "SecurityTaskParameters": {
      "type": "object",
      "description": "Changing set of properties, depending on the task type that is derived from the name field",
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the task type"
        }
      }
    },
    "AutoProvisioningSettingList": {
      "type": "object",
      "description": "List of all the auto provisioning settings response",
      "properties": {
        "value": {
          "description": "List of all the auto provisioning settings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutoProvisioningSetting"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "AutoProvisioningSetting": {
      "type": "object",
      "description": "Auto provisioning setting",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Auto provisioning setting data",
          "$ref": "#/definitions/AutoProvisioningSettingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "AutoProvisioningSettingProperties": {
      "type": "object",
      "description": "describes properties of an auto provisioning setting",
      "properties": {
        "autoProvision": {
          "type": "string",
          "description": "Describes what kind of security agent provisioning action to take",
          "enum": ["On", "Off"],
          "x-ms-enum": {
            "name": "autoProvision",
            "modelAsString": true,
            "values": [
              {
                "value": "On",
                "description": "Install missing security agent on VMs automatically"
              },
              {
                "value": "Off",
                "description": "Do not install security agent on the VMs automatically"
              }
            ]
          }
        }
      },
      "required": ["autoProvision"]
    },
    "ComplianceList": {
      "type": "object",
      "readOnly": true,
      "description": "List of Compliance objects response",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of Compliance objects",
          "items": {
            "$ref": "#/definitions/Compliance"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "Compliance": {
      "type": "object",
      "readOnly": true,
      "description": "Compliance of a scope",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Compliance data",
          "$ref": "#/definitions/ComplianceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ComplianceProperties": {
      "type": "object",
      "description": "The Compliance score (percentage) of a Subscription is a sum of all Resources' Compliances under the given Subscription. A Resource Compliance is defined as the compliant ('healthy') Policy Definitions out of all Policy Definitions applicable to a given resource.",
      "properties": {
        "assessmentTimestampUtcDate": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the Compliance calculation was conducted."
        },
        "resourceCount": {
          "readOnly": true,
          "type": "integer",
          "description": "The resource count of the given subscription for which the Compliance calculation was conducted (needed for Management Group Compliance calculation)."
        },
        "assessmentResult": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComplianceSegment"
          },
          "description": "An array of segment, which is the actually the compliance assessment."
        }
      }
    },
    "ComplianceSegment": {
      "type": "object",
      "description": "A segment of a compliance assessment.",
      "properties": {
        "segmentType": {
          "readOnly": true,
          "type": "string",
          "description": "The segment type, e.g. compliant, non-compliance, insufficient coverage, N/A, etc."
        },
        "percentage": {
          "type": "number",
          "format": "double",
          "readOnly": true,
          "description": "The size (%) of the segment."
        }
      }
    },
    "InformationProtectionPolicyList": {
      "type": "object",
      "readOnly": true,
      "description": "Information protection policies response.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of information protection policies.",
          "items": {
            "$ref": "#/definitions/InformationProtectionPolicy"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "InformationProtectionPolicy": {
      "type": "object",
      "description": "Information protection policy.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Information protection policy data",
          "$ref": "#/definitions/InformationProtectionPolicyProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "InformationProtectionPolicyProperties": {
      "type": "object",
      "description": "describes properties of an information protection policy.",
      "properties": {
        "lastModifiedUtc": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "Describes the last UTC time the policy was modified."
        },
        "version": {
          "type": "string",
          "readOnly": true,
          "description": "Describes the version of the policy."
        },
        "labels": {
          "type": "object",
          "description": "Dictionary of sensitivity labels.",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/definitions/SensitivityLabel"
          }
        },
        "informationTypes": {
          "type": "object",
          "description": "The sensitivity information types.",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/definitions/InformationType"
          }
        }
      }
    },
    "SensitivityLabel": {
      "type": "object",
      "description": "The sensitivity label.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The name of the sensitivity label."
        },
        "description": {
          "type": "string",
          "description": "The description of the sensitivity label."
        },
        "rank": {
          "type": "string",
          "description": "The rank of the sensitivity label.",
          "enum": ["None", "Low", "Medium", "High", "Critical"],
          "x-ms-enum": {
            "name": "rank",
            "modelAsString": false
          }
        },
        "order": {
          "format": "int32",
          "description": "The order of the sensitivity label.",
          "type": "integer"
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the label is enabled or not."
        }
      }
    },
    "InformationType": {
      "type": "object",
      "description": "The information type.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The name of the information type."
        },
        "description": {
          "type": "string",
          "description": "The description of the information type."
        },
        "order": {
          "format": "int32",
          "description": "The order of the information type.",
          "type": "integer"
        },
        "recommendedLabelId": {
          "type": "string",
          "format": "uuid",
          "description": "The recommended label id to be associated with this information type."
        },
        "enabled": {
          "type": "boolean",
          "description": "Indicates whether the information type is enabled or not."
        },
        "custom": {
          "type": "boolean",
          "description": "Indicates whether the information type is custom or not."
        },
        "keywords": {
          "type": "array",
          "description": "The information type keywords.",
          "items": {
            "$ref": "#/definitions/InformationProtectionKeyword"
          }
        }
      }
    },
    "InformationProtectionKeyword": {
      "type": "object",
      "description": "The information type keyword.",
      "properties": {
        "pattern": {
          "type": "string",
          "description": "The keyword pattern."
        },
        "custom": {
          "type": "boolean",
          "description": "Indicates whether the keyword is custom or not."
        },
        "canBeNumeric": {
          "type": "boolean",
          "description": "Indicates whether the keyword can be applied on numeric types or not."
        },
        "excluded": {
          "type": "boolean",
          "description": "Indicates whether the keyword is excluded or not."
        }
      }
    },
    "SecurityContactList": {
      "type": "object",
      "description": "List of security contacts response",
      "properties": {
        "value": {
          "readOnly": true,
          "description": "List of security contacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityContact"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecurityContact": {
      "type": "object",
      "description": "Contact details for security issues",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security contact data",
          "$ref": "#/definitions/SecurityContactProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecurityContactProperties": {
      "type": "object",
      "description": "describes security contact properties",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email of this security contact"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of this security contact"
        },
        "alertNotifications": {
          "type": "string",
          "enum": ["On", "Off"],
          "x-ms-enum": {
            "name": "alertNotifications",
            "modelAsString": true,
            "values": [
              {
                "value": "On",
                "description": "Get notifications on new alerts"
              },
              {
                "value": "Off",
                "description": "Don't get notifications on new alerts"
              }
            ]
          },
          "description": "Whether to send security alerts notifications to the security contact"
        },
        "alertsToAdmins": {
          "type": "string",
          "enum": ["On", "Off"],
          "x-ms-enum": {
            "name": "alertsToAdmins",
            "modelAsString": true,
            "values": [
              {
                "value": "On",
                "description": "Send notification on new alerts to the subscription's admins"
              },
              {
                "value": "Off",
                "description": "Don't send notification on new alerts to the subscription's admins"
              }
            ]
          },
          "description": "Whether to send security alerts notifications to subscription admins"
        }
      },
      "required": ["email", "alertNotifications", "alertsToAdmins"]
    },
    "WorkspaceSettingList": {
      "description": "List of workspace settings response",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of workspace settings",
          "items": {
            "$ref": "#/definitions/WorkspaceSetting"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "WorkspaceSetting": {
      "type": "object",
      "description": "Configures where to store the OMS agent data for workspaces under a scope",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Workspace setting data",
          "$ref": "#/definitions/WorkspaceSettingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "WorkspaceSettingProperties": {
      "type": "object",
      "description": "Workspace setting data",
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "The full Azure ID of the workspace to save the data in"
        },
        "scope": {
          "type": "string",
          "description": "All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope"
        }
      },
      "required": ["workspaceId", "scope"]
    },
    "RegulatoryComplianceStandardList": {
      "description": "List of regulatory compliance standards response",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegulatoryComplianceStandard"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "RegulatoryComplianceStandard": {
      "type": "object",
      "description": "Regulatory compliance standard details and state",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Regulatory compliance standard data",
          "$ref": "#/definitions/RegulatoryComplianceStandardProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "RegulatoryComplianceStandardProperties": {
      "type": "object",
      "description": "Regulatory compliance standard data",
      "properties": {
        "state": {
          "type": "string",
          "description": "Aggregative state based on the standard's supported controls states",
          "enum": ["Passed", "Failed", "Skipped", "Unsupported"],
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true,
            "values": [
              {
                "value": "Passed",
                "description": "All supported regulatory compliance controls in the given standard have a passed state"
              },
              {
                "value": "Failed",
                "description": "At least one supported regulatory compliance control in the given standard has a state of failed"
              },
              {
                "value": "Skipped",
                "description": "All supported regulatory compliance controls in the given standard have a state of skipped"
              },
              {
                "value": "Unsupported",
                "description": "No supported regulatory compliance data for the given standard"
              }
            ]
          }
        },
        "passedControls": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance controls of the given standard with a passed state"
        },
        "failedControls": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance controls of the given standard with a failed state"
        },
        "skippedControls": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance controls of the given standard with a skipped state"
        },
        "unsupportedControls": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of regulatory compliance controls of the given standard which are unsupported by automated assessments"
        }
      }
    },
    "RegulatoryComplianceControlList": {
      "description": "List of regulatory compliance controls response",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "List of regulatory compliance controls",
          "items": {
            "$ref": "#/definitions/RegulatoryComplianceControl"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "RegulatoryComplianceControl": {
      "type": "object",
      "description": "Regulatory compliance control details and state",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Regulatory compliance control data",
          "$ref": "#/definitions/RegulatoryComplianceControlProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "RegulatoryComplianceControlProperties": {
      "type": "object",
      "description": "Regulatory compliance control data",
      "properties": {
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "The description of the regulatory compliance control"
        },
        "state": {
          "type": "string",
          "description": "Aggregative state based on the control's supported assessments states",
          "enum": ["Passed", "Failed", "Skipped", "Unsupported"],
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true,
            "values": [
              {
                "value": "Passed",
                "description": "All supported regulatory compliance assessments in the given control have a passed state"
              },
              {
                "value": "Failed",
                "description": "At least one supported regulatory compliance assessment in the given control has a state of failed"
              },
              {
                "value": "Skipped",
                "description": "All supported regulatory compliance assessments in the given control have a state of skipped"
              },
              {
                "value": "Unsupported",
                "description": "No supported regulatory assessment data for the given control"
              }
            ]
          }
        },
        "passedAssessments": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance assessments of the given control with a passed state"
        },
        "failedAssessments": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance assessments of the given control with a failed state"
        },
        "skippedAssessments": {
          "readOnly": true,
          "type": "integer",
          "description": "The number of supported regulatory compliance assessments of the given control with a skipped state"
        }
      }
    },
    "RegulatoryComplianceAssessmentList": {
      "description": "List of regulatory compliance assessment response",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegulatoryComplianceAssessment"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "RegulatoryComplianceAssessment": {
      "type": "object",
      "description": "Regulatory compliance assessment details and state",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Regulatory compliance assessment data",
          "$ref": "#/definitions/RegulatoryComplianceAssessmentProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "RegulatoryComplianceAssessmentProperties": {
      "type": "object",
      "description": "Regulatory compliance assessment data",
      "properties": {
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "The description of the regulatory compliance assessment"
        },
        "assessmentType": {
          "readOnly": true,
          "type": "string",
          "description": "The expected type of assessment contained in the AssessmentDetailsLink"
        },
        "assessmentDetailsLink": {
          "readOnly": true,
          "type": "string",
          "description": "Link to more detailed assessment results data. The response type will be according to the assessmentType field"
        },
        "state": {
          "type": "string",
          "description": "Aggregative state based on the assessment's scanned resources states",
          "enum": ["Passed", "Failed", "Skipped", "Unsupported"],
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true,
            "values": [
              {
                "value": "Passed",
                "description": "All related resources passed the given assessment"
              },
              {
                "value": "Failed",
                "description": "The given assessment failed on at least one resource"
              },
              {
                "value": "Skipped",
                "description": "The given assessment skipped on all related resources"
              },
              {
                "value": "Unsupported",
                "description": "The given assessment has no supported resources"
              }
            ]
          }
        },
        "passedResources": {
          "readOnly": true,
          "type": "integer",
          "description": "The given assessment's related resources count with passed state."
        },
        "failedResources": {
          "readOnly": true,
          "type": "integer",
          "description": "The given assessment's related resources count with failed state."
        },
        "skippedResources": {
          "readOnly": true,
          "type": "integer",
          "description": "The given assessment's related resources count with skipped state."
        },
        "unsupportedResources": {
          "readOnly": true,
          "type": "integer",
          "description": "The given assessment's related resources count with unsupported state."
        }
      }
    },
    "SecuritySubAssessmentList": {
      "type": "object",
      "description": "List of security sub-assessments",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySubAssessment"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecuritySubAssessment": {
      "type": "object",
      "description": "Security sub-assessment on a resource",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecuritySubAssessmentProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecuritySubAssessmentProperties": {
      "type": "object",
      "description": "Describes properties of an sub-assessment.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Vulnerability ID"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "User friendly display name of the sub-assessment"
        },
        "status": {
          "$ref": "#/definitions/SubAssessmentStatus"
        },
        "remediation": {
          "readOnly": true,
          "type": "string",
          "description": "Information on how to remediate this sub-assessment"
        },
        "impact": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the impact of this sub-assessment"
        },
        "category": {
          "readOnly": true,
          "type": "string",
          "description": "Category of the sub-assessment"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Human readable description of the assessment status"
        },
        "timeGenerated": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The date and time the sub-assessment was generated"
        },
        "resourceDetails": {
          "$ref": "#/definitions/ResourceDetails"
        },
        "additionalData": {
          "$ref": "#/definitions/AdditionalData"
        }
      }
    },
    "AdditionalData": {
      "type": "object",
      "description": "Details of the sub-assessment",
      "discriminator": "assessedResourceType",
      "properties": {
        "assessedResourceType": {
          "type": "string",
          "description": "Sub-assessment resource type",
          "enum": ["SqlServerVulnerability", "ContainerRegistryVulnerability", "ServerVulnerability"],
          "x-ms-enum": {
            "name": "AssessedResourceType",
            "modelAsString": true,
            "values": [
              {
                "value": "SqlServerVulnerability"
              },
              {
                "value": "ContainerRegistryVulnerability"
              },
              {
                "value": "ServerVulnerability"
              }
            ]
          }
        }
      },
      "required": ["assessedResourceType"]
    },
    "SubAssessmentStatus": {
      "type": "object",
      "description": "Status of the sub-assessment",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "Programmatic code for the status of the assessment",
          "enum": ["Healthy", "Unhealthy", "NotApplicable"],
          "x-ms-enum": {
            "name": "SubAssessmentStatusCode",
            "modelAsString": true,
            "values": [
              {
                "value": "Healthy",
                "description": "The resource is healthy"
              },
              {
                "value": "Unhealthy",
                "description": "The resource has a security issue that needs to be addressed"
              },
              {
                "value": "NotApplicable",
                "description": "Assessment for this resource did not happen"
              }
            ]
          }
        },
        "cause": {
          "readOnly": true,
          "type": "string",
          "description": "Programmatic code for the cause of the assessment status"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Human readable description of the assessment status"
        },
        "severity": {
          "readOnly": true,
          "type": "string",
          "enum": ["Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "severity",
            "modelAsString": true,
            "values": [
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          },
          "description": "The sub-assessment severity level"
        }
      }
    },
    "SqlServerVulnerabilityProperties": {
      "type": "object",
      "description": "Details of the resource that was assessed",
      "x-ms-discriminator-value": "SqlServerVulnerability",
      "allOf": [
        {
          "$ref": "#/definitions/AdditionalData"
        }
      ],
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type the sub assessment refers to in its resource details"
        },
        "query": {
          "readOnly": true,
          "type": "string",
          "description": "The T-SQL query that runs on your SQL database to perform the particular check"
        }
      }
    },
    "ContainerRegistryVulnerabilityProperties": {
      "type": "object",
      "description": "Additional context fields for container registry Vulnerability assessment",
      "x-ms-discriminator-value": "ContainerRegistryVulnerability",
      "allOf": [
        {
          "$ref": "#/definitions/AdditionalData"
        }
      ],
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered, Vulnerability"
        },
        "cvss": {
          "readOnly": true,
          "type": "object",
          "description": "Dictionary from cvss version to cvss details object",
          "additionalProperties": {
            "$ref": "#/definitions/CVSS"
          }
        },
        "patchable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Indicates whether a patch is available or not"
        },
        "cve": {
          "readOnly": true,
          "type": "array",
          "description": "List of CVEs",
          "items": {
            "$ref": "#/definitions/CVE"
          }
        },
        "publishedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Published time"
        },
        "vendorReferences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorReference"
          }
        },
        "repositoryName": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the repository which the vulnerable image belongs to"
        },
        "imageDigest": {
          "readOnly": true,
          "type": "string",
          "description": "Digest of the vulnerable image"
        }
      }
    },
    "ServerVulnerabilityProperties": {
      "type": "object",
      "description": "Additional context fields for server vulnerability assessment",
      "x-ms-discriminator-value": "ServerVulnerabilityAssessment",
      "allOf": [
        {
          "$ref": "#/definitions/AdditionalData"
        }
      ],
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Vulnerability Type. e.g: Vulnerability, Potential Vulnerability, Information Gathered"
        },
        "cvss": {
          "readOnly": true,
          "type": "object",
          "description": "Dictionary from cvss version to cvss details object",
          "additionalProperties": {
            "$ref": "#/definitions/CVSS"
          }
        },
        "patchable": {
          "readOnly": true,
          "type": "boolean",
          "description": "Indicates whether a patch is available or not"
        },
        "cve": {
          "readOnly": true,
          "type": "array",
          "description": "List of CVEs",
          "items": {
            "$ref": "#/definitions/CVE"
          }
        },
        "threat": {
          "readOnly": true,
          "type": "string",
          "description": "Threat name"
        },
        "publishedTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Published time"
        },
        "vendorReferences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorReference"
          }
        }
      }
    },
    "CVSS": {
      "type": "object",
      "description": "CVSS details",
      "properties": {
        "base": {
          "readOnly": true,
          "type": "number",
          "description": "CVSS base"
        }
      }
    },
    "CVE": {
      "type": "object",
      "description": "CVE details",
      "properties": {
        "title": {
          "readOnly": true,
          "type": "string",
          "description": "CVE title"
        },
        "link": {
          "readOnly": true,
          "type": "string",
          "description": "Link url"
        }
      }
    },
    "VendorReference": {
      "type": "object",
      "description": "Vendor reference",
      "properties": {
        "title": {
          "readOnly": true,
          "type": "string",
          "description": "Link title"
        },
        "link": {
          "readOnly": true,
          "type": "string",
          "description": "Link url"
        }
      }
    },
    "OnPremiseResourceDetails": {
      "type": "object",
      "description": "Details of the On Premise resource that was assessed",
      "x-ms-discriminator-value": "OnPremise",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceDetails"
        }
      ],
      "properties": {
        "workspaceId": {
          "type": "string",
          "description": "Azure resource Id of the workspace the machine is attached to"
        },
        "vmuuid": {
          "type": "string",
          "description": "The unique Id of the machine"
        },
        "sourceComputerId": {
          "type": "string",
          "description": "The oms agent Id installed on the machine"
        },
        "machineName": {
          "type": "string",
          "description": "The name of the machine"
        }
      },
      "required": ["workspaceId", "vmuuid", "sourceComputerId", "machineName"]
    },
    "AzureResourceDetails": {
      "type": "object",
      "description": "Details of the Azure resource that was assessed",
      "x-ms-discriminator-value": "Azure",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceDetails"
        }
      ],
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource Id of the assessed resource"
        }
      }
    },
    "ResourceDetails": {
      "type": "object",
      "description": "Details of the resource that was assessed",
      "discriminator": "source",
      "properties": {
        "source": {
          "type": "string",
          "description": "The platform where the assessed resource resides",
          "enum": ["Azure", "OnPremise"],
          "x-ms-enum": {
            "name": "source",
            "modelAsString": true,
            "values": [
              {
                "value": "Azure",
                "description": "Resource is in Azure"
              },
              {
                "value": "OnPremise",
                "description": "Resource in an on premise machine connected to Azure cloud"
              }
            ]
          }
        }
      },
      "required": ["source"]
    },
    "AutomationList": {
      "description": "List of security automations response.",
      "required": ["value"],
      "properties": {
        "value": {
          "type": "array",
          "description": "The list of security automations under the given scope.",
          "items": {
            "$ref": "#/definitions/Automation"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "Automation": {
      "type": "object",
      "description": "The security automation resource.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Security automation data",
          "$ref": "#/definitions/AutomationProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "AutomationProperties": {
      "type": "object",
      "description": "A set of properties that defines the behavior of the automation configuration. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The security automation description."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Indicates whether the security automation is enabled."
        },
        "scopes": {
          "type": "array",
          "description": "A collection of scopes on which the security automations logic is applied. Supported scopes are the subscription itself or a resource group under that subscription. The automation will only apply on defined scopes.",
          "items": {
            "$ref": "#/definitions/AutomationScope"
          }
        },
        "sources": {
          "type": "array",
          "description": "A collection of the source event types which evaluate the security automation set of rules.",
          "items": {
            "$ref": "#/definitions/AutomationSource"
          }
        },
        "actions": {
          "type": "array",
          "description": "A collection of the actions which are triggered if all the configured rules evaluations, within at least one rule set, are true.",
          "items": {
            "$ref": "#/definitions/AutomationAction"
          }
        }
      }
    },
    "AutomationSource": {
      "type": "object",
      "description": "The source event types which evaluate the security automation set of rules. For example - security alerts and security assessments. To learn more about the supported security events data models schemas - please visit https://aka.ms/ASCAutomationSchemas.",
      "properties": {
        "eventSource": {
          "type": "string",
          "description": "A valid event source type.",
          "enum": ["Assessments", "Alerts"],
          "x-ms-enum": {
            "name": "EventSource",
            "modelAsString": true,
            "values": [
              {
                "value": "Assessments"
              },
              {
                "value": "Alerts"
              }
            ]
          }
        },
        "ruleSets": {
          "type": "array",
          "description": "A set of rules which evaluate upon event interception. A logical disjunction is applied between defined rule sets (logical 'or').",
          "items": {
            "$ref": "#/definitions/AutomationRuleSet"
          }
        }
      }
    },
    "AutomationScope": {
      "type": "object",
      "description": "A single automation scope.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The resources scope description."
        },
        "scopePath": {
          "type": "string",
          "description": "The resources scope path. Can be the subscription on which the automation is defined on or a resource group under that subscription (fully qualified Azure resource IDs)."
        }
      }
    },
    "AutomationAction": {
      "type": "object",
      "description": "The action that should be triggered.",
      "discriminator": "actionType",
      "required": ["actionType"],
      "properties": {
        "actionType": {
          "type": "string",
          "description": "The type of the action that will be triggered by the Automation",
          "enum": ["LogicApp", "EventHub", "Workspace"],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true,
            "values": [
              {
                "value": "LogicApp"
              },
              {
                "value": "EventHub"
              },
              {
                "value": "Workspace"
              }
            ]
          }
        }
      }
    },
    "AutomationActionLogicApp": {
      "type": "object",
      "description": "The logic app action that should be triggered. To learn more about Security Center's Workflow Automation capabilities, visit https://aka.ms/ASCWorkflowAutomationLearnMore",
      "x-ms-discriminator-value": "LogicApp",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationAction"
        }
      ],
      "properties": {
        "logicAppResourceId": {
          "type": "string",
          "description": "The triggered Logic App Azure Resource ID. This can also reside on other subscriptions, given that you have permissions to trigger the Logic App"
        },
        "uri": {
          "type": "string",
          "description": "The Logic App trigger URI endpoint (it will not be included in any response).",
          "format": "uri"
        }
      }
    },
    "AutomationActionEventHub": {
      "type": "object",
      "description": "The target Event Hub to which event data will be exported. To learn more about Security Center continuous export capabilities, visit https://aka.ms/ASCExportLearnMore",
      "x-ms-discriminator-value": "EventHub",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationAction"
        }
      ],
      "properties": {
        "eventHubResourceId": {
          "type": "string",
          "description": "The target Event Hub Azure Resource ID."
        },
        "sasPolicyName": {
          "readOnly": true,
          "type": "string",
          "description": "The target Event Hub SAS policy name."
        },
        "connectionString": {
          "type": "string",
          "description": "The target Event Hub connection string (it will not be included in any response)."
        }
      }
    },
    "AutomationActionWorkspace": {
      "type": "object",
      "description": "The Log Analytics Workspace to which event data will be exported. Security alerts data will reside in the 'SecurityAlert' table and the assessments data will reside in the 'SecurityRecommendation' table (under the 'Security'/'SecurityCenterFree' solutions). Note that in order to view the data in the workspace, the Security Center Log Analytics free/standard solution needs to be enabled on that workspace. To learn more about Security Center continuous export capabilities, visit https://aka.ms/ASCExportLearnMore",
      "x-ms-discriminator-value": "Workspace",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationAction"
        }
      ],
      "properties": {
        "workspaceResourceId": {
          "type": "string",
          "description": "The fully qualified Log Analytics Workspace Azure Resource ID."
        }
      }
    },
    "AutomationRuleSet": {
      "type": "object",
      "description": "A rule set which evaluates all its rules upon an event interception. Only when all the included rules in the rule set will be evaluated as 'true', will the event trigger the defined actions.",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AutomationTriggeringRule"
          }
        }
      }
    },
    "AutomationTriggeringRule": {
      "type": "object",
      "description": "A rule which is evaluated upon event interception. The rule is configured by comparing a specific value from the event model to an expected value. This comparison is done by using one of the supported operators set.",
      "properties": {
        "propertyJPath": {
          "type": "string",
          "description": "The JPath of the entity model property that should be checked."
        },
        "propertyType": {
          "type": "string",
          "description": "The data type of the compared operands (string, integer, floating point number or a boolean [true/false]]",
          "enum": ["String", "Integer", "Number", "Boolean"],
          "x-ms-enum": {
            "name": "PropertyType",
            "modelAsString": true,
            "values": [
              {
                "value": "String"
              },
              {
                "value": "Integer"
              },
              {
                "value": "Number"
              },
              {
                "value": "Boolean"
              }
            ]
          }
        },
        "expectedValue": {
          "type": "string",
          "description": "The expected value."
        },
        "operator": {
          "type": "string",
          "description": "A valid comparer operator to use. A case-insensitive comparison will be applied for String PropertyType.",
          "enum": [
            "Equals",
            "GreaterThan",
            "GreaterThanOrEqualTo",
            "LesserThan",
            "LesserThanOrEqualTo",
            "NotEquals",
            "Contains",
            "StartsWith",
            "EndsWith"
          ],
          "x-ms-enum": {
            "name": "Operator",
            "modelAsString": true,
            "values": [
              {
                "value": "Equals"
              },
              {
                "value": "GreaterThan"
              },
              {
                "value": "GreaterThanOrEqualTo"
              },
              {
                "value": "LesserThan"
              },
              {
                "value": "LesserThanOrEqualTo"
              },
              {
                "value": "NotEquals"
              },
              {
                "value": "Contains"
              },
              {
                "value": "StartsWith"
              },
              {
                "value": "EndsWith"
              }
            ]
          }
        }
      }
    },
    "AutomationValidationStatus": {
      "type": "object",
      "description": "The security automation model state property bag.",
      "properties": {
        "isValid": {
          "type": "boolean",
          "description": "Indicates whether the model is valid or not."
        },
        "message": {
          "type": "string",
          "description": "The validation message."
        }
      }
    },
    "AlertsSuppressionRulesList": {
      "type": "object",
      "description": "Suppression rules list for subscription.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertsSuppressionRule"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "URI to fetch the next page."
        }
      },
      "required": ["value"]
    },
    "AlertsSuppressionRule": {
      "type": "object",
      "description": "Describes the suppression rule",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AlertsSuppressionRuleProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "AlertsSuppressionRuleProperties": {
      "type": "object",
      "description": "describes AlertsSuppressionRule properties",
      "properties": {
        "alertType": {
          "type": "string",
          "description": "Type of the alert to automatically suppress. For all alert types, use '*'"
        },
        "lastModifiedUtc": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The last time this rule was modified"
        },
        "expirationDateUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date of the rule, if value is not provided or provided as null this field will default to the maximum allowed expiration date."
        },
        "reason": {
          "type": "string",
          "description": "The reason for dismissing the alert"
        },
        "state": {
          "type": "string",
          "description": "Possible states of the rule",
          "x-ms-enum": {
            "name": "RuleState"
          },
          "enum": ["Enabled", "Disabled", "Expired"]
        },
        "comment": {
          "type": "string",
          "description": "Any comment regarding the rule"
        },
        "suppressionAlertsScope": {
          "type": "object",
          "description": "The suppression conditions",
          "$ref": "#/definitions/SuppressionAlertsScope"
        }
      },
      "required": ["alertType", "reason", "state"]
    },
    "ScopeElement": {
      "type": "object",
      "additionalProperties": {
        "type": "object"
      },
      "description": "A more specific scope used to identify the alerts to suppress.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The alert entity type to suppress by."
        }
      }
    },
    "SuppressionAlertsScope": {
      "type": "object",
      "properties": {
        "allOf": {
          "type": "array",
          "description": "All the conditions inside need to be true in order to suppress the alert",
          "items": {
            "$ref": "#/definitions/ScopeElement"
          }
        }
      },
      "required": ["allOf"]
    },
    "ServerVulnerabilityAssessmentsList": {
      "type": "object",
      "description": "List of server vulnerability assessments",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServerVulnerabilityAssessment"
          }
        }
      }
    },
    "ServerVulnerabilityAssessment": {
      "type": "object",
      "description": "Describes the server vulnerability assessment details on a resource",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ServerVulnerabilityAssessmentProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ServerVulnerabilityAssessmentProperties": {
      "type": "object",
      "description": "describes ServerVulnerabilityAssessment properties.",
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioningState of the vulnerability assessment capability on the VM",
          "enum": ["Succeeded", "Failed", "Canceled", "Provisioning", "Deprovisioning"]
        }
      }
    },
    "SecurityAssessmentMetadataList": {
      "type": "object",
      "description": "List of security assessment metadata",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAssessmentMetadata"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecurityAssessmentMetadata": {
      "type": "object",
      "description": "Security assessment metadata",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityAssessmentMetadataProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecurityAssessmentMetadataProperties": {
      "type": "object",
      "description": "Describes properties of an assessment metadata.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User friendly display name of the assessment"
        },
        "policyDefinitionId": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource ID of the policy definition that turns this assessment calculation on"
        },
        "description": {
          "type": "string",
          "description": "Human readable description of the assessment"
        },
        "remediationDescription": {
          "type": "string",
          "description": "Human readable description of what you should do to mitigate this security issue"
        },
        "category": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The category of resource that is at risk when the assessment is unhealthy",
            "enum": ["Compute", "Networking", "Data", "IdentityAndAccess", "IoT"],
            "x-ms-enum": {
              "name": "category",
              "modelAsString": true,
              "values": [
                {
                  "value": "Compute"
                },
                {
                  "value": "Networking"
                },
                {
                  "value": "Data"
                },
                {
                  "value": "IdentityAndAccess"
                },
                {
                  "value": "IoT"
                }
              ]
            }
          }
        },
        "severity": {
          "type": "string",
          "description": "The severity level of the assessment",
          "enum": ["Low", "Medium", "High"],
          "x-ms-enum": {
            "name": "severity",
            "modelAsString": true,
            "values": [
              {
                "value": "Low"
              },
              {
                "value": "Medium"
              },
              {
                "value": "High"
              }
            ]
          }
        },
        "userImpact": {
          "type": "string",
          "description": "The user impact of the assessment",
          "enum": ["Low", "Moderate", "High"],
          "x-ms-enum": {
            "name": "userImpact",
            "modelAsString": true,
            "values": [
              {
                "value": "Low"
              },
              {
                "value": "Moderate"
              },
              {
                "value": "High"
              }
            ]
          }
        },
        "implementationEffort": {
          "type": "string",
          "description": "The implementation effort required to remediate this assessment",
          "enum": ["Low", "Moderate", "High"],
          "x-ms-enum": {
            "name": "implementationEffort",
            "modelAsString": true,
            "values": [
              {
                "value": "Low"
              },
              {
                "value": "Moderate"
              },
              {
                "value": "High"
              }
            ]
          }
        },
        "threats": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Threats impact of the assessment",
            "enum": [
              "accountBreach",
              "dataExfiltration",
              "dataSpillage",
              "maliciousInsider",
              "elevationOfPrivilege",
              "threatResistance",
              "missingCoverage",
              "denialOfService"
            ],
            "x-ms-enum": {
              "name": "threats",
              "modelAsString": true,
              "values": [
                {
                  "value": "accountBreach"
                },
                {
                  "value": "dataExfiltration"
                },
                {
                  "value": "dataSpillage"
                },
                {
                  "value": "maliciousInsider"
                },
                {
                  "value": "elevationOfPrivilege"
                },
                {
                  "value": "threatResistance"
                },
                {
                  "value": "missingCoverage"
                },
                {
                  "value": "denialOfService"
                }
              ]
            }
          }
        },
        "preview": {
          "type": "boolean",
          "description": "True if this assessment is in preview release status"
        },
        "assessmentType": {
          "type": "string",
          "description": "BuiltIn if the assessment based on built-in Azure Policy definition, Custom if the assessment based on custom Azure Policy definition",
          "enum": ["BuiltIn", "CustomPolicy", "CustomerManaged", "VerifiedPartner"],
          "x-ms-enum": {
            "name": "assessmentType",
            "modelAsString": true,
            "values": [
              {
                "value": "BuiltIn",
                "description": "Azure Security Center managed assessments"
              },
              {
                "value": "CustomPolicy",
                "description": "User defined policies that are automatically ingested from Azure Policy to Azure Security Center"
              },
              {
                "value": "CustomerManaged",
                "description": "User assessments pushed directly by the user or other third party to Azure Security Center"
              },
              {
                "value": "VerifiedPartner",
                "description": "An assessment that was created by a verified 3rd party if the user connected it to ASC"
              }
            ]
          }
        },
        "partnerData": {
          "$ref": "#/definitions/SecurityAssessmentMetadataPartnerData"
        }
      },
      "required": ["displayName", "severity", "assessmentType"]
    },
    "SecurityAssessmentMetadataPartnerData": {
      "type": "object",
      "description": "Describes the partner that created the assessment",
      "properties": {
        "partnerName": {
          "type": "string",
          "description": "Name of the company of the partner"
        },
        "productName": {
          "type": "string",
          "description": "Name of the product of the partner that created the assessment"
        },
        "secret": {
          "type": "string",
          "description": "Secret to authenticate the partner and verify it created the assessment - write only",
          "x-ms-secret": true
        }
      },
      "required": ["partnerName", "secret"]
    },
    "SecurityAssessmentList": {
      "type": "object",
      "description": "Page of a security assessments list",
      "properties": {
        "value": {
          "description": "Collection of security assessments in this page",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityAssessment"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecurityAssessment": {
      "type": "object",
      "description": "Security assessment on a resource",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecurityAssessmentProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecurityAssessmentProperties": {
      "type": "object",
      "description": "Describes properties of an assessment.",
      "properties": {
        "resourceDetails": {
          "$ref": "#/definitions/ResourceDetails"
        },
        "displayName": {
          "readOnly": true,
          "type": "string",
          "description": "User friendly display name of the assessment"
        },
        "status": {
          "$ref": "#/definitions/AssessmentStatus"
        },
        "additionalData": {
          "type": "object",
          "description": "Additional data regarding the assessment",
          "additionalProperties": {
            "type": "string"
          }
        },
        "links": {
          "$ref": "#/definitions/AssessmentLinks"
        },
        "metadata": {
          "$ref": "#/definitions/SecurityAssessmentMetadataProperties"
        },
        "partnersData": {
          "$ref": "#/definitions/SecurityAssessmentPartnerData"
        }
      },
      "required": ["resourceDetails", "status"]
    },
    "SecurityAssessmentPartnerData": {
      "type": "object",
      "description": "Data regarding 3rd party partner integration",
      "properties": {
        "partnerName": {
          "type": "string",
          "description": "Name of the company of the partner"
        },
        "secret": {
          "type": "string",
          "description": "secret to authenticate the partner - write only",
          "x-ms-secret": true
        }
      },
      "required": ["partnerName", "secret"]
    },
    "AssessmentLinks": {
      "type": "object",
      "description": "Links relevant to the assessment",
      "readOnly": true,
      "properties": {
        "azurePortalUri": {
          "type": "string",
          "description": "Link to assessment in Azure Portal",
          "readOnly": true
        }
      }
    },
    "AssessmentStatus": {
      "type": "object",
      "description": "The result of the assessment",
      "properties": {
        "code": {
          "type": "string",
          "description": "Programmatic code for the status of the assessment",
          "enum": ["Healthy", "Unhealthy", "NotApplicable"],
          "x-ms-enum": {
            "name": "AssessmentStatusCode",
            "modelAsString": true,
            "values": [
              {
                "value": "Healthy",
                "description": "The resource is healthy"
              },
              {
                "value": "Unhealthy",
                "description": "The resource has a security issue that needs to be addressed"
              },
              {
                "value": "NotApplicable",
                "description": "Assessment for this resource did not happen"
              }
            ]
          }
        },
        "cause": {
          "type": "string",
          "description": "Programmatic code for the cause of the assessment status"
        },
        "description": {
          "type": "string",
          "description": "Human readable description of the assessment status"
        }
      },
      "required": ["code"]
    },
    "AppWhitelistingGroups": {
      "type": "object",
      "description": "Represents a list of VM/server groups and set of rules that are Recommended by Azure Security Center to be allowed",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppWhitelistingGroup"
          }
        }
      }
    },
    "AppWhitelistingGroup": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AppWhitelistingGroupData"
        }
      },
      "required": ["properties"],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "AppWhitelistingGroupData": {
      "type": "object",
      "description": "Represents a VM/server group and set of rules to be allowed running on a machine",
      "properties": {
        "enforcementMode": {
          "$ref": "#/definitions/EnforcementMode"
        },
        "protectionMode": {
          "$ref": "#/definitions/ProtectionMode"
        },
        "configurationStatus": {
          "readOnly": true,
          "$ref": "#/definitions/ConfigurationStatus"
        },
        "recommendationStatus": {
          "readOnly": true,
          "$ref": "#/definitions/RecommendationStatus"
        },
        "issues": {
          "readOnly": true,
          "$ref": "#/definitions/AppWhitelistingIssuesSummaries"
        },
        "sourceSystem": {
          "readOnly": true,
          "$ref": "#/definitions/SourceSystem"
        },
        "vmRecommendations": {
          "$ref": "#/definitions/VmRecommendations"
        },
        "pathRecommendations": {
          "$ref": "#/definitions/PathRecommendations"
        }
      }
    },
    "ConfigurationStatus": {
      "type": "string",
      "description": "The configuration status of the VM/server group or machine or rule on the machine",
      "enum": ["Configured", "NotConfigured", "InProgress", "Failed", "NoStatus"]
    },
    "EnforcementMode": {
      "type": "string",
      "description": "The application control policy enforcement/protection mode of the VM/server group",
      "enum": ["Audit", "Enforce", "None"]
    },
    "EnforcementSupport": {
      "type": "string",
      "description": "The VM/server supportability of Enforce feature",
      "enum": ["Supported", "NotSupported", "Unknown"]
    },
    "ProtectionMode": {
      "type": "object",
      "description": "The protection mode of the collection/file types. Exe/Msi/Script are used for Windows, Executable is used for Linux.",
      "properties": {
        "exe": {
          "$ref": "#/definitions/EnforcementMode"
        },
        "msi": {
          "$ref": "#/definitions/EnforcementMode"
        },
        "script": {
          "$ref": "#/definitions/EnforcementMode"
        },
        "executable": {
          "$ref": "#/definitions/EnforcementMode"
        }
      }
    },
    "RecommendationStatus": {
      "type": "string",
      "description": "The recommendation status of the VM/server group or VM/server",
      "enum": ["Recommended", "NotRecommended", "NotAvailable", "NoStatus"]
    },
    "RecommendationAction": {
      "type": "string",
      "description": "The recommendation action of the VM/server or rule",
      "enum": ["Recommended", "Add", "Remove"]
    },
    "RecommendationType": {
      "type": "string",
      "description": "The type of the rule to be allowed",
      "enum": ["File", "FileHash", "PublisherSignature", "ProductSignature", "BinarySignature", "VersionAndAboveSignature"]
    },
    "AppWhitelistingIssue": {
      "type": "string",
      "description": "An alert that VMs/servers within a group can have",
      "enum": [
        "ViolationsAudited",
        "ViolationsBlocked",
        "MsiAndScriptViolationsAudited",
        "MsiAndScriptViolationsBlocked",
        "ExecutableViolationsAudited",
        "RulesViolatedManually"
      ]
    },
    "FileType": {
      "type": "string",
      "description": "The type of the file (for Linux files - Executable is used)",
      "enum": ["Exe", "Dll", "Msi", "Script", "Executable", "Unknown"]
    },
    "SourceSystem": {
      "type": "string",
      "description": "The source type of the VM/server group",
      "enum": ["Azure_AppLocker", "Azure_AuditD", "NonAzure_AppLocker", "NonAzure_AuditD", "None"]
    },
    "AppWhitelistingIssueSummary": {
      "type": "object",
      "description": "Represents a summary of the alerts of the VM/server group",
      "properties": {
        "issue": {
          "$ref": "#/definitions/AppWhitelistingIssue"
        },
        "numberOfVms": {
          "type": "number",
          "description": "The number of machines in the VM/server group that have this alert"
        }
      }
    },
    "AppWhitelistingIssuesSummaries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AppWhitelistingIssueSummary"
      }
    },
    "VmRecommendations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/VmRecommendation"
      }
    },
    "VmRecommendation": {
      "type": "object",
      "description": "Represents a machine that is part of a VM/server group",
      "properties": {
        "configurationStatus": {
          "$ref": "#/definitions/ConfigurationStatus"
        },
        "recommendationAction": {
          "$ref": "#/definitions/RecommendationAction"
        },
        "resourceId": {
          "$ref": "#/definitions/VmResourceId"
        },
        "enforcementSupport": {
          "$ref": "#/definitions/EnforcementSupport"
        }
      }
    },
    "PublisherInfo": {
      "type": "object",
      "description": "Represents the publisher information of a process/rule",
      "properties": {
        "publisherName": {
          "type": "string",
          "description": "The Subject field of the x.509 certificate used to sign the code, using the following fields -  O = Organization, L = Locality, S = State or Province, and C = Country",
          "example": "O=GOOGLE INC, L=MOUNTAIN VIEW, S=CALIFORNIA, C=US"
        },
        "productName": {
          "type": "string",
          "description": "The product name taken from the file's version resource",
          "example": "GOOGLE CHROME"
        },
        "binaryName": {
          "type": "string",
          "description": "The \"OriginalName\" field taken from the file's version resource",
          "example": "CHROME.EXE"
        },
        "version": {
          "type": "string",
          "description": "The binary file version taken from the file's version resource",
          "example": "66.0.3359.139"
        }
      }
    },
    "UserRecommendation": {
      "type": "object",
      "description": "Represents a user that is recommended to be allowed for a certain rule",
      "properties": {
        "username": {
          "type": "string",
          "description": "Represents a user that is recommended to be allowed for a certain rule",
          "example": "LOCAL SYSTEM"
        },
        "recommendationAction": {
          "$ref": "#/definitions/RecommendationAction"
        }
      }
    },
    "PathRecommendations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/PathRecommendation"
      }
    },
    "PathRecommendation": {
      "type": "object",
      "description": "Represents a path that is recommended to be allowed and its properties",
      "properties": {
        "path": {
          "type": "string",
          "description": "The full path to whitelist",
          "example": "C:\\Windows\\System32\\calc.exe"
        },
        "action": {
          "$ref": "#/definitions/RecommendationAction"
        },
        "type": {
          "$ref": "#/definitions/RecommendationType"
        },
        "publisherInfo": {
          "$ref": "#/definitions/PublisherInfo"
        },
        "common": {
          "type": "boolean",
          "description": "Whether the path is commonly run on the machine"
        },
        "userSids": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A security identifier",
            "example": "S-1-5-18"
          }
        },
        "usernames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserRecommendation"
          }
        },
        "fileType": {
          "$ref": "#/definitions/FileType"
        },
        "configurationStatus": {
          "$ref": "#/definitions/ConfigurationStatus"
        }
      }
    },
    "GroupResourceId": {
      "type": "string",
      "description": "The azure resource id of the application control VM/server group",
      "example": "/subscriptions/12345678-1234-1234-1234-123456789123/providers/Microsoft.Security/applicationWhitelistings/GROUP1"
    },
    "VmResourceId": {
      "type": "string",
      "description": "The full azure resource id of the machine",
      "example": "/subscriptions/12345678-1234-1234-1234-123456789123/resourcegroups/group/providers/microsoft.compute/virtualmachines/vm"
    },
    "AppWhitelistingResourceType": {
      "type": "string",
      "description": "The resource type of the application control resources",
      "example": "Microsoft.Security/applicationWhitelistings"
    },
    "PortNumber": {
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "Rule": {
      "description": "Describes remote addresses that is recommended to communicate with the Azure resource on some (Protocol, Port, Direction). All other remote addresses are recommended to be blocked",
      "properties": {
        "name": {
          "description": "The name of the rule",
          "type": "string"
        },
        "direction": {
          "description": "The rule's direction",
          "type": "string",
          "enum": ["Inbound", "Outbound"],
          "x-ms-enum": {
            "name": "direction",
            "modelAsString": true
          }
        },
        "destinationPort": {
          "description": "The rule's destination port",
          "$ref": "#/definitions/PortNumber"
        },
        "protocols": {
          "description": "The rule's transport protocols",
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["TCP", "UDP"],
            "x-ms-enum": {
              "name": "transportProtocol",
              "modelAsString": true
            }
          }
        },
        "ipAddresses": {
          "description": "The remote IP addresses that should be able to communicate with the Azure resource on the rule's destination port and protocol",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EffectiveNetworkSecurityGroups": {
      "description": "Describes the Network Security Groups effective on a network interface",
      "properties": {
        "networkInterface": {
          "description": "The Azure resource ID of the network interface",
          "type": "string"
        },
        "networkSecurityGroups": {
          "description": "The Network Security Groups effective on the network interface",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AdaptiveNetworkHardeningProperties": {
      "description": "Adaptive Network Hardening resource properties",
      "properties": {
        "rules": {
          "description": "The security rules which are recommended to be effective on the VM",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "rulesCalculationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC time on which the rules were calculated"
        },
        "effectiveNetworkSecurityGroups": {
          "description": "The Network Security Groups effective on the network interfaces of the protected resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EffectiveNetworkSecurityGroups"
          }
        }
      }
    },
    "AdaptiveNetworkHardening": {
      "description": "The resource whose properties describes the Adaptive Network Hardening settings for some Azure resource",
      "properties": {
        "properties": {
          "description": "Properties of the Adaptive Network Hardening resource",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/AdaptiveNetworkHardeningProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "AdaptiveNetworkHardeningsList": {
      "description": "Response for ListAdaptiveNetworkHardenings API service call",
      "properties": {
        "value": {
          "description": "A list of Adaptive Network Hardenings resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdaptiveNetworkHardening"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results",
          "type": "string"
        }
      }
    },
    "AdaptiveNetworkHardeningEnforceRequest": {
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "description": "The rules to enforce",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "networkSecurityGroups": {
          "type": "array",
          "description": "The Azure resource IDs of the effective network security groups that will be updated with the created security rules from the Adaptive Network Hardening rules",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["rules", "networkSecurityGroups"]
    },
    "AllowedConnectionsList": {
      "type": "object",
      "description": "List of all possible traffic between Azure resources",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/AllowedConnectionsResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "AllowedConnectionsResource": {
      "type": "object",
      "description": "The resource whose properties describes the allowed traffic between Azure resources",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "readOnly": true,
          "$ref": "#/definitions/AllowedConnectionsResourceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "AllowedConnectionsResourceProperties": {
      "type": "object",
      "description": "Describes the allowed traffic between Azure resources",
      "properties": {
        "calculatedDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The UTC time on which the allowed connections resource was calculated"
        },
        "connectableResources": {
          "type": "array",
          "readOnly": true,
          "description": "List of connectable resources",
          "items": {
            "$ref": "#/definitions/ConnectableResource"
          }
        }
      }
    },
    "ConnectableResource": {
      "type": "object",
      "description": "Describes the allowed inbound and outbound traffic of an Azure resource",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure resource id"
        },
        "inboundConnectedResources": {
          "type": "array",
          "readOnly": true,
          "description": "The list of Azure resources that the resource has inbound allowed connection from",
          "items": {
            "$ref": "#/definitions/ConnectedResource"
          }
        },
        "outboundConnectedResources": {
          "type": "array",
          "readOnly": true,
          "description": "The list of Azure resources that the resource has outbound allowed connection to",
          "items": {
            "$ref": "#/definitions/ConnectedResource"
          }
        }
      }
    },
    "ConnectedResource": {
      "type": "object",
      "description": "Describes properties of a connected resource",
      "properties": {
        "connectedResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "The Azure resource id of the connected resource"
        },
        "tcpPorts": {
          "type": "string",
          "readOnly": true,
          "description": "The allowed tcp ports"
        },
        "udpPorts": {
          "type": "string",
          "readOnly": true,
          "description": "The allowed udp ports"
        }
      }
    },
    "TopologyList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/TopologyResource"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "TopologyResource": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "readOnly": true,
          "$ref": "#/definitions/TopologyResourceProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "TopologyResourceProperties": {
      "type": "object",
      "properties": {
        "calculatedDateTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The UTC time on which the topology was calculated"
        },
        "topologyResources": {
          "type": "array",
          "readOnly": true,
          "description": "Azure resources which are part of this topology resource",
          "items": {
            "$ref": "#/definitions/TopologySingleResource"
          }
        }
      }
    },
    "TopologySingleResource": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource id"
        },
        "severity": {
          "type": "string",
          "readOnly": true,
          "description": "The security severity of the resource"
        },
        "recommendationsExist": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if the resource has security recommendations"
        },
        "networkZones": {
          "type": "string",
          "readOnly": true,
          "description": "Indicates the resource connectivity level to the Internet (InternetFacing, Internal ,etc.)"
        },
        "topologyScore": {
          "type": "integer",
          "readOnly": true,
          "description": "Score of the resource based on its security severity"
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "The location of this resource"
        },
        "parents": {
          "type": "array",
          "readOnly": true,
          "description": "Azure resources connected to this resource which are in higher level in the topology view",
          "items": {
            "$ref": "#/definitions/TopologySingleResourceParent"
          }
        },
        "children": {
          "type": "array",
          "readOnly": true,
          "description": "Azure resources connected to this resource which are in lower level in the topology view",
          "items": {
            "$ref": "#/definitions/TopologySingleResourceChild"
          }
        }
      }
    },
    "TopologySingleResourceParent": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource id which serves as parent resource in topology view"
        }
      }
    },
    "TopologySingleResourceChild": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Azure resource id which serves as child resource in topology view"
        }
      }
    },
    "JitNetworkAccessPoliciesList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessPolicy"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "JitNetworkAccessPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/JitNetworkAccessPolicyProperties"
        }
      },
      "required": ["properties"],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Kind"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "JitNetworkAccessPolicyProperties": {
      "type": "object",
      "properties": {
        "virtualMachines": {
          "type": "array",
          "description": "Configurations for Microsoft.Compute/virtualMachines resource type.",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessPolicyVirtualMachine"
          }
        },
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessRequest"
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "Gets the provisioning state of the Just-in-Time policy."
        }
      },
      "required": ["virtualMachines"]
    },
    "JitNetworkAccessPolicyVirtualMachine": {
      "type": "object",
      "required": ["id", "ports"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the virtual machine that is linked to this policy"
        },
        "ports": {
          "type": "array",
          "description": "Port configurations for the virtual machine",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessPortRule"
          }
        },
        "publicIpAddress": {
          "type": "string",
          "description": "Public IP address of the Azure Firewall that is linked to this policy, if applicable"
        }
      }
    },
    "JitNetworkAccessPortRule": {
      "type": "object",
      "properties": {
        "number": {
          "$ref": "#/definitions/PortNumber"
        },
        "protocol": {
          "type": "string",
          "enum": ["TCP", "UDP", "*"],
          "x-ms-enum": {
            "name": "protocol",
            "modelAsString": true,
            "values": [
              {
                "value": "TCP"
              },
              {
                "value": "UDP"
              },
              {
                "value": "*",
                "name": "All"
              }
            ]
          }
        },
        "allowedSourceAddressPrefix": {
          "type": "string",
          "description": "Mutually exclusive with the \"allowedSourceAddressPrefixes\" parameter. Should be an IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\"."
        },
        "allowedSourceAddressPrefixes": {
          "type": "array",
          "description": "Mutually exclusive with the \"allowedSourceAddressPrefix\" parameter.",
          "items": {
            "type": "string",
            "description": "IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\"."
          }
        },
        "maxRequestAccessDuration": {
          "type": "string",
          "description": "Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day"
        }
      },
      "required": ["maxRequestAccessDuration", "number", "protocol"]
    },
    "JitNetworkAccessRequest": {
      "type": "object",
      "properties": {
        "virtualMachines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessRequestVirtualMachine"
          }
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the request in UTC"
        },
        "requestor": {
          "type": "string",
          "description": "The identity of the person who made the request"
        },
        "justification": {
          "type": "string",
          "description": "The justification for making the initiate request"
        }
      },
      "required": ["requestor", "startTimeUtc", "virtualMachines"]
    },
    "JitNetworkAccessRequestVirtualMachine": {
      "type": "object",
      "required": ["id", "ports"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the virtual machine that is linked to this policy"
        },
        "ports": {
          "type": "array",
          "description": "The ports that were opened for the virtual machine",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessRequestPort"
          }
        }
      }
    },
    "JitNetworkAccessRequestPort": {
      "type": "object",
      "properties": {
        "number": {
          "$ref": "#/definitions/PortNumber"
        },
        "allowedSourceAddressPrefix": {
          "type": "string",
          "description": "Mutually exclusive with the \"allowedSourceAddressPrefixes\" parameter. Should be an IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\"."
        },
        "allowedSourceAddressPrefixes": {
          "type": "array",
          "description": "Mutually exclusive with the \"allowedSourceAddressPrefix\" parameter.",
          "items": {
            "description": "IP address or CIDR, for example \"192.168.0.3\" or \"192.168.0.0/16\".",
            "type": "string"
          }
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The date & time at which the request ends in UTC"
        },
        "status": {
          "type": "string",
          "description": "The status of the port",
          "enum": ["Revoked", "Initiated"],
          "x-ms-enum": {
            "name": "status",
            "modelAsString": true,
            "values": [
              {
                "value": "Revoked"
              },
              {
                "value": "Initiated"
              }
            ]
          }
        },
        "statusReason": {
          "type": "string",
          "description": "A description of why the `status` has its value",
          "enum": ["Expired", "UserRequested", "NewerRequestInitiated"],
          "x-ms-enum": {
            "name": "statusReason",
            "modelAsString": true,
            "values": [
              {
                "value": "Expired"
              },
              {
                "value": "UserRequested"
              },
              {
                "value": "NewerRequestInitiated"
              }
            ]
          }
        },
        "mappedPort": {
          "type": "integer",
          "description": "The port which is mapped to this port's `number` in the Azure Firewall, if applicable"
        }
      },
      "required": ["endTimeUtc", "number", "status", "statusReason"]
    },
    "JitNetworkAccessPolicyInitiateRequest": {
      "type": "object",
      "properties": {
        "virtualMachines": {
          "type": "array",
          "description": "A list of virtual machines & ports to open access for",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessPolicyInitiateVirtualMachine"
          }
        },
        "justification": {
          "type": "string",
          "description": "The justification for making the initiate request"
        }
      },
      "required": ["virtualMachines"]
    },
    "JitNetworkAccessPolicyInitiateVirtualMachine": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of the virtual machine that is linked to this policy"
        },
        "ports": {
          "type": "array",
          "description": "The ports to open for the resource with the `id`",
          "items": {
            "$ref": "#/definitions/JitNetworkAccessPolicyInitiatePort"
          }
        }
      },
      "required": ["id", "ports"]
    },
    "JitNetworkAccessPolicyInitiatePort": {
      "type": "object",
      "properties": {
        "number": {
          "$ref": "#/definitions/PortNumber"
        },
        "allowedSourceAddressPrefix": {
          "type": "string",
          "description": "Source of the allowed traffic. If omitted, the request will be for the source IP address of the initiate request."
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The time to close the request in UTC"
        }
      },
      "required": ["endTimeUtc", "number"]
    },
    "DiscoveredSecuritySolutionList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveredSecuritySolution"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "DiscoveredSecuritySolution": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/DiscoveredSecuritySolutionProperties"
        }
      },
      "required": ["properties"],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "DiscoveredSecuritySolutionProperties": {
      "type": "object",
      "properties": {
        "securityFamily": {
          "type": "string",
          "description": "The security family of the discovered solution",
          "enum": ["Waf", "Ngfw", "SaasWaf", "Va"],
          "x-ms-enum": {
            "name": "securityFamily",
            "modelAsString": true,
            "values": [
              {
                "value": "Waf"
              },
              {
                "value": "Ngfw"
              },
              {
                "value": "SaasWaf"
              },
              {
                "value": "Va"
              }
            ]
          }
        },
        "offer": {
          "type": "string",
          "description": "The security solutions' image offer"
        },
        "publisher": {
          "type": "string",
          "description": "The security solutions' image publisher"
        },
        "sku": {
          "type": "string",
          "description": "The security solutions' image sku"
        }
      },
      "required": ["securityFamily", "offer", "publisher", "sku"]
    },
    "securitySolutionsReferenceDataList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/securitySolutionsReferenceData"
          }
        }
      }
    },
    "securitySolutionsReferenceData": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/securitySolutionsReferenceDataProperties"
        }
      },
      "required": ["properties"],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "securitySolutionsReferenceDataProperties": {
      "type": "object",
      "properties": {
        "securityFamily": {
          "type": "string",
          "description": "The security family of the security solution",
          "enum": ["Waf", "Ngfw", "SaasWaf", "Va"],
          "x-ms-enum": {
            "name": "securityFamily",
            "modelAsString": true,
            "values": [
              {
                "value": "Waf"
              },
              {
                "value": "Ngfw"
              },
              {
                "value": "SaasWaf"
              },
              {
                "value": "Va"
              }
            ]
          }
        },
        "alertVendorName": {
          "type": "string",
          "description": "The security solutions' vendor name"
        },
        "packageInfoUrl": {
          "type": "string",
          "description": "The security solutions' package info url"
        },
        "productName": {
          "type": "string",
          "description": "The security solutions' product name"
        },
        "publisher": {
          "type": "string",
          "description": "The security solutions' publisher"
        },
        "publisherDisplayName": {
          "type": "string",
          "description": "The security solutions' publisher display name"
        },
        "template": {
          "type": "string",
          "description": "The security solutions' template"
        }
      },
      "required": ["securityFamily", "alertVendorName", "packageInfoUrl", "productName", "publisher", "publisherDisplayName", "template"]
    },
    "ExternalSecuritySolutionList": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalSecuritySolution"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "ExternalSecuritySolution": {
      "type": "object",
      "description": "Represents a security solution external to Azure Security Center which sends information to an OMS workspace and whose data is displayed by Azure Security Center.",
      "required": ["kind"],
      "discriminator": "kind",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ExternalSecuritySolutionKind"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "CefExternalSecuritySolution": {
      "x-ms-discriminator-value": "CEF",
      "type": "object",
      "description": "Represents a security solution which sends CEF logs to an OMS workspace",
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolution"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CefSolutionProperties"
        }
      }
    },
    "AtaExternalSecuritySolution": {
      "x-ms-discriminator-value": "ATA",
      "type": "object",
      "description": "Represents an ATA security solution which sends logs to an OMS workspace",
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolution"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AtaSolutionProperties"
        }
      }
    },
    "AadExternalSecuritySolution": {
      "x-ms-discriminator-value": "AAD",
      "type": "object",
      "description": "Represents an AAD identity protection solution which sends logs to an OMS workspace.",
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolution"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AadSolutionProperties"
        }
      }
    },
    "ExternalSecuritySolutionKind": {
      "type": "object",
      "description": "Describes an Azure resource with kind",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the external solution",
          "enum": ["CEF", "ATA", "AAD"],
          "x-ms-enum": {
            "name": "ExternalSecuritySolutionKind",
            "modelAsString": true,
            "values": [
              {
                "value": "CEF"
              },
              {
                "value": "ATA"
              },
              {
                "value": "AAD"
              }
            ]
          }
        }
      }
    },
    "ExternalSecuritySolutionProperties": {
      "type": "object",
      "description": "The solution properties (correspond to the solution kind)",
      "additionalProperties": {
        "type": "object"
      },
      "properties": {
        "deviceVendor": {
          "type": "string"
        },
        "deviceType": {
          "type": "string"
        },
        "workspace": {
          "$ref": "#/definitions/ConnectedWorkspace"
        }
      }
    },
    "ConnectedWorkspace": {
      "type": "object",
      "title": "Represents an OMS workspace to which the solution is connected",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource ID of the connected OMS workspace"
        }
      }
    },
    "AadConnectivityState": {
      "type": "object",
      "description": "Describes an Azure resource with kind",
      "properties": {
        "connectivityState": {
          "type": "string",
          "title": "The connectivity state of the external AAD solution ",
          "enum": ["Discovered", "NotLicensed", "Connected"],
          "x-ms-enum": {
            "name": "AadConnectivityState",
            "modelAsString": true,
            "values": [
              {
                "value": "Discovered"
              },
              {
                "value": "NotLicensed"
              },
              {
                "value": "Connected"
              }
            ]
          }
        }
      }
    },
    "AadSolutionProperties": {
      "type": "object",
      "title": "The external security solution properties for AAD solutions",
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolutionProperties"
        },
        {
          "$ref": "#/definitions/AadConnectivityState"
        }
      ]
    },
    "CefSolutionProperties": {
      "type": "object",
      "title": "The external security solution properties for CEF solutions",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "agent": {
          "type": "string"
        },
        "lastEventReceived": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolutionProperties"
        }
      ]
    },
    "AtaSolutionProperties": {
      "type": "object",
      "title": "The external security solution properties for ATA solutions",
      "properties": {
        "lastEventReceived": {
          "type": "string"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ExternalSecuritySolutionProperties"
        }
      ]
    },
    "SecureScoresList": {
      "type": "object",
      "description": "List of secure scores",
      "properties": {
        "value": {
          "description": "Collection of secure scores in this page",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureScoreItem"
          }
        },
        "nextLink": {
          "description": "The URI to fetch the next page.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SecureScoreItem": {
      "description": "Secure score item data model",
      "readOnly": true,
      "type": "object",
      "properties": {
        "properties": {
          "description": "Secure score item",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecureScoreItemProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecureScoreItemProperties": {
      "description": "Describes properties of a calculated secure score.",
      "readOnly": true,
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The initiative’s name",
          "readOnly": true,
          "type": "string"
        },
        "score": {
          "description": "score object",
          "readOnly": true,
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScoreDetails"
        }
      }
    },
    "ScoreDetails": {
      "description": "Calculation result data",
      "readOnly": true,
      "type": "object",
      "properties": {
        "max": {
          "description": "Maximum score available",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "exclusiveMinimum": false
        },
        "current": {
          "description": "Current score",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "minimum": 0,
          "exclusiveMinimum": false
        }
      }
    },
    "SecureScoreControlScore": {
      "description": "Calculation result data",
      "type": "object",
      "properties": {
        "max": {
          "description": "Maximum control score (0..10)",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 10,
          "exclusiveMinimum": false
        },
        "current": {
          "description": "Actual score for the control = (achieved points / total points) * max score. if total points is zeroed, the return number is 0.00",
          "readOnly": true,
          "type": "number",
          "format": "double",
          "minimum": 0,
          "maximum": 10,
          "exclusiveMinimum": false
        }
      }
    },
    "SecureScoreControlList": {
      "description": "List of security controls",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of security controls in this page",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureScoreControlDetails"
          }
        },
        "nextLink": {
          "description": "The URI to fetch the next page.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SecureScoreControlDetails": {
      "description": "Details of the security control, its score, and the health status of the relevant resources.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecureScoreControlScoreDetails"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecureScoreControlScoreDetails": {
      "description": "Calculation result data in control level",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "User friendly display name of the control",
          "readOnly": true,
          "type": "string"
        },
        "score": {
          "description": "Actual score object for the control",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ScoreDetails"
        },
        "healthyResourceCount": {
          "description": "Number of healthy resources in the control",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "unhealthyResourceCount": {
          "description": "Number of unhealthy resources in the control",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "notApplicableResourceCount": {
          "description": "Number of not applicable resources in the control",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "definition": {
          "$ref": "#/definitions/SecureScoreControlDefinitionItem"
        }
      }
    },
    "secureScoreControlDefinitionList": {
      "description": "List of security controls definition",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of security controls definition in this page",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecureScoreControlDefinitionItem"
          }
        },
        "nextLink": {
          "description": "The URI to fetch the next page.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SecureScoreControlDefinitionItem": {
      "description": "Information about the security control.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecureScoreControlDefinitionItemProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SecureScoreControlDefinitionItemProperties": {
      "description": "Security Control Definition Properties.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "User friendly display name of the control",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "User friendly description of the control",
          "readOnly": true,
          "type": "string",
          "maxLength": 256
        },
        "maxScore": {
          "description": "Maximum control score (0..10)",
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "maximum": 10,
          "exclusiveMinimum": false
        },
        "source": {
          "description": "Source object from which the control was created",
          "readOnly": true,
          "$ref": "#/definitions/SecureScoreControlDefinitionSource"
        },
        "assessmentDefinitions": {
          "description": "Array of assessments metadata IDs that are included in this security control",
          "readOnly": true,
          "$ref": "#/definitions/AzureResourceLinks"
        }
      }
    },
    "SecureScoreControlDefinitionSource": {
      "description": "The type of the security control (For example, BuiltIn)",
      "readOnly": true,
      "type": "object",
      "properties": {
        "sourceType": {
          "description": "The type of security control (for example, BuiltIn)",
          "type": "string",
          "enum": ["BuiltIn", "Custom"],
          "x-ms-enum": {
            "name": "controlType",
            "modelAsString": true,
            "values": [
              {
                "value": "BuiltIn",
                "description": "Azure Security Center managed assessments"
              },
              {
                "value": "Custom",
                "description": "Non Azure Security Center managed assessments"
              }
            ]
          }
        }
      }
    },
    "AzureResourceLink": {
      "type": "object",
      "description": "Describes an Azure resource with kind",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Azure resource Id"
        }
      }
    },
    "AzureResourceLinks": {
      "description": "array of azure resource IDs",
      "readOnly": true,
      "type": "array",
      "items": {
        "$ref": "#/definitions/AzureResourceLink"
      }
    },
    "SecuritySolutionList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecuritySolution"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "SecuritySolution": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/SecuritySolutionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/Location"
        }
      ]
    },
    "SecuritySolutionProperties": {
      "type": "object",
      "properties": {
        "securityFamily": {
          "type": "string",
          "description": "The security family of the security solution",
          "enum": ["Waf", "Ngfw", "SaasWaf", "Va"],
          "x-ms-enum": {
            "name": "securityFamily",
            "modelAsString": true,
            "values": [
              {
                "value": "Waf"
              },
              {
                "value": "Ngfw"
              },
              {
                "value": "SaasWaf"
              },
              {
                "value": "Va"
              }
            ]
          }
        },
        "provisioningState": {
          "type": "string",
          "description": "The security family provisioning State",
          "enum": ["Succeeded", "Failed", "Updating"],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Succeeded"
              },
              {
                "value": "Failed"
              },
              {
                "value": "Updating"
              }
            ]
          }
        },
        "template": {
          "type": "string",
          "description": "The security solutions' template"
        },
        "protectionStatus": {
          "type": "string",
          "description": "The security solutions' status"
        }
      },
      "required": ["securityFamily", "provisioningState", "template", "protectionStatus"]
    },
    "ConnectorSettingList": {
      "type": "object",
      "description": "For a subscription, list of all cloud account connectors and their settings",
      "properties": {
        "value": {
          "description": "List of all the cloud account connector settings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorSetting"
          }
        },
        "nextLink": {
          "readOnly": true,
          "type": "string",
          "description": "The URI to fetch the next page."
        }
      }
    },
    "ConnectorSetting": {
      "type": "object",
      "description": "The connector setting",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Connector setting data",
          "$ref": "#/definitions/ConnectorSettingProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ConnectorSettingProperties": {
      "type": "object",
      "description": "Describes properties of an connector setting",
      "properties": {
        "hybridComputeSettings": {
          "description": "Settings for hybrid compute management, these settings are relevant only Arc autoProvision (Hybrid Compute).",
          "type": "object",
          "$ref": "#/definitions/HybridComputeSettingsProperties"
        },
        "authenticationDetails": {
          "description": "Settings for authentication management, these settings are relevant only for the cloud connector.",
          "type": "object",
          "$ref": "#/definitions/AuthenticationDetailsProperties"
        }
      }
    },
    "HybridComputeSettingsProperties": {
      "type": "object",
      "description": "Settings for hybrid compute management",
      "properties": {
        "hybridComputeProvisioningState": {
          "description": "State of the service principal and its secret",
          "type": "string",
          "readOnly": true,
          "enum": ["Valid", "Invalid", "Expired"],
          "x-ms-enum": {
            "name": "hybridComputeProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Valid",
                "description": "Valid service principal details."
              },
              {
                "value": "Invalid",
                "description": "Invalid service principal details."
              },
              {
                "value": "Expired",
                "description": "the service principal details are expired"
              }
            ]
          }
        },
        "autoProvision": {
          "type": "string",
          "description": "Whether or not to automatically install Azure Arc (hybrid compute) agents on machines",
          "enum": ["On", "Off"],
          "x-ms-enum": {
            "name": "autoProvision",
            "modelAsString": true,
            "values": [
              {
                "value": "On",
                "description": "Install missing Azure Arc agent on VMs automatically"
              },
              {
                "value": "Off",
                "description": "Do not install Azure Arc agent on the VMs automatically"
              }
            ]
          }
        },
        "resourceGroupName": {
          "type": "string",
          "description": "The name of the resource group where Arc (Hybrid Compute) connectors are connected."
        },
        "region": {
          "type": "string",
          "description": "The location where the meta data of machines will be stored",
          "x-ms-mutability": ["create", "read"]
        },
        "proxyServer": {
          "type": "object",
          "description": "For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.",
          "$ref": "#/definitions/ProxyServerProperties"
        },
        "servicePrincipal": {
          "description": "An object to access resources that are secured by an Azure AD tenant.",
          "type": "object",
          "$ref": "#/definitions/ServicePrincipalProperties"
        }
      },
      "required": ["autoProvision"]
    },
    "ServicePrincipalProperties": {
      "type": "object",
      "description": "Details of the service principal.",
      "properties": {
        "applicationId": {
          "type": "string",
          "description": "Application id of service principal."
        },
        "secret": {
          "type": "string",
          "description": "A secret string that the application uses to prove its identity, also can be referred to as application password (write only)."
        }
      }
    },
    "AuthenticationDetailsProperties": {
      "type": "object",
      "description": "Settings for cloud authentication management",
      "discriminator": "authenticationType",
      "properties": {
        "authenticationProvisioningState": {
          "description": "State of the multi-cloud connector",
          "type": "string",
          "readOnly": true,
          "enum": ["Valid", "Invalid", "Expired", "IncorrectPolicy"],
          "x-ms-enum": {
            "name": "authenticationProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "value": "Valid",
                "description": "Valid connector"
              },
              {
                "value": "Invalid",
                "description": "Invalid connector"
              },
              {
                "value": "Expired",
                "description": "the connection is expired"
              },
              {
                "value": "IncorrectPolicy",
                "description": "Incorrect policy of the connector"
              }
            ]
          }
        },
        "grantedPermissions": {
          "description": "The permissions detected in the cloud account.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/PermissionProperty"
          }
        },
        "authenticationType": {
          "description": "Connect to your cloud account, for AWS use either account credentials or role-based authentication. For GCP use account organization credentials.",
          "type": "string",
          "enum": ["awsCreds", "awsAssumeRole", "gcpCredentials"],
          "x-ms-enum": {
            "name": "authenticationType",
            "modelAsString": true,
            "values": [
              {
                "value": "awsCreds",
                "description": "AWS cloud account connector user credentials authentication"
              },
              {
                "value": "awsAssumeRole",
                "description": "AWS account connector assume role authentication"
              },
              {
                "value": "gcpCredentials",
                "description": "GCP account connector service to service authentication"
              }
            ]
          }
        }
      },
      "required": ["authenticationType"]
    },
    "AwsCredsAuthenticationDetailsProperties": {
      "type": "object",
      "description": "AWS cloud account connector based credentials, the credentials is composed of access key id and secret key, for more details, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html\">Creating an IAM User in Your AWS Account (write only)</a>",
      "x-ms-discriminator-value": "awsCreds",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationDetailsProperties"
        }
      ],
      "properties": {
        "accountId": {
          "description": "The ID of the cloud account",
          "type": "string",
          "readOnly": true
        },
        "awsAccessKeyId": {
          "type": "string",
          "description": "Public key element of the AWS credential object (write only)"
        },
        "awsSecretAccessKey": {
          "type": "string",
          "description": "Secret key element of the AWS credential object (write only)"
        }
      },
      "required": ["awsAccessKeyId", "awsSecretAccessKey"]
    },
    "AwAssumeRoleAuthenticationDetailsProperties": {
      "type": "object",
      "description": "AWS cloud account connector based assume role, the role enables delegating access to your AWS resources. The role is composed of role arn and external id, for more details, refer to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html\">Creating a Role to Delegate Permissions to an IAM User (write only)</a>",
      "x-ms-discriminator-value": "awsAssumeRole",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationDetailsProperties"
        }
      ],
      "properties": {
        "accountId": {
          "description": "The ID of the cloud account",
          "type": "string",
          "readOnly": true
        },
        "awsAssumeRoleArn": {
          "type": "string",
          "description": "Assumed role ID is an identifier that you can use to create temporary security credentials."
        },
        "awsExternalId": {
          "type": "string",
          "description": "A unique identifier that is required when you assume a role in another account."
        }
      },
      "required": ["awsAssumeRoleArn", "awsExternalId"]
    },
    "GcpCredentialsDetailsProperties": {
      "type": "object",
      "description": "GCP cloud account connector based service to service credentials, the credentials is composed of organization id and json api key (write only)</a>",
      "x-ms-discriminator-value": "gcpCredentials",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationDetailsProperties"
        }
      ],
      "properties": {
        "organizationId": {
          "description": "The Organization ID of the GCP cloud account",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type field of the API key (write only)"
        },
        "projectId": {
          "type": "string",
          "description": "Project Id field of the API key (write only)"
        },
        "privateKeyId": {
          "type": "string",
          "description": "Private key Id field of the API key (write only)"
        },
        "privateKey": {
          "type": "string",
          "description": "Private key field of the API key (write only)"
        },
        "clientEmail": {
          "type": "string",
          "description": "Client email field of the API key (write only)"
        },
        "clientId": {
          "type": "string",
          "description": "Client Id field of the API key (write only)"
        },
        "authUri": {
          "type": "string",
          "description": "Auth Uri field of the API key (write only)"
        },
        "tokenUri": {
          "type": "string",
          "description": "Token Uri field of the API key (write only)"
        },
        "authProviderX509CertUrl": {
          "type": "string",
          "description": "Auth provider x509 certificate url field of the API key (write only)"
        },
        "clientX509CertUrl": {
          "type": "string",
          "description": "Client x509 certificate url field of the API key (write only)"
        }
      },
      "required": [
        "organizationId",
        "type",
        "projectId",
        "privateKeyId",
        "privateKey",
        "clientEmail",
        "clientId",
        "authUri",
        "tokenUri",
        "authProviderX509CertUrl",
        "clientX509CertUrl"
      ]
    },
    "PermissionProperty": {
      "description": "A permission detected in the cloud account.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "AWS::AWSSecurityHubReadOnlyAccess",
        "AWS::SecurityAudit",
        "AWS::AmazonSSMAutomationRole",
        "GCP::Security Center Admin Viewer"
      ],
      "x-ms-enum": {
        "name": "PermissionProperty",
        "modelAsString": true,
        "values": [
          {
            "value": "AWS::AWSSecurityHubReadOnlyAccess",
            "description": "This permission provides read only access to AWS Security Hub resources."
          },
          {
            "value": "AWS::SecurityAudit",
            "description": "This permission grants access to read security configuration metadata."
          },
          {
            "value": "AWS::AmazonSSMAutomationRole",
            "description": "The permission provides for EC2 Automation service to execute activities defined within Automation documents."
          },
          {
            "value": "GCP::Security Center Admin Viewer",
            "description": "This permission provides read only access to GCP Security Command Center."
          }
        ]
      }
    },
    "ProxyServerProperties": {
      "type": "object",
      "description": "For a non-Azure machine that is not connected directly to the internet, specify a proxy server that the non-Azure machine can use.",
      "properties": {
        "ip": {
          "type": "string",
          "description": "Proxy server IP"
        },
        "port": {
          "type": "string",
          "description": "Proxy server port"
        }
      }
    }
  },
  "parameters": {
    "ComplianceResultName": {
      "name": "complianceResultName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "name of the desired assessment compliance result",
      "x-ms-parameter-location": "method"
    },
    "ResourceId": {
      "name": "resourceId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The identifier of the resource.",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "Scope": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Scope of the query, can be subscription (/subscriptions/0b06d9ea-afe6-4779-bd59-30e5c2d9d13f) or management group (/providers/Microsoft.Management/managementGroups/mgName).",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "PricingName": {
      "name": "pricingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "name of the pricing configuration",
      "x-ms-parameter-location": "method"
    },
    "Pricing": {
      "name": "pricing",
      "in": "body",
      "required": true,
      "description": "Pricing object",
      "schema": {
        "$ref": "#/definitions/Pricing"
      },
      "x-ms-parameter-location": "method"
    },
    "SubscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
      "type": "string",
      "description": "Azure subscription ID"
    },
    "ODataFilter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData filter. Optional.",
      "x-ms-parameter-location": "method"
    },
    "ODataSelect": {
      "name": "$select",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData select. Optional.",
      "x-ms-parameter-location": "method"
    },
    "ODataExpand": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData expand. Optional.",
      "x-ms-parameter-location": "method"
    },
    "AlertName": {
      "name": "alertName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the alert object",
      "x-ms-parameter-location": "method"
    },
    "AutoDismissRuleName": {
      "name": "autoDismissRuleName",
      "in": "query",
      "type": "string",
      "description": "The name of an existing auto dismiss rule. Use it to simulate the rule on existing alerts and get the alerts that would have been dismissed if the rule was enabled when the alert was created",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "AscLocation": {
      "name": "ascLocation",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The location where ASC stores the data of the subscription. can be retrieved from Get locations",
      "x-ms-parameter-location": "client"
    },
    "SettingName": {
      "name": "settingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of setting: (MCAS/WDATP)",
      "enum": ["MCAS", "WDATP"],
      "x-ms-parameter-location": "method"
    },
    "Setting": {
      "name": "setting",
      "in": "body",
      "required": true,
      "description": "Setting object",
      "schema": {
        "$ref": "#/definitions/Setting"
      },
      "x-ms-parameter-location": "method"
    },
    "AdvancedThreatProtectionSettingName": {
      "name": "settingName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": ["current"],
      "description": "Advanced Threat Protection setting name.",
      "x-ms-parameter-location": "method"
    },
    "AdvancedThreatProtectionSetting": {
      "name": "advancedThreatProtectionSetting",
      "in": "body",
      "required": true,
      "description": "Advanced Threat Protection Settings",
      "schema": {
        "$ref": "#/definitions/AdvancedThreatProtectionSetting"
      },
      "x-ms-parameter-location": "method"
    },
    "DeviceSecurityGroupName": {
      "name": "deviceSecurityGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the device security group. Note that the name of the device security group is case insensitive.",
      "x-ms-parameter-location": "method"
    },
    "DeviceSecurityGroup": {
      "name": "deviceSecurityGroup",
      "in": "body",
      "required": true,
      "description": "Security group object.",
      "schema": {
        "$ref": "#/definitions/DeviceSecurityGroup"
      },
      "x-ms-parameter-location": "method"
    },
    "SolutionName": {
      "name": "solutionName",
      "in": "path",
      "required": true,
      "description": "The name of the IoT Security solution.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IotSecuritySolutionData": {
      "name": "iotSecuritySolutionData",
      "in": "body",
      "required": true,
      "description": "The security solution data",
      "schema": {
        "$ref": "#/definitions/IoTSecuritySolutionModel"
      },
      "x-ms-parameter-location": "method"
    },
    "FilterParam": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "description": "Filter the IoT Security solution with OData syntax. Supports filtering by iotHubs.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "UpdateIotSecuritySolution": {
      "name": "updateIotSecuritySolutionData",
      "in": "body",
      "required": true,
      "description": "The security solution data",
      "x-ms-parameter-location": "method",
      "schema": {
        "$ref": "#/definitions/UpdateIotSecuritySolutionData"
      }
    },
    "AggregatedAlertName": {
      "name": "aggregatedAlertName",
      "in": "path",
      "required": true,
      "description": "Identifier of the aggregated alert.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AggregatedRecommendationName": {
      "name": "aggregatedRecommendationName",
      "in": "path",
      "required": true,
      "description": "Name of the recommendation aggregated for this query.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ExtendedResourceProvider": {
      "name": "extendedResourceProvider",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource provider name of the base resource",
      "x-ms-parameter-location": "method"
    },
    "ExtendedResourceType": {
      "name": "extendedResourceType",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Type of the base resource",
      "x-ms-parameter-location": "method"
    },
    "ExtendedResourceName": {
      "name": "extendedResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the base resource",
      "x-ms-parameter-location": "method"
    },
    "TaskName": {
      "name": "taskName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the task object, will be a GUID",
      "x-ms-parameter-location": "method"
    },
    "TaskUpdateActionType": {
      "name": "taskUpdateActionType",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": ["Activate", "Dismiss", "Start", "Resolve", "Close"],
      "description": "Type of the action to do on the task",
      "x-ms-parameter-location": "method"
    },
    "AutoProvisioningSettingName": {
      "name": "settingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Auto provisioning setting key",
      "x-ms-parameter-location": "method"
    },
    "AutoProvisioningSetting": {
      "name": "setting",
      "in": "body",
      "required": true,
      "description": "Auto provisioning setting key",
      "schema": {
        "$ref": "#/definitions/AutoProvisioningSetting"
      },
      "x-ms-parameter-location": "method"
    },
    "ComplianceName": {
      "name": "complianceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "name of the Compliance",
      "x-ms-parameter-location": "method"
    },
    "InformationProtectionPolicyName": {
      "name": "informationProtectionPolicyName",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": ["effective", "custom"],
      "description": "Name of the information protection policy.",
      "x-ms-parameter-location": "method"
    },
    "InformationProtectionPolicy": {
      "name": "informationProtectionPolicy",
      "in": "body",
      "required": true,
      "description": "Information protection policy.",
      "schema": {
        "$ref": "#/definitions/InformationProtectionPolicy"
      },
      "x-ms-parameter-location": "method"
    },
    "SecurityContactName": {
      "name": "securityContactName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the security contact object",
      "x-ms-parameter-location": "method"
    },
    "SecurityContact": {
      "name": "securityContact",
      "in": "body",
      "required": true,
      "description": "Security contact object",
      "schema": {
        "$ref": "#/definitions/SecurityContact"
      },
      "x-ms-parameter-location": "method"
    },
    "WorkspaceSettingName": {
      "name": "workspaceSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the security setting",
      "x-ms-parameter-location": "method"
    },
    "WorkspaceSetting": {
      "name": "workspaceSetting",
      "in": "body",
      "required": true,
      "description": "Security data setting object",
      "schema": {
        "$ref": "#/definitions/WorkspaceSetting"
      },
      "x-ms-parameter-location": "method"
    },
    "RegulatoryComplianceStandardName": {
      "name": "regulatoryComplianceStandardName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the regulatory compliance standard object",
      "x-ms-parameter-location": "method"
    },
    "RegulatoryComplianceControlName": {
      "name": "regulatoryComplianceControlName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the regulatory compliance control object",
      "x-ms-parameter-location": "method"
    },
    "RegulatoryComplianceAssessmentName": {
      "name": "regulatoryComplianceAssessmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the regulatory compliance assessment object",
      "x-ms-parameter-location": "method"
    },
    "AssessmentName": {
      "name": "assessmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Assessment Key - Unique key for the assessment type",
      "x-ms-parameter-location": "method"
    },
    "SubAssessmentName": {
      "name": "subAssessmentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Sub-Assessment Key - Unique key for the sub-assessment type",
      "x-ms-parameter-location": "method"
    },
    "AutomationName": {
      "name": "automationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The security automation name.",
      "x-ms-parameter-location": "method"
    },
    "AutomationInBody": {
      "name": "Automation",
      "in": "body",
      "required": true,
      "description": "The security automation resource",
      "schema": {
        "$ref": "#/definitions/Automation"
      },
      "x-ms-parameter-location": "method"
    },
    "AlertType": {
      "name": "AlertType",
      "in": "query",
      "type": "string",
      "description": "Type of the alert to get rules for",
      "x-ms-parameter-location": "method"
    },
    "AlertsSuppressionRule": {
      "name": "alertsSuppressionRule",
      "in": "body",
      "required": true,
      "description": "Suppression rule object",
      "schema": {
        "$ref": "#/definitions/AlertsSuppressionRule"
      },
      "x-ms-parameter-location": "method"
    },
    "AlertsSuppressionRuleName": {
      "name": "alertsSuppressionRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique name of the suppression alert rule",
      "x-ms-parameter-location": "method"
    },
    "AssessmentsMetadataName": {
      "name": "assessmentMetadataName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Assessment Key - Unique key for the assessment type",
      "x-ms-parameter-location": "method"
    },
    "SecurityAssessmentMetadata": {
      "name": "assessmentMetadata",
      "in": "body",
      "required": true,
      "description": "AssessmentMetadata object",
      "schema": {
        "$ref": "#/definitions/SecurityAssessmentMetadata"
      },
      "x-ms-parameter-location": "method"
    },
    "ExpandAssessments": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData expand. Optional.",
      "x-ms-parameter-location": "method",
      "enum": ["links", "metadata"],
      "x-ms-enum": {
        "name": "ExpandEnum",
        "modelAsString": true,
        "values": [
          {
            "value": "links",
            "description": "All links associated with an assessment"
          },
          {
            "value": "metadata",
            "description": "Assessment metadata"
          }
        ]
      }
    },
    "AssessmentBody": {
      "name": "assessment",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SecurityAssessment"
      },
      "description": "Calculated assessment on a pre-defined assessment metadata",
      "x-ms-parameter-location": "method"
    },
    "GroupName": {
      "name": "groupName",
      "in": "path",
      "description": "Name of an application control VM/server group",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "IncludePathRecommendations": {
      "name": "includePathRecommendations",
      "in": "query",
      "description": "Include the policy rules",
      "type": "boolean",
      "required": false,
      "enum": [false, true],
      "x-ms-parameter-location": "method"
    },
    "Summary": {
      "name": "summary",
      "in": "query",
      "description": "Return output in a summarized form",
      "type": "boolean",
      "required": false,
      "enum": [false, true],
      "x-ms-parameter-location": "method"
    },
    "AppWhitelistingGroup": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/AppWhitelistingGroup"
      },
      "x-ms-parameter-location": "method"
    },
    "AdaptiveNetworkHardeningResourceName": {
      "name": "adaptiveNetworkHardeningResourceName",
      "in": "path",
      "description": "The name of the Adaptive Network Hardening resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AdaptiveNetworkHardeningEnforceAction": {
      "name": "adaptiveNetworkHardeningEnforceAction",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Enforces the given rules on the NSG(s) listed in the request",
      "enum": ["enforce"],
      "x-ms-parameter-location": "method"
    },
    "AdaptiveNetworkHardeningEnforceRequest": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/AdaptiveNetworkHardeningEnforceRequest"
      },
      "x-ms-parameter-location": "method"
    },
    "ConnectionType": {
      "name": "connectionType",
      "type": "string",
      "in": "path",
      "description": "The type of allowed connections (Internal, External)",
      "required": true,
      "enum": ["Internal", "External"],
      "x-ms-enum": {
        "name": "connectionType",
        "modelAsString": true,
        "values": [
          {
            "value": "Internal"
          },
          {
            "value": "External"
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "TopologyResourceName": {
      "name": "topologyResourceName",
      "in": "path",
      "description": "Name of a topology resources collection.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "JitNetworkAccessPolicyName": {
      "name": "jitNetworkAccessPolicyName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Name of a Just-in-Time access configuration policy.",
      "x-ms-parameter-location": "method"
    },
    "JitNetworkAccessPolicyInitiateType": {
      "name": "jitNetworkAccessPolicyInitiateType",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Type of the action to do on the Just-in-Time access policy.",
      "enum": ["initiate"],
      "x-ms-parameter-location": "method"
    },
    "JitNetworkAccessPolicyInitiateRequest": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/JitNetworkAccessPolicyInitiateRequest"
      },
      "x-ms-parameter-location": "method"
    },
    "JitNetworkAccessPolicy": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/JitNetworkAccessPolicy"
      },
      "x-ms-parameter-location": "method"
    },
    "DiscoveredSecuritySolutionName": {
      "name": "discoveredSecuritySolutionName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Name of a discovered security solution.",
      "x-ms-parameter-location": "method"
    },
    "ExternalSecuritySolutionsName": {
      "name": "externalSecuritySolutionsName",
      "in": "path",
      "description": "Name of an external security solution.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ExpandControlsDefinition": {
      "name": "$expand",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "OData expand. Optional.",
      "x-ms-parameter-location": "method",
      "enum": ["definition"],
      "x-ms-enum": {
        "name": "ExpandControlsEnum",
        "modelAsString": true,
        "values": [
          {
            "value": "definition",
            "description": "Add definition object for each control"
          }
        ]
      }
    },
    "secureScoreName": {
      "name": "secureScoreName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The initiative name. For the ASC Default initiative, use 'ascScore' as in the sample request below.",
      "x-ms-parameter-location": "method"
    },
    "SecuritySolutionName": {
      "name": "securitySolutionName",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Name of security solution.",
      "x-ms-parameter-location": "method"
    },
    "ConnectorName": {
      "name": "connectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the cloud account connector",
      "x-ms-parameter-location": "method"
    },
    "ConnectorSetting": {
      "name": "connectorSetting",
      "in": "body",
      "required": true,
      "description": "Settings for the cloud account connector",
      "schema": {
        "$ref": "#/definitions/ConnectorSetting"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
