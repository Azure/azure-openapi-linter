import { oas2 } from "@stoplight/spectral-formats"
import { pattern, falsy } from "@stoplight/spectral-functions"
import paramLocation from "./functions/parameter-location"
import checkSchemaFormat from "./functions/schema-format"
import checkSummaryAndDescription from "./functions/summary-description-must-not-be-same"

const ruleset: any = {
  extends: [],
  rules: {
    docLinkLocale: {
      description: "This rule is to ensure the documentation link in the description does not contains any locale.",
      message: "The documentation link in the description contains locale info, please change it to the link without locale.",
      severity: "warn",
      resolved: false,
      formats: [oas2],
      given: ["$..[?(@property === 'description')]^"],
      then: {
        function: pattern,
        functionOptions: {
          match: "https://docs.microsoft.com/\\w+\\-\\w+/azure/.*",
        },
      },
    },
    InvalidVerbUsed: {
      description: `Each operation definition must have a HTTP verb and it must be DELETE/GET/PUT/PATCH/HEAD/OPTIONS/POST/TRACE.`,
      message: "Permissible values for HTTP Verb are DELETE, GET, PUT, PATCH, HEAD, OPTIONS, POST, TRACE.",
      severity: "error",
      resolved: false,
      given: "$[paths,'x-ms-paths'].*[?(!@property.match(/^(DELETE|GET|PUT|PATCH|HEAD|OPTIONS|POST|TRACE|PARAMETERS)$/i))]",
      then: {
        function: falsy,
      },
    },
    SummaryAndDescriptionMustNotBeSame: {
      description: `Each operation has a summary and description values. They must not be same.`,
      message: "The summary and description values should not be same.",
      severity: "warn",
      resolved: false,
      given: "$[paths,'x-ms-paths'].*.*",
      then: {
        function: checkSummaryAndDescription,
      },
    },
    ValidFormats: {
      description: `Only valid types are allowed for properties.`,
      message: "'{{error}}' is not a known format.",
      severity: "error",
      resolved: false,
      given: "$..[?(@property === 'format')]^",
      then: {
        function: checkSchemaFormat,
      },
    },
    XmsParameterLocation: {
      description: `SDKs generated by AutoRest have two types of operation parameters: method arguments and client fields. The 'x-ms-parameter-location' extension gives the Swagger author control of how an operation-parameter will be interpreted by AutoRest, and as such is one of few things in a Swagger document that has semantic value only relevant to the shape of the generated SDKs.
    Some parameters, such as API Version and Subscription ID will make sense as part of nearly every request. For these, having developers specify them for each method call would be burdensome; attaching them to the client and automatically including them in each request makes way more sense. Other parameters will be very operation specific and should be provided each time the method is called.`,
      message:
        'The parameter \'{{property}}\' is defined in global parameters section without \'x-ms-parameter-location\' extension. This would add the parameter as the client property. Please ensure that this is exactly you want. If so, apply the extension "x-ms-parameter-location": "client". Else, apply the extension "x-ms-parameter-location": "method".',
      severity: "error",
      resolved: false,
      given: "$.parameters.*[?(@property === 'name' && @.match(/^(subscriptionid|subscription-id|api-version|apiversion)$/i))]^",
      then: {
        function: paramLocation,
      },
    },
  },
}
export default ruleset
