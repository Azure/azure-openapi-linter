{
  "swagger": "2.0",
  "info": {
    "title": "ContainerServiceClient",
    "description": "The Container Service Client."
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/openShiftManagedClusters": {
      "get": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_List",
        "summary": "Gets a list of OpenShift managed clusters in the specified subscription.",
        "description": "Gets a list of OpenShift managed clusters in the specified subscription. The operation returns properties of each OpenShift managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedClusterListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Managed Clusters": {
            "parameters": {
              "api-version": "2019-04-30",
              "subscriptionId": "subid1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/subid1/providers/Microsoft.ContainerService/openShiftManagedClusters",
                      "location": "location1",
                      "name": "clustername1",
                      "tags": {
                        "archv2": "",
                        "tier": "production"
                      },
                      "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "openShiftVersion": "v3.11",
                        "clusterVersion": "osa.1",
                        "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                        "publicHostname": "openshift.1225bdf9337748a4bd3a.location1.azmosa.io",
                        "networkProfile": {
                          "vnetCidr": "10.0.0.0/8"
                        },
                        "masterPoolProfile": {
                          "count": 3,
                          "vmSize": "Standard_D4s_v3",
                          "subnetCidr": "10.0.0.0/24"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "infra",
                            "role": "infra",
                            "count": 2,
                            "vmSize": "Standard_D4s_v3",
                            "osType": "Linux",
                            "subnetCidr": "10.0.0.0/24"
                          },
                          {
                            "name": "compute",
                            "role": "compute",
                            "count": 4,
                            "vmSize": "Standard_D4s_v3",
                            "osType": "Linux",
                            "subnetCidr": "10.0.0.0/24"
                          }
                        ],
                        "routerProfiles": [
                          {
                            "name": "default",
                            "fqdn": "osa2925bdf9337748f4bd3b.location1.cloudapp.azure.com",
                            "publicSubdomain": "apps.bc309ee87c164153871c.location1.azmosa.io"
                          }
                        ],
                        "authProfile": {
                          "identityProviders": [
                            {
                              "name": "Azure AD",
                              "provider": {
                                "kind": "AADIdentityProvider",
                                "clientId": "clientId",
                                "tenantId": "tenantId",
                                "customerAdminGroupId": "customerAdminGroupId"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters": {
      "get": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_ListByResourceGroup",
        "summary": "Lists OpenShift managed clusters in the specified subscription and resource group.",
        "description": "Lists OpenShift managed clusters in the specified subscription and resource group. The operation returns properties of each OpenShift managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource group."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedClusterListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Managed Clusters by Resource Group": {
            "parameters": {
              "api-version": "2018-09-30-preview",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/openShiftManagedClusters",
                      "location": "location1",
                      "name": "clustername1",
                      "tags": {
                        "archv2": "",
                        "tier": "production"
                      },
                      "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "openShiftVersion": "v3.11",
                        "clusterVersion": "osa.1",
                        "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                        "networkProfile": {
                          "vnetCidr": "10.0.0.0/8"
                        },
                        "masterPoolProfile": {
                          "count": 3,
                          "vmSize": "Standard_D4s_v3",
                          "subnetCidr": "10.0.0.0/24"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "infra",
                            "role": "infra",
                            "count": 2,
                            "vmSize": "Standard_D4s_v3",
                            "osType": "Linux",
                            "subnetCidr": "10.0.0.0/24"
                          },
                          {
                            "name": "compute",
                            "role": "compute",
                            "count": 4,
                            "vmSize": "Standard_D4s_v3",
                            "osType": "Linux",
                            "subnetCidr": "10.0.0.0/24"
                          }
                        ],
                        "routerProfiles": [
                          {
                            "name": "default",
                            "fqdn": "dce5faa189c841b99f8a.location1.cloudapp.azure.com",
                            "publicSubdomain": "b788fade68d345da9b77.location1.int.aksapp.io"
                          }
                        ],
                        "authProfile": {
                          "identityProviders": [
                            {
                              "name": "Azure AD",
                              "provider": {
                                "kind": "AADIdentityProvider",
                                "clientId": "clientId",
                                "tenantId": "tenantId",
                                "customerAdminGroupId": "customerAdminGroupId"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/openShiftManagedClusters/{resourceName}": {
      "get": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_Get",
        "summary": "Gets a OpenShift managed cluster.",
        "description": "Gets the details of the managed OpenShift cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OpenShift managed cluster resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get OpenShift Managed Cluster": {
            "parameters": {
              "api-version": "2019-04-30",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/openShiftManagedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "openShiftVersion": "v3.11",
                    "clusterVersion": "osa.1",
                    "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                    "publicHostname": "openshift.1225bdf9337748a4bd3a.location1.azmosa.io",
                    "networkProfile": {
                      "vnetCidr": "10.0.0.0/8"
                    },
                    "masterPoolProfile": {
                      "count": 3,
                      "vmSize": "Standard_D4s_v3",
                      "subnetCidr": "10.0.0.0/24"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "infra",
                        "role": "infra",
                        "count": 2,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      },
                      {
                        "name": "compute",
                        "role": "compute",
                        "count": 4,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      }
                    ],
                    "routerProfiles": [
                      {
                        "name": "default",
                        "fqdn": "osa2925bdf9337748f4bd3b.location1.cloudapp.azure.com",
                        "publicSubdomain": "apps.bc309ee87c164153871c.location1.azmosa.io"
                      }
                    ],
                    "authProfile": {
                      "identityProviders": [
                        {
                          "name": "Azure AD",
                          "provider": {
                            "kind": "AADIdentityProvider",
                            "clientId": "clientId",
                            "tenantId": "tenantId",
                            "customerAdminGroupId": "customerAdminGroupId"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_CreateOrUpdate",
        "summary": "Creates or updates an OpenShift managed cluster.",
        "description": "Creates or updates a OpenShift managed cluster with the specified configuration for agents and OpenShift version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OpenShift managed cluster resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedCluster"
            },
            "description": "Parameters supplied to the Create or Update an OpenShift Managed Cluster operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.If any of the input parameters is wrong, 400(Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update OpenShift Managed Cluster": {
            "parameters": {
              "api-version": "2019-04-30",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "location": "location1",
                "tags": {
                  "tier": "production",
                  "archv2": ""
                },
                "properties": {
                  "openShiftVersion": "v3.11",
                  "networkProfile": {
                    "vnetCidr": "10.0.0.0/8"
                  },
                  "masterPoolProfile": {
                    "name": "master",
                    "count": 3,
                    "vmSize": "Standard_D4s_v3",
                    "osType": "Linux",
                    "subnetCidr": "10.0.0.0/24"
                  },
                  "agentPoolProfiles": [
                    {
                      "name": "infra",
                      "role": "infra",
                      "count": 2,
                      "vmSize": "Standard_D4s_v3",
                      "osType": "Linux",
                      "subnetCidr": "10.0.0.0/24"
                    },
                    {
                      "name": "compute",
                      "role": "compute",
                      "count": 4,
                      "vmSize": "Standard_D4s_v3",
                      "osType": "Linux",
                      "subnetCidr": "10.0.0.0/24"
                    }
                  ],
                  "routerProfiles": [
                    {
                      "name": "default"
                    }
                  ],
                  "authProfile": {
                    "identityProviders": [
                      {
                        "name": "Azure AD",
                        "provider": {
                          "kind": "AADIdentityProvider",
                          "clientId": "clientId",
                          "secret": "secret",
                          "tenantId": "tenantId",
                          "customerAdminGroupId": "customerAdminGroupId"
                        }
                      }
                    ]
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/openShiftManagedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                  "properties": {
                    "provisioningState": "Updating",
                    "openShiftVersion": "v3.11",
                    "clusterVersion": "osa.1",
                    "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                    "publicHostname": "openshift.1225bdf9337748a4bd3a.location1.azmosa.io",
                    "networkProfile": {
                      "vnetCidr": "10.0.0.0/8"
                    },
                    "masterPoolProfile": {
                      "count": 3,
                      "vmSize": "Standard_D4s_v3",
                      "subnetCidr": "10.0.0.0/24"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "infra",
                        "role": "infra",
                        "count": 2,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      },
                      {
                        "name": "compute",
                        "role": "compute",
                        "count": 4,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      }
                    ],
                    "routerProfiles": [
                      {
                        "name": "default",
                        "fqdn": "osa2925bdf9337748f4bd3b.location1.cloudapp.azure.com",
                        "publicSubdomain": "apps.bc309ee87c164153871c.location1.azmosa.io"
                      }
                    ],
                    "authProfile": {
                      "identityProviders": [
                        {
                          "name": "Azure AD",
                          "provider": {
                            "kind": "AADIdentityProvider",
                            "clientId": "clientId",
                            "tenantId": "tenantId",
                            "customerAdminGroupId": "customerAdminGroupId"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/openShiftManagedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                  "properties": {
                    "provisioningState": "Creating",
                    "openShiftVersion": "v3.11",
                    "clusterVersion": "osa.1",
                    "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                    "networkProfile": {
                      "vnetCidr": "10.0.0.0/8"
                    },
                    "masterPoolProfile": {
                      "name": "master",
                      "count": 3,
                      "vmSize": "Standard_D4s_v3",
                      "osType": "Linux",
                      "subnetCidr": "10.0.0.0/24"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "infra",
                        "role": "infra",
                        "count": 2,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      },
                      {
                        "name": "compute",
                        "role": "compute",
                        "count": 4,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      }
                    ],
                    "routerProfiles": [
                      {
                        "name": "default"
                      }
                    ],
                    "authProfile": {
                      "identityProviders": [
                        {
                          "name": "Azure AD",
                          "provider": {
                            "kind": "AADIdentityProvider",
                            "clientId": "clientId",
                            "tenantId": "tenantId",
                            "customerAdminGroupId": "customerAdminGroupId"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_UpdateTags",
        "summary": "Updates tags on an OpenShift managed cluster.",
        "description": "Updates an OpenShift managed cluster with the specified tags.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OpenShift managed cluster resource."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the Update OpenShift Managed Cluster Tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenShiftManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned. If any of the input parameters is wrong, 400(Bad Request) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update OpenShift Managed Cluster Tags": {
            "parameters": {
              "api-version": "2019-04-30",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "tags": {
                  "tier": "testing",
                  "archv3": ""
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/openShiftManagedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv3": "",
                    "tier": "testing"
                  },
                  "type": "Microsoft.ContainerService/OpenShiftManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "openShiftVersion": "v3.11",
                    "fqdn": "df9337748a4b.location1.cloudapp.azure.com",
                    "publicHostname": "openshift.1225bdf9337748a4bd3a.location1.azmosa.io",
                    "networkProfile": {
                      "vnetCidr": "10.0.0.0/8"
                    },
                    "masterPoolProfile": {
                      "count": 3,
                      "vmSize": "Standard_D4s_v3",
                      "subnetCidr": "10.0.0.0/24"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "infra",
                        "role": "infra",
                        "count": 2,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      },
                      {
                        "name": "compute",
                        "role": "compute",
                        "count": 4,
                        "vmSize": "Standard_D4s_v3",
                        "osType": "Linux",
                        "subnetCidr": "10.0.0.0/24"
                      }
                    ],
                    "routerProfiles": [
                      {
                        "name": "default",
                        "fqdn": "osa2925bdf9337748f4bd3b.location1.cloudapp.azure.com",
                        "publicSubdomain": "apps.bc309ee87c164153871c.location1.azmosa.io"
                      }
                    ],
                    "authProfile": {
                      "identityProviders": [
                        {
                          "name": "Azure AD",
                          "provider": {
                            "kind": "AADIdentityProvider",
                            "clientId": "clientId",
                            "tenantId": "tenantId",
                            "customerAdminGroupId": "customerAdminGroupId"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "OpenShiftManagedClusters"
        ],
        "operationId": "OpenShiftManagedClusters_Delete",
        "summary": "Deletes an OpenShift managed cluster.",
        "description": "Deletes the OpenShift managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-04-30"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "description": "The name of the resource group."
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the OpenShift managed cluster resource."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete OpenShift Managed Cluster": {
            "parameters": {
              "api-version": "2019-04-30",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "202": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices": {
      "get": {
        "deprecated": true,
        "tags": [
          "ContainerServices"
        ],
        "operationId": "ContainerServices_List",
        "summary": "Gets a list of container services in the specified subscription.",
        "description": "Gets a list of container services in the specified subscription. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2017-07-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerServiceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Container Services": {
            "parameters": {
              "api-version": "2017-07-01",
              "subscriptionId": "subid1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "type": "Microsoft.ContainerService/ContainerServices",
                      "location": "location1",
                      "id": "/subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1",
                      "name": "acs1",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "orchestratorProfile": {
                          "orchestratorType": "DCOS"
                        },
                        "masterProfile": {
                          "count": 1,
                          "dnsPrefix": "acs1-rg1-e240e5mgmt",
                          "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                          "vmSize": "Standard_D2_v2"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "agentpool0",
                            "count": 3,
                            "vmSize": "Standard_D2_v2",
                            "dnsPrefix": "acs1-rg1-e240e5agent",
                            "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                            "osType": "Linux"
                          }
                        ],
                        "linuxProfile": {
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                              }
                            ]
                          },
                          "adminUsername": "azureuser"
                        },
                        "diagnosticsProfile": {
                          "vmDiagnostics": {
                            "enabled": true,
                            "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.ContainerService/ContainerServices",
                      "location": "location1",
                      "id": "/subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2",
                      "name": "acs2",
                      "properties": {
                        "provisioningState": "Creating",
                        "orchestratorProfile": {
                          "orchestratorType": "DCOS"
                        },
                        "masterProfile": {
                          "count": 1,
                          "dnsPrefix": "acs2-rg1-e240e5mgmt",
                          "vmSize": "Standard_D2_v2"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "agentpool0",
                            "count": 3,
                            "vmSize": "Standard_D2_v2",
                            "dnsPrefix": "acs2-rg1-e240e5agent",
                            "osType": "Linux"
                          }
                        ],
                        "linuxProfile": {
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                              }
                            ]
                          },
                          "adminUsername": "azureuser"
                        },
                        "diagnosticsProfile": {
                          "vmDiagnostics": {
                            "enabled": true
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}": {
      "put": {
        "deprecated": true,
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerServices_CreateOrUpdate",
        "summary": "Creates or updates a container service.",
        "description": "Creates or updates a container service with the specified configuration of orchestrator, masters, and agents.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service in the specified subscription and resource group."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerService"
            },
            "description": "Parameters supplied to the Create or Update a Container Service operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2017-07-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update Container Service": {
            "parameters": {
              "api-version": "2017-07-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "containerServiceName": "acs1",
              "parameters": {
                "location": "location1"
              }
            },
            "responses": {
              "200": {
                "body": {
                  "type": "Microsoft.ContainerService/ContainerServices",
                  "location": "location1",
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1",
                  "name": "acs1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorProfile": {
                      "orchestratorType": "DCOS"
                    },
                    "masterProfile": {
                      "count": 1,
                      "dnsPrefix": "acs1-rg1-e240e5mgmt",
                      "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                      "vmSize": "Standard_D2_v2"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "agentpool0",
                        "count": 3,
                        "vmSize": "Standard_D2_v2",
                        "dnsPrefix": "acs1-rg1-e240e5agent",
                        "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                        "osType": "Linux"
                      }
                    ],
                    "linuxProfile": {
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                          }
                        ]
                      },
                      "adminUsername": "azureuser"
                    },
                    "diagnosticsProfile": {
                      "vmDiagnostics": {
                        "enabled": true,
                        "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                      }
                    }
                  }
                }
              },
              "201": {
                "body": {
                  "type": "Microsoft.ContainerService/ContainerServices",
                  "location": "location1",
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1",
                  "name": "acs1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorProfile": {
                      "orchestratorType": "DCOS"
                    },
                    "masterProfile": {
                      "count": 1,
                      "dnsPrefix": "acs1-rg1-e240e5mgmt",
                      "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                      "vmSize": "Standard_D2_v2"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "agentpool0",
                        "count": 3,
                        "vmSize": "Standard_D2_v2",
                        "dnsPrefix": "acs1-rg1-e240e5agent",
                        "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                        "osType": "Linux"
                      }
                    ],
                    "linuxProfile": {
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                          }
                        ]
                      },
                      "adminUsername": "azureuser"
                    },
                    "diagnosticsProfile": {
                      "vmDiagnostics": {
                        "enabled": true,
                        "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                      }
                    }
                  }
                }
              },
              "202": {
                "body": {
                  "type": "Microsoft.ContainerService/ContainerServices",
                  "location": "location1",
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1",
                  "name": "acs1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorProfile": {
                      "orchestratorType": "DCOS"
                    },
                    "masterProfile": {
                      "count": 1,
                      "dnsPrefix": "acs1-rg1-e240e5mgmt",
                      "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                      "vmSize": "Standard_D2_v2"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "agentpool0",
                        "count": 3,
                        "vmSize": "Standard_D2_v2",
                        "dnsPrefix": "acs1-rg1-e240e5agent",
                        "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                        "osType": "Linux"
                      }
                    ],
                    "linuxProfile": {
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                          }
                        ]
                      },
                      "adminUsername": "azureuser"
                    },
                    "diagnosticsProfile": {
                      "vmDiagnostics": {
                        "enabled": true,
                        "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "deprecated": true,
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerServices_Get",
        "summary": "Gets the properties of the specified container service.",
        "description": "Gets the properties of the specified container service in the specified subscription and resource group. The operation returns the properties including state, orchestrator, number of masters and agents, and FQDNs of masters and agents. ",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service in the specified subscription and resource group."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2017-07-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerService"
            }
          }
        },
        "x-ms-examples": {
          "Get Container Service": {
            "parameters": {
              "api-version": "2017-07-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "containerServiceName": "acs1"
            },
            "responses": {
              "200": {
                "body": {
                  "type": "Microsoft.ContainerService/ContainerServices",
                  "location": "location1",
                  "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.ContainerService/containerServices/acs1",
                  "name": "acs1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "orchestratorProfile": {
                      "orchestratorType": "DCOS"
                    },
                    "masterProfile": {
                      "count": 1,
                      "dnsPrefix": "acs1-rg1-e240e5mgmt",
                      "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                      "vmSize": "Standard_D2_v2"
                    },
                    "agentPoolProfiles": [
                      {
                        "name": "agentpool0",
                        "count": 3,
                        "vmSize": "Standard_D2_v2",
                        "dnsPrefix": "acs1-rg1-e240e5agent",
                        "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                        "osType": "Linux"
                      }
                    ],
                    "linuxProfile": {
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                          }
                        ]
                      },
                      "adminUsername": "azureuser"
                    },
                    "diagnosticsProfile": {
                      "vmDiagnostics": {
                        "enabled": true,
                        "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "deprecated": true,
        "tags": [
          "ContainerService"
        ],
        "operationId": "ContainerServices_Delete",
        "summary": "Deletes the specified container service.",
        "description": "Deletes the specified container service in the specified subscription and resource group. The operation does not delete other resources created as part of creating a container service, including storage accounts, VMs, and availability sets. All the other resources created with the container service are part of the same resource group and can be deleted individually.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "containerServiceName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the container service in the specified subscription and resource group."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2017-07-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Not found"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Container Service": {
            "parameters": {
              "api-version": "2017-07-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "containerServiceName": "acs1"
            },
            "responses": {
              "202": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices": {
      "get": {
        "deprecated": true,
        "tags": [
          "ContainerServices"
        ],
        "operationId": "ContainerServices_ListByResourceGroup",
        "summary": "Gets a list of container services in the specified resource group.",
        "description": "Gets a list of container services in the specified subscription and resource group. The operation returns properties of each container service including state, orchestrator, number of masters and agents, and FQDNs of masters and agents.",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2017-07-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerServiceListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Container Services by Resource Group": {
            "parameters": {
              "api-version": "2017-07-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "type": "Microsoft.ContainerService/ContainerServices",
                      "location": "location1",
                      "id": "/subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs1",
                      "name": "acs1",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "orchestratorProfile": {
                          "orchestratorType": "DCOS"
                        },
                        "masterProfile": {
                          "count": 1,
                          "dnsPrefix": "acs1-rg1-e240e5mgmt",
                          "fqdn": "acs1-rg1-e240e5mgmt.location1.cloudapp.azure.com",
                          "vmSize": "Standard_D2_v2"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "agentpool0",
                            "count": 3,
                            "vmSize": "Standard_D2_v2",
                            "dnsPrefix": "acs1-rg1-e240e5agent",
                            "fqdn": "acs1-rg1-e240e5agent.location1.cloudapp.azure.com",
                            "osType": "Linux"
                          }
                        ],
                        "linuxProfile": {
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                              }
                            ]
                          },
                          "adminUsername": "azureuser"
                        },
                        "diagnosticsProfile": {
                          "vmDiagnostics": {
                            "enabled": true,
                            "storageUri": "https://mjwjtrv73stvgdiag0.blob.core.windows.net/"
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.ContainerService/ContainerServices",
                      "location": "location1",
                      "id": "/subscriptions/subid1/resourceGroups/RG1/providers/Microsoft.ContainerService/containerServices/acs2",
                      "name": "acs2",
                      "properties": {
                        "provisioningState": "Creating",
                        "orchestratorProfile": {
                          "orchestratorType": "DCOS"
                        },
                        "masterProfile": {
                          "count": 1,
                          "dnsPrefix": "acs2-rg1-e240e5mgmt",
                          "vmSize": "Standard_D2_v2"
                        },
                        "agentPoolProfiles": [
                          {
                            "name": "agentpool0",
                            "count": 3,
                            "vmSize": "Standard_D2_v2",
                            "dnsPrefix": "acs2-rg1-e240e5agent",
                            "osType": "Linux"
                          }
                        ],
                        "linuxProfile": {
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "ssh-rsa AAAAB3NzaC1y...+0vNzo1FAdQ== user@hostname.local\n"
                              }
                            ]
                          },
                          "adminUsername": "azureuser"
                        },
                        "diagnosticsProfile": {
                          "vmDiagnostics": {
                            "enabled": true
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/locations/{location}/orchestrators": {
      "get": {
        "tags": [
          "ContainerServices"
        ],
        "operationId": "ContainerServices_ListOrchestrators",
        "summary": "Gets a list of supported orchestrators in the specified subscription.",
        "description": "Gets a list of supported orchestrators in the specified subscription. The operation returns properties of each orchestrator including version, available upgrades and whether that version or upgrades are in preview.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2019-08-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ResourceTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrchestratorVersionProfileListResult"
            }
          }
        },
        "x-ms-examples": {
          "List Container Service Orchestrators": {
            "parameters": {
              "api-version": "2019-08-01",
              "subscriptionId": "subid1",
              "location": "location1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/providers/Microsoft.ContainerService/locations/location1/orchestrators",
                  "name": "default",
                  "type": "Microsoft.ContainerService/locations/orchestrators",
                  "properties": {
                    "orchestrators": [
                      {
                        "orchestratorType": "DCOS",
                        "orchestratorVersion": "1.10.0"
                      },
                      {
                        "orchestratorType": "DCOS",
                        "orchestratorVersion": "1.9.0"
                      },
                      {
                        "orchestratorType": "DCOS",
                        "orchestratorVersion": "1.8.8"
                      },
                      {
                        "orchestratorType": "Swarm",
                        "orchestratorVersion": "swarm:1.1.0"
                      },
                      {
                        "orchestratorType": "DockerCE",
                        "orchestratorVersion": "17.03.*"
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.8.1",
                        "upgrades": [
                          {
                            "orchestratorVersion": "1.8.4"
                          },
                          {
                            "orchestratorVersion": "1.8.2"
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.9.10",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.9.11",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.10.12",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.10.13",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.9.11",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.10.12",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.10.13",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.10.12",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.10.13",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.11.8",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.11.9",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.10.13",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.11.8",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.11.9",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.11.8",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.11.9",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.12.6",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.12.7",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.11.9",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.12.6",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.12.7",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.12.6",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.12.7",
                            "isPreview": false
                          },
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.13.5",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.12.7",
                        "default": true,
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.13.5",
                            "isPreview": false
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.13.5",
                        "upgrades": [
                          {
                            "orchestratorType": "",
                            "orchestratorVersion": "1.14.0",
                            "isPreview": true
                          }
                        ]
                      },
                      {
                        "orchestratorType": "Kubernetes",
                        "orchestratorVersion": "1.14.0",
                        "isPreview": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/providers/Microsoft.ContainerService/operations": {
      "get": {
        "tags": [
          "managedClusters"
        ],
        "operationId": "Operations_List",
        "description": "Gets a list of compute operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/managedClusters": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_List",
        "summary": "Gets a list of managed clusters in the specified subscription.",
        "description": "Gets a list of managed clusters in the specified subscription. The operation returns properties of each managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Managed Clusters": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/subid1/providers/Microsoft.ContainerService/managedClusters",
                      "location": "location1",
                      "name": "clustername1",
                      "tags": {
                        "archv2": "",
                        "tier": "production"
                      },
                      "type": "Microsoft.ContainerService/ManagedClusters",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "kubernetesVersion": "1.9.6",
                        "maxAgentPools": 1,
                        "dnsPrefix": "dnsprefix1",
                        "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                        "agentPoolProfiles": [
                          {
                            "name": "nodepool1",
                            "count": 3,
                            "vmSize": "Standard_DS1_v2",
                            "maxPods": 110,
                            "osType": "Linux",
                            "provisioningState": "Succeeded",
                            "orchestratorVersion": "1.9.6"
                          }
                        ],
                        "linuxProfile": {
                          "adminUsername": "azureuser",
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "keydata"
                              }
                            ]
                          }
                        },
                        "servicePrincipalProfile": {
                          "clientId": "clientid"
                        },
                        "nodeResourceGroup": "MC_rg1_clustername1_location1",
                        "enableRBAC": false,
                        "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                        "networkProfile": {
                          "networkPlugin": "kubenet",
                          "podCidr": "10.244.0.0/16",
                          "serviceCidr": "10.0.0.0/16",
                          "dnsServiceIP": "10.0.0.10",
                          "dockerBridgeCidr": "172.17.0.1/16"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListByResourceGroup",
        "summary": "Lists managed clusters in the specified subscription and resource group.",
        "description": "Lists managed clusters in the specified subscription and resource group. The operation returns properties of each managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get Managed Clusters by Resource Group": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters",
                      "location": "location1",
                      "name": "clustername1",
                      "tags": {
                        "archv2": "",
                        "tier": "production"
                      },
                      "type": "Microsoft.ContainerService/ManagedClusters",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "kubernetesVersion": "1.9.6",
                        "maxAgentPools": 1,
                        "dnsPrefix": "dnsprefix1",
                        "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                        "agentPoolProfiles": [
                          {
                            "name": "nodepool1",
                            "count": 3,
                            "vmSize": "Standard_DS1_v2",
                            "maxPods": 110,
                            "osType": "Linux",
                            "provisioningState": "Succeeded",
                            "orchestratorVersion": "1.9.6"
                          }
                        ],
                        "linuxProfile": {
                          "adminUsername": "azureuser",
                          "ssh": {
                            "publicKeys": [
                              {
                                "keyData": "keydata"
                              }
                            ]
                          }
                        },
                        "servicePrincipalProfile": {
                          "clientId": "clientid"
                        },
                        "nodeResourceGroup": "MC_rg1_clustername1_location1",
                        "enableRBAC": false,
                        "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                        "networkProfile": {
                          "networkPlugin": "kubenet",
                          "podCidr": "10.244.0.0/16",
                          "serviceCidr": "10.0.0.0/16",
                          "dnsServiceIP": "10.0.0.10",
                          "dockerBridgeCidr": "172.17.0.1/16"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/upgradeProfiles/default": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_GetUpgradeProfile",
        "summary": "Gets upgrade profile for a managed cluster.",
        "description": "Gets the details of the upgrade profile for a managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterUpgradeProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Upgrade Profile for Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/upgradeprofiles/default",
                  "name": "default",
                  "properties": {
                    "agentPoolProfiles": [
                      {
                        "kubernetesVersion": "1.7.7",
                        "name": "agent",
                        "osType": "Linux",
                        "upgrades": [
                          {
                            "kubernetesVersion": "1.7.9"
                          },
                          {
                            "kubernetesVersion": "1.7.11",
                            "isPreview": true
                          }
                        ]
                      }
                    ],
                    "controlPlaneProfile": {
                      "kubernetesVersion": "1.7.7",
                      "name": "master",
                      "osType": "Linux",
                      "upgrades": [
                        {
                          "kubernetesVersion": "1.7.9",
                          "isPreview": true
                        },
                        {
                          "kubernetesVersion": "1.7.11"
                        }
                      ]
                    }
                  },
                  "type": "Microsoft.ContainerService/managedClusters/upgradeprofiles"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/accessProfiles/{roleName}/listCredential": {
      "post": {
        "deprecated": true,
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_GetAccessProfile",
        "summary": "Gets an access profile of a managed cluster.",
        "description": "Gets the accessProfile for the specified role name of the managed cluster with a specified resource group and name. **WARNING**: This API will be deprecated. Instead use [ListClusterUserCredentials](https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusterusercredentials) or [ListClusterAdminCredentials](https://docs.microsoft.com/en-us/rest/api/aks/managedclusters/listclusteradmincredentials) .",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the role for managed cluster accessProfile resource."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedClusterAccessProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "roleName": "clusterUser"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/accessProfiles/clusterUser",
                  "location": "location1",
                  "name": "clusterUser",
                  "properties": {
                    "kubeConfig": "kubeConfig1"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters/AccessProfiles"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterAdminCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterAdminCredentials",
        "summary": "Gets cluster admin credential of a managed cluster.",
        "description": "Gets cluster admin credential of the managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "kubeconfigs": [
                    {
                      "name": "credentialName1",
                      "value": "credentialValue1"
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterUserCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterUserCredentials",
        "summary": "Gets cluster user credential of a managed cluster.",
        "description": "Gets cluster user credential of the managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "kubeconfigs": [
                    {
                      "name": "credentialName1",
                      "value": "credentialValue1"
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/listClusterMonitoringUserCredential": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ListClusterMonitoringUserCredentials",
        "summary": "Gets cluster monitoring user credential of a managed cluster.",
        "description": "Gets cluster monitoring user credential of the managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CredentialResults"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "kubeconfigs": [
                    {
                      "name": "credentialName1",
                      "value": "credentialValue1"
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}": {
      "get": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Get",
        "summary": "Gets a managed cluster.",
        "description": "Gets the details of the managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Succeeded",
                        "orchestratorVersion": "1.9.6",
                        "availabilityZones": [
                          "1",
                          "2",
                          "3"
                        ],
                        "nodeImageVersion": "AKSUbuntu:1604:2020.03.11",
                        "upgradeSettings": {
                          "maxSurge": "33%"
                        }
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": false,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "networkProfile": {
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "loadBalancerSku": "standard",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "outboundIPs": {
                          "publicIPs": [
                            {
                              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/customeroutboundip1"
                            },
                            {
                              "id": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/customeroutboundip2"
                            }
                          ]
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_CreateOrUpdate",
        "summary": "Creates or updates a managed cluster.",
        "description": "Creates or updates a managed cluster with the specified configuration for agents and Kubernetes version.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            },
            "description": "Parameters supplied to the Create or Update a Managed Cluster operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "location": "location1",
                "tags": {
                  "tier": "production",
                  "archv2": ""
                },
                "sku": {
                  "name": "Basic",
                  "tier": "Free"
                },
                "properties": {
                  "kubernetesVersion": "",
                  "dnsPrefix": "dnsprefix1",
                  "agentPoolProfiles": [
                    {
                      "name": "nodepool1",
                      "count": 3,
                      "vmSize": "Standard_DS1_v2",
                      "osType": "Linux",
                      "type": "VirtualMachineScaleSets",
                      "availabilityZones": [
                        "1",
                        "2",
                        "3"
                      ],
                      "enableNodePublicIP": true,
                      "mode": "System",
                      "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                    }
                  ],
                  "linuxProfile": {
                    "adminUsername": "azureuser",
                    "ssh": {
                      "publicKeys": [
                        {
                          "keyData": "keydata"
                        }
                      ]
                    }
                  },
                  "networkProfile": {
                    "loadBalancerSku": "standard",
                    "outboundType": "loadBalancer",
                    "loadBalancerProfile": {
                      "managedOutboundIPs": {
                        "count": 2
                      }
                    }
                  },
                  "autoScalerProfile": {
                    "scan-interval": "20s",
                    "scale-down-delay-after-add": "15m"
                  },
                  "windowsProfile": {
                    "adminUsername": "azureuser",
                    "adminPassword": "replacePassword1234$"
                  },
                  "servicePrincipalProfile": {
                    "clientId": "clientid",
                    "secret": "secret"
                  },
                  "addonProfiles": {},
                  "enableRBAC": true,
                  "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                  "enablePodSecurityPolicy": true
                },
                "identity": {
                  "type": "UserAssigned",
                  "userAssignedIdentities": {
                    "/subscriptions/subid1/resourceGroups/rgName1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {}
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Succeeded",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                          "1",
                          "2",
                          "3"
                        ],
                        "enableNodePublicIP": true,
                        "mode": "System",
                        "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                    "networkProfile": {
                      "loadBalancerSku": "basic",
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  },
                  "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                      "/subscriptions/subid1/resourceGroups/rgName1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {
                        "principalId": "principalId1",
                        "clientId": "clientId1"
                      }
                    }
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Creating",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Creating",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                          "1",
                          "2",
                          "3"
                        ],
                        "enableNodePublicIP": true,
                        "mode": "System"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "networkProfile": {
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "loadBalancerSku": "standard",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  },
                  "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentities": {
                      "/subscriptions/subid1/resourceGroups/rgName1/providers/Microsoft.ManagedIdentity/userAssignedIdentities/identity1": {
                        "principalId": "principalId1",
                        "clientId": "clientId1"
                      }
                    }
                  }
                }
              }
            }
          },
          "Create/Update AAD Managed Cluster with EnableAzureRBAC": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "location": "location1",
                "tags": {
                  "tier": "production",
                  "archv2": ""
                },
                "sku": {
                  "name": "Basic",
                  "tier": "Free"
                },
                "properties": {
                  "kubernetesVersion": "",
                  "dnsPrefix": "dnsprefix1",
                  "agentPoolProfiles": [
                    {
                      "name": "nodepool1",
                      "count": 3,
                      "vmSize": "Standard_DS1_v2",
                      "osType": "Linux",
                      "type": "VirtualMachineScaleSets",
                      "availabilityZones": [
                        "1",
                        "2",
                        "3"
                      ],
                      "enableNodePublicIP": true,
                      "mode": "System",
                      "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                    }
                  ],
                  "linuxProfile": {
                    "adminUsername": "azureuser",
                    "ssh": {
                      "publicKeys": [
                        {
                          "keyData": "keydata"
                        }
                      ]
                    }
                  },
                  "networkProfile": {
                    "loadBalancerSku": "standard",
                    "outboundType": "loadBalancer",
                    "loadBalancerProfile": {
                      "managedOutboundIPs": {
                        "count": 2
                      }
                    }
                  },
                  "autoScalerProfile": {
                    "scan-interval": "20s",
                    "scale-down-delay-after-add": "15m"
                  },
                  "windowsProfile": {
                    "adminUsername": "azureuser",
                    "adminPassword": "replacePassword1234$"
                  },
                  "servicePrincipalProfile": {
                    "clientId": "clientid",
                    "secret": "secret"
                  },
                  "addonProfiles": {},
                  "aadProfile": {
                    "managed": true,
                    "enableAzureRBAC": true
                  },
                  "enableRBAC": true,
                  "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                  "enablePodSecurityPolicy": true
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Succeeded",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                          "1",
                          "2",
                          "3"
                        ],
                        "enableNodePublicIP": true,
                        "mode": "System",
                        "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                    "networkProfile": {
                      "loadBalancerSku": "basic",
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "aadProfile": {
                      "managed": true,
                      "adminGroupObjectIDs": null,
                      "enableAzureRBAC": true,
                      "tenantID": "tenantID"
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Creating",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Creating",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "availabilityZones": [
                          "1",
                          "2",
                          "3"
                        ],
                        "enableNodePublicIP": true,
                        "mode": "System"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "networkProfile": {
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "loadBalancerSku": "standard",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "aadProfile": {
                      "managed": true,
                      "adminGroupObjectIDs": null,
                      "enableAzureRBAC": true,
                      "tenantID": "tenantID"
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  }
                }
              }
            }
          },
          "Create Managed Cluster with PPG": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "location": "location1",
                "tags": {
                  "tier": "production",
                  "archv2": ""
                },
                "sku": {
                  "name": "Basic",
                  "tier": "Free"
                },
                "properties": {
                  "kubernetesVersion": "",
                  "dnsPrefix": "dnsprefix1",
                  "agentPoolProfiles": [
                    {
                      "name": "nodepool1",
                      "count": 3,
                      "vmSize": "Standard_DS2_v2",
                      "osType": "Linux",
                      "type": "VirtualMachineScaleSets",
                      "enableNodePublicIP": true,
                      "mode": "System",
                      "nodeImageVersion": "AKSUbuntu:1604:2020.03.11",
                      "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                    }
                  ],
                  "linuxProfile": {
                    "adminUsername": "azureuser",
                    "ssh": {
                      "publicKeys": [
                        {
                          "keyData": "keydata"
                        }
                      ]
                    }
                  },
                  "networkProfile": {
                    "loadBalancerSku": "standard",
                    "outboundType": "loadBalancer",
                    "loadBalancerProfile": {
                      "managedOutboundIPs": {
                        "count": 2
                      }
                    }
                  },
                  "autoScalerProfile": {
                    "scan-interval": "20s",
                    "scale-down-delay-after-add": "15m"
                  },
                  "windowsProfile": {
                    "adminUsername": "azureuser",
                    "adminPassword": "replacePassword1234$"
                  },
                  "servicePrincipalProfile": {
                    "clientId": "clientid",
                    "secret": "secret"
                  },
                  "addonProfiles": {},
                  "enableRBAC": true,
                  "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                  "enablePodSecurityPolicy": true
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS2_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Succeeded",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "enableNodePublicIP": true,
                        "mode": "System",
                        "nodeImageVersion": "AKSUbuntu:1604:2020.03.11",
                        "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                    "networkProfile": {
                      "loadBalancerSku": "basic",
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv2": "",
                    "tier": "production"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Creating",
                    "maxAgentPools": 1,
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS2_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Creating",
                        "orchestratorVersion": "1.9.6",
                        "type": "VirtualMachineScaleSets",
                        "enableNodePublicIP": true,
                        "mode": "System",
                        "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "windowsProfile": {
                      "adminUsername": "azureuser"
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": true,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "enablePodSecurityPolicy": true,
                    "networkProfile": {
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16",
                      "loadBalancerSku": "standard",
                      "outboundType": "loadBalancer",
                      "loadBalancerProfile": {
                        "allocatedOutboundPorts": 2000,
                        "idleTimeoutInMinutes": 10,
                        "managedOutboundIPs": {
                          "count": 2
                        },
                        "effectiveOutboundIPs": [
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip1"
                          },
                          {
                            "id": "/subscriptions/subid1/resourceGroups/MC_rg1/providers/Microsoft.Network/publicIPAddresses/mgdoutboundip2"
                          }
                        ]
                      }
                    },
                    "autoScalerProfile": {
                      "scan-interval": "20s",
                      "scale-down-delay-after-add": "15m"
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_UpdateTags",
        "summary": "Updates tags on a managed cluster.",
        "description": "Updates a managed cluster with the specified tags.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TagsObject"
            },
            "description": "Parameters supplied to the Update Managed Cluster Tags operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagedCluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update Managed Cluster Tags": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "tags": {
                  "tier": "testing",
                  "archv3": ""
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1",
                  "location": "location1",
                  "name": "clustername1",
                  "tags": {
                    "archv3": "",
                    "tier": "testing"
                  },
                  "type": "Microsoft.ContainerService/ManagedClusters",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "kubernetesVersion": "1.9.6",
                    "dnsPrefix": "dnsprefix1",
                    "agentPoolProfiles": [
                      {
                        "name": "nodepool1",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "provisioningState": "Succeeded",
                        "orchestratorVersion": "1.9.6"
                      }
                    ],
                    "linuxProfile": {
                      "adminUsername": "azureuser",
                      "ssh": {
                        "publicKeys": [
                          {
                            "keyData": "keydata"
                          }
                        ]
                      }
                    },
                    "servicePrincipalProfile": {
                      "clientId": "clientid"
                    },
                    "nodeResourceGroup": "MC_rg1_clustername1_location1",
                    "enableRBAC": false,
                    "diskEncryptionSetID": "/subscriptions/subid1/resourceGroups/rg1/providers/Microsoft.Compute/diskEncryptionSets/des",
                    "fqdn": "dnsprefix1-abcd1234.hcp.eastus.azmk8s.io",
                    "networkProfile": {
                      "networkPlugin": "kubenet",
                      "podCidr": "10.244.0.0/16",
                      "serviceCidr": "10.0.0.0/16",
                      "dnsServiceIP": "10.0.0.10",
                      "dockerBridgeCidr": "172.17.0.1/16"
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_Delete",
        "summary": "Deletes a managed cluster.",
        "description": "Deletes the managed cluster with a specified resource group and name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "202": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_List",
        "summary": "Gets a list of agent pools in the specified managed cluster.",
        "description": "Gets a list of agent pools in the specified managed cluster. The operation returns properties of each agent pool.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Agent Pools by Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                      "name": "agentpool1",
                      "properties": {
                        "provisioningState": "Succeeded",
                        "count": 3,
                        "vmSize": "Standard_DS1_v2",
                        "maxPods": 110,
                        "osType": "Linux",
                        "orchestratorVersion": "1.9.6",
                        "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_Get",
        "summary": "Gets the agent pool.",
        "description": "Gets the details of the agent pool by managed cluster and resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "count": 3,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "orchestratorVersion": "1.9.6",
                    "nodeImageVersion": "AKSUbuntu:1604:2020.03.11",
                    "upgradeSettings": {
                      "maxSurge": "33%"
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_CreateOrUpdate",
        "summary": "Creates or updates an agent pool.",
        "description": "Creates or updates an agent pool in the specified managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgentPool"
            },
            "description": "Parameters supplied to the Create or Update an agent pool operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AgentPool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Create/Update Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1",
              "parameters": {
                "properties": {
                  "orchestratorVersion": "",
                  "count": 3,
                  "vmSize": "Standard_DS1_v2",
                  "osType": "Linux",
                  "tags": {
                    "name1": "val1"
                  },
                  "nodeLabels": {
                    "key1": "val1"
                  },
                  "nodeTaints": [
                    "Key1=Value1:NoSchedule"
                  ],
                  "scaleSetPriority": "Spot",
                  "scaleSetEvictionPolicy": "Delete",
                  "mode": "User"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "tags": {
                      "name1": "val1"
                    },
                    "nodeLabels": {
                      "key1": "val1"
                    },
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete",
                    "mode": "User",
                    "nodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "tags": {
                      "name1": "val1"
                    },
                    "nodeLabels": {
                      "key1": "val1"
                    },
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete",
                    "mode": "User"
                  }
                }
              }
            }
          },
          "Update Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1",
              "parameters": {
                "properties": {
                  "orchestratorVersion": "",
                  "count": 3,
                  "enableAutoScaling": true,
                  "minCount": 2,
                  "maxCount": 2,
                  "vmSize": "Standard_DS1_v2",
                  "osType": "Linux",
                  "nodeTaints": [
                    "Key1=Value1:NoSchedule"
                  ],
                  "scaleSetPriority": "Spot",
                  "scaleSetEvictionPolicy": "Delete"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "enableAutoScaling": true,
                    "minCount": 2,
                    "maxCount": 2,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Updating",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "enableAutoScaling": true,
                    "minCount": 2,
                    "maxCount": 2,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete"
                  }
                }
              }
            }
          },
          "Create Spot Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1",
              "parameters": {
                "properties": {
                  "orchestratorVersion": "",
                  "count": 3,
                  "vmSize": "Standard_DS1_v2",
                  "osType": "Linux",
                  "tags": {
                    "name1": "val1"
                  },
                  "nodeLabels": {
                    "key1": "val1"
                  },
                  "nodeTaints": [
                    "Key1=Value1:NoSchedule"
                  ],
                  "scaleSetPriority": "Spot",
                  "scaleSetEvictionPolicy": "Delete"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "tags": {
                      "name1": "val1"
                    },
                    "nodeLabels": {
                      "key1": "val1"
                    },
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete",
                    "spotMaxPrice": -1
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS1_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "tags": {
                      "name1": "val1"
                    },
                    "nodeLabels": {
                      "key1": "val1"
                    },
                    "nodeTaints": [
                      "Key1=Value1:NoSchedule"
                    ],
                    "scaleSetPriority": "Spot",
                    "scaleSetEvictionPolicy": "Delete",
                    "spotMaxPrice": -1
                  }
                }
              }
            }
          },
          "Create Agent Pool with PPG": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1",
              "parameters": {
                "properties": {
                  "orchestratorVersion": "",
                  "count": 3,
                  "vmSize": "Standard_DS2_v2",
                  "osType": "Linux",
                  "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Succeeded",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS2_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                  }
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1",
                  "type": "Microsoft.ContainerService/managedClusters/agentPools",
                  "name": "agentpool1",
                  "properties": {
                    "provisioningState": "Creating",
                    "orchestratorVersion": "1.9.6",
                    "count": 3,
                    "vmSize": "Standard_DS2_v2",
                    "maxPods": 110,
                    "osType": "Linux",
                    "proximityPlacementGroupID": "/subscriptions/subid1/resourcegroups/rg1/providers//Microsoft.Compute/proximityPlacementGroups/ppg1"
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_Delete",
        "summary": "Deletes an agent pool.",
        "description": "Deletes the agent pool in the specified managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1"
            },
            "responses": {
              "202": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}/upgradeProfiles/default": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_GetUpgradeProfile",
        "summary": "Gets upgrade profile for an agent pool.",
        "description": "Gets the details of the upgrade profile for an agent pool with a specified resource group and managed cluster name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "agentPoolName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the agent pool."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolUpgradeProfile"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Upgrade Profile for Agent Pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "agentPoolName": "agentpool1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/agentPools/agentpool1/upgradeprofiles/default",
                  "name": "default",
                  "properties": {
                    "kubernetesVersion": "1.12.8",
                    "osType": "Linux",
                    "upgrades": [
                      {
                        "kubernetesVersion": "1.13.5"
                      }
                    ],
                    "latestNodeImageVersion": "AKSUbuntu:1604:2020.03.11"
                  },
                  "type": "Microsoft.ContainerService/managedClusters/agentPools/upgradeProfiles"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/availableAgentPoolVersions": {
      "get": {
        "tags": [
          "AgentPools"
        ],
        "operationId": "AgentPools_GetAvailableAgentPoolVersions",
        "summary": "Gets a list of supported versions for the specified agent pool.",
        "description": "Gets a list of supported versions for the specified agent pool.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AgentPoolAvailableVersions"
            }
          }
        },
        "x-ms-examples": {
          "Get available versions for agent pool": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/subid1/resourcegroups/rg1/providers/Microsoft.ContainerService/managedClusters/clustername1/availableagentpoolversions",
                  "name": "default",
                  "properties": {
                    "agentPoolVersions": [
                      {
                        "kubernetesVersion": "1.12.7"
                      },
                      {
                        "kubernetesVersion": "1.12.8"
                      },
                      {
                        "default": true,
                        "kubernetesVersion": "1.13.5",
                        "isPreview": true
                      }
                    ]
                  },
                  "type": "Microsoft.ContainerService/managedClusters/availableAgentpoolVersions"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetServicePrincipalProfile": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ResetServicePrincipalProfile",
        "summary": "Reset Service Principal Profile of a managed cluster.",
        "description": "Update the service principal Profile for a managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterServicePrincipalProfile"
            },
            "description": "Parameters supplied to the Reset Service Principal Profile operation for a Managed Cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Reset Service Principal Profile": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "clientId": "clientid",
                "secret": "secret"
              }
            },
            "responses": {
              "200": {},
              "202": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/resetAADProfile": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_ResetAADProfile",
        "summary": "Reset AAD Profile of a managed cluster.",
        "description": "Update the AAD Profile for a managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedClusterAADProfile"
            },
            "description": "Parameters supplied to the Reset AAD Profile operation for a Managed Cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Reset AAD Profile": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "parameters": {
                "clientAppID": "clientappid",
                "serverAppID": "serverappid",
                "serverAppSecret": "serverappsecret",
                "tenantID": "tenantid"
              }
            },
            "responses": {
              "200": {},
              "202": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/rotateClusterCertificates": {
      "post": {
        "tags": [
          "ManagedClusters"
        ],
        "operationId": "ManagedClusters_RotateClusterCertificates",
        "summary": "Rotate certificates of a managed cluster.",
        "description": "Rotate certificates of a managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "description": "Error response describing why the operation failed. If the cluster doesn't exist, 404 (Not found) is returned.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Rotate Cluster Certificates": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "202": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_List",
        "summary": "Gets a list of private endpoint connections in the specified managed cluster.",
        "description": "Gets a list of private endpoint connections in the specified managed cluster. The operation returns properties of each private endpoint connection.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Private Endpoint Connections by Managed Cluster": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "properties": {
                        "privateEndpoint": {
                          "id": "/subscriptions/subid2/resourceGroups/rg2/providers/Microsoft.Network/privateEndpoints/pe2"
                        },
                        "privateLinkServiceConnectionState": {
                          "status": "Approved"
                        },
                        "provisioningState": "Succeeded"
                      },
                      "name": "privateendpointconnection1",
                      "type": "Microsoft.Network/privateLinkServices/privateEndpointConnections"
                    }
                  ]
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Get",
        "summary": "Gets the private endpoint connection.",
        "description": "Gets the details of the private endpoint connection by managed cluster and resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Private Endpoint Connection": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "privateEndpointConnectionName": "privateendpointconnection1"
            },
            "responses": {
              "200": {
                "body": {
                  "properties": {
                    "privateEndpoint": {
                      "id": "/subscriptions/subid2/resourceGroups/rg2/providers/Microsoft.Network/privateEndpoints/pe2"
                    },
                    "privateLinkServiceConnectionState": {
                      "status": "Approved"
                    },
                    "provisioningState": "Succeeded"
                  },
                  "name": "privateendpointconnection1",
                  "type": "Microsoft.Network/privateLinkServices/privateEndpointConnections"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Update",
        "summary": "Updates a private endpoint connection.",
        "description": "Updates a private endpoint connection in the specified managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            },
            "description": "Parameters supplied to the Update a private endpoint connection operation."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PrivateEndpointConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update Private Endpoint Connection": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "privateEndpointConnectionName": "privateendpointconnection1",
              "parameters": {
                "properties": {
                  "privateLinkServiceConnectionState": {
                    "status": "Approved"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "body": {
                  "properties": {
                    "privateEndpoint": {
                      "id": "/subscriptions/subid2/resourceGroups/rg2/providers/Microsoft.Network/privateEndpoints/pe2"
                    },
                    "privateLinkServiceConnectionState": {
                      "status": "Approved"
                    },
                    "provisioningState": "Succeeded"
                  },
                  "name": "privateendpointconnection1",
                  "type": "Microsoft.Network/privateLinkServices/privateEndpointConnections"
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "operationId": "PrivateEndpointConnections_Delete",
        "summary": "Deletes a private endpoint connection.",
        "description": "Deletes the private endpoint connection in the specified managed cluster.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version.",
            "x-ms-parameter-location": "client",
            "enum": [
              "2020-06-01"
            ]
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete Private Endpoint Connection": {
            "parameters": {
              "api-version": "2020-06-01",
              "subscriptionId": "subid1",
              "resourceGroupName": "rg1",
              "resourceName": "clustername1",
              "privateEndpointConnectionName": "privateendpointconnection1"
            },
            "responses": {
              "200": {},
              "204": {}
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "The Resource model definition.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "CloudError": {
      "x-ms-external": true,
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Details about the error."
        }
      },
      "description": "An error response from the Container service."
    },
    "CloudErrorBody": {
      "x-ms-external": true,
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the Container service."
    },
    "PurchasePlan": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The plan ID."
        },
        "product": {
          "type": "string",
          "description": "Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element."
        },
        "promotionCode": {
          "type": "string",
          "description": "The promotion code."
        },
        "publisher": {
          "type": "string",
          "description": "The plan ID."
        }
      },
      "description": "Used for establishing the purchase context of any 3rd Party artifact through MarketPlace."
    },
    "OpenShiftRouterProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the router profile."
        },
        "publicSubdomain": {
          "type": "string",
          "readOnly": true,
          "description": "DNS subdomain for OpenShift router."
        },
        "fqdn": {
          "type": "string",
          "readOnly": true,
          "description": "Auto-allocated FQDN for the OpenShift router."
        }
      },
      "description": "Represents an OpenShift router"
    },
    "NetworkProfile": {
      "properties": {
        "vnetCidr": {
          "type": "string",
          "description": "CIDR for the OpenShift Vnet.",
          "default": "10.0.0.0/8"
        },
        "peerVnetId": {
          "type": "string",
          "description": "CIDR of the Vnet to peer."
        },
        "vnetId": {
          "type": "string",
          "description": "ID of the Vnet created for OSA cluster."
        }
      },
      "description": "Represents the OpenShift networking configuration"
    },
    "OSType": {
      "type": "string",
      "default": "Linux",
      "enum": [
        "Linux",
        "Windows"
      ],
      "x-ms-enum": {
        "name": "OSType",
        "modelAsString": true
      },
      "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
    },
    "OpenShiftContainerServiceVMSize": {
      "type": "string",
      "x-ms-enum": {
        "name": "OpenShiftContainerServiceVMSize",
        "modelAsString": true
      },
      "description": "Size of OpenShift VMs.",
      "enum": [
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_F8s_v2",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8s",
        "Standard_F16s",
        "Standard_E4s_v3",
        "Standard_E8s_v3",
        "Standard_E16s_v3",
        "Standard_E20s_v3",
        "Standard_E32s_v3",
        "Standard_E64s_v3",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s"
      ]
    },
    "OpenShiftAgentPoolProfileRole": {
      "type": "string",
      "enum": [
        "compute",
        "infra"
      ],
      "x-ms-enum": {
        "name": "OpenShiftAgentPoolProfileRole",
        "modelAsString": true
      },
      "description": "OpenShiftAgentPoolProfileRole represents the role of the AgentPoolProfile."
    },
    "OpenShiftManagedClusterMasterPoolProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the master pool profile in the context of the subscription and resource group."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of masters (VMs) to host docker containers. The default value is 3."
        },
        "vmSize": {
          "$ref": "#/definitions/OpenShiftContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "subnetCidr": {
          "type": "string",
          "description": "Subnet CIDR for the peering."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        }
      },
      "required": [
        "count",
        "vmSize"
      ],
      "description": "OpenShiftManagedClusterMaterPoolProfile contains configuration for OpenShift master VMs."
    },
    "OpenShiftManagedClusterAgentPoolProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the pool profile in the context of the subscription and resource group."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of agents (VMs) to host docker containers."
        },
        "vmSize": {
          "$ref": "#/definitions/OpenShiftContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "subnetCidr": {
          "type": "string",
          "description": "Subnet CIDR for the peering.",
          "default": "10.0.0.0/24"
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        },
        "role": {
          "description": "Define the role of the AgentPoolProfile.",
          "$ref": "#/definitions/OpenShiftAgentPoolProfileRole"
        }
      },
      "required": [
        "name",
        "count",
        "vmSize"
      ],
      "description": "Defines the configuration of the OpenShift cluster VMs."
    },
    "OpenShiftManagedClusterIdentityProvider": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the provider."
        },
        "provider": {
          "$ref": "#/definitions/OpenShiftManagedClusterBaseIdentityProvider",
          "description": "Configuration of the provider."
        }
      },
      "description": "Defines the configuration of the identity providers to be used in the OpenShift cluster."
    },
    "OpenShiftManagedClusterAuthProfile": {
      "properties": {
        "identityProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftManagedClusterIdentityProvider"
          },
          "description": "Type of authentication profile to use."
        }
      },
      "description": "Defines all possible authentication profiles for the OpenShift cluster."
    },
    "OpenShiftManagedClusterProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        },
        "openShiftVersion": {
          "type": "string",
          "description": "Version of OpenShift specified when creating the cluster."
        },
        "clusterVersion": {
          "readOnly": true,
          "type": "string",
          "description": "Version of OpenShift specified when creating the cluster."
        },
        "publicHostname": {
          "type": "string",
          "readOnly": true,
          "description": "Service generated FQDN for OpenShift API server."
        },
        "fqdn": {
          "type": "string",
          "readOnly": true,
          "description": "Service generated FQDN for OpenShift API server loadbalancer internal hostname."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "Configuration for OpenShift networking."
        },
        "routerProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftRouterProfile"
          },
          "description": "Configuration for OpenShift router(s)."
        },
        "masterPoolProfile": {
          "$ref": "#/definitions/OpenShiftManagedClusterMasterPoolProfile",
          "description": "Configuration for OpenShift master VMs."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftManagedClusterAgentPoolProfile"
          },
          "description": "Configuration of OpenShift cluster VMs."
        },
        "authProfile": {
          "$ref": "#/definitions/OpenShiftManagedClusterAuthProfile",
          "description": "Configures OpenShift authentication."
        }
      },
      "required": [
        "openShiftVersion"
      ],
      "description": "Properties of the OpenShift managed cluster."
    },
    "OpenShiftManagedCluster": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "plan": {
              "description": "Define the resource plan as required by ARM for billing purposes",
              "$ref": "#/definitions/PurchasePlan"
            },
            "properties": {
              "description": "Properties of a OpenShift managed cluster.",
              "$ref": "#/definitions/OpenShiftManagedClusterProperties",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "OpenShift Managed cluster."
    },
    "OpenShiftManagedClusterBaseIdentityProvider": {
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of the provider."
        }
      },
      "description": "Structure for any Identity provider."
    },
    "OpenShiftManagedClusterAADIdentityProvider": {
      "x-ms-discriminator-value": "AADIdentityProvider",
      "allOf": [
        {
          "$ref": "#/definitions/OpenShiftManagedClusterBaseIdentityProvider"
        },
        {
          "properties": {
            "clientId": {
              "type": "string",
              "description": "The clientId password associated with the provider."
            },
            "secret": {
              "type": "string",
              "description": "The secret password associated with the provider."
            },
            "tenantId": {
              "type": "string",
              "description": "The tenantId associated with the provider."
            },
            "customerAdminGroupId": {
              "type": "string",
              "description": "The groupId to be granted cluster admin role."
            }
          }
        }
      ],
      "description": "Defines the Identity provider for MS AAD."
    },
    "TagsObject": {
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Tags object for patch operations."
    },
    "OpenShiftManagedClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OpenShiftManagedCluster"
          },
          "description": "The list of OpenShift managed clusters."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of OpenShift managed cluster results.",
          "readOnly": true
        }
      },
      "description": "The response from the List OpenShift Managed Clusters operation."
    },
    "ContainerServiceOSDisk": {
      "type": "integer",
      "format": "int32",
      "maximum": 1023,
      "minimum": 0,
      "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
    },
    "ContainerServiceStorageProfile": {
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerServiceStorageProfileTypes",
        "modelAsString": true
      },
      "enum": [
        "StorageAccount",
        "ManagedDisks"
      ],
      "description": "Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice."
    },
    "ContainerServiceVnetSubnetID": {
      "type": "string",
      "description": "VNet SubnetID specifies the VNet's subnet identifier."
    },
    "ContainerServiceVMSize": {
      "type": "string",
      "x-ms-enum": {
        "name": "ContainerServiceVMSizeTypes",
        "modelAsString": true
      },
      "description": "Size of agent VMs.",
      "enum": [
        "Standard_A1",
        "Standard_A10",
        "Standard_A11",
        "Standard_A1_v2",
        "Standard_A2",
        "Standard_A2_v2",
        "Standard_A2m_v2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A4_v2",
        "Standard_A4m_v2",
        "Standard_A5",
        "Standard_A6",
        "Standard_A7",
        "Standard_A8",
        "Standard_A8_v2",
        "Standard_A8m_v2",
        "Standard_A9",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D1",
        "Standard_D11",
        "Standard_D11_v2",
        "Standard_D11_v2_Promo",
        "Standard_D12",
        "Standard_D12_v2",
        "Standard_D12_v2_Promo",
        "Standard_D13",
        "Standard_D13_v2",
        "Standard_D13_v2_Promo",
        "Standard_D14",
        "Standard_D14_v2",
        "Standard_D14_v2_Promo",
        "Standard_D15_v2",
        "Standard_D16_v3",
        "Standard_D16s_v3",
        "Standard_D1_v2",
        "Standard_D2",
        "Standard_D2_v2",
        "Standard_D2_v2_Promo",
        "Standard_D2_v3",
        "Standard_D2s_v3",
        "Standard_D3",
        "Standard_D32_v3",
        "Standard_D32s_v3",
        "Standard_D3_v2",
        "Standard_D3_v2_Promo",
        "Standard_D4",
        "Standard_D4_v2",
        "Standard_D4_v2_Promo",
        "Standard_D4_v3",
        "Standard_D4s_v3",
        "Standard_D5_v2",
        "Standard_D5_v2_Promo",
        "Standard_D64_v3",
        "Standard_D64s_v3",
        "Standard_D8_v3",
        "Standard_D8s_v3",
        "Standard_DS1",
        "Standard_DS11",
        "Standard_DS11_v2",
        "Standard_DS11_v2_Promo",
        "Standard_DS12",
        "Standard_DS12_v2",
        "Standard_DS12_v2_Promo",
        "Standard_DS13",
        "Standard_DS13-2_v2",
        "Standard_DS13-4_v2",
        "Standard_DS13_v2",
        "Standard_DS13_v2_Promo",
        "Standard_DS14",
        "Standard_DS14-4_v2",
        "Standard_DS14-8_v2",
        "Standard_DS14_v2",
        "Standard_DS14_v2_Promo",
        "Standard_DS15_v2",
        "Standard_DS1_v2",
        "Standard_DS2",
        "Standard_DS2_v2",
        "Standard_DS2_v2_Promo",
        "Standard_DS3",
        "Standard_DS3_v2",
        "Standard_DS3_v2_Promo",
        "Standard_DS4",
        "Standard_DS4_v2",
        "Standard_DS4_v2_Promo",
        "Standard_DS5_v2",
        "Standard_DS5_v2_Promo",
        "Standard_E16_v3",
        "Standard_E16s_v3",
        "Standard_E2_v3",
        "Standard_E2s_v3",
        "Standard_E32-16s_v3",
        "Standard_E32-8s_v3",
        "Standard_E32_v3",
        "Standard_E32s_v3",
        "Standard_E4_v3",
        "Standard_E4s_v3",
        "Standard_E64-16s_v3",
        "Standard_E64-32s_v3",
        "Standard_E64_v3",
        "Standard_E64s_v3",
        "Standard_E8_v3",
        "Standard_E8s_v3",
        "Standard_F1",
        "Standard_F16",
        "Standard_F16s",
        "Standard_F16s_v2",
        "Standard_F1s",
        "Standard_F2",
        "Standard_F2s",
        "Standard_F2s_v2",
        "Standard_F32s_v2",
        "Standard_F4",
        "Standard_F4s",
        "Standard_F4s_v2",
        "Standard_F64s_v2",
        "Standard_F72s_v2",
        "Standard_F8",
        "Standard_F8s",
        "Standard_F8s_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS4-4",
        "Standard_GS4-8",
        "Standard_GS5",
        "Standard_GS5-16",
        "Standard_GS5-8",
        "Standard_H16",
        "Standard_H16m",
        "Standard_H16mr",
        "Standard_H16r",
        "Standard_H8",
        "Standard_H8m",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_M128-32ms",
        "Standard_M128-64ms",
        "Standard_M128ms",
        "Standard_M128s",
        "Standard_M64-16ms",
        "Standard_M64-32ms",
        "Standard_M64ms",
        "Standard_M64s",
        "Standard_NC12",
        "Standard_NC12s_v2",
        "Standard_NC12s_v3",
        "Standard_NC24",
        "Standard_NC24r",
        "Standard_NC24rs_v2",
        "Standard_NC24rs_v3",
        "Standard_NC24s_v2",
        "Standard_NC24s_v3",
        "Standard_NC6",
        "Standard_NC6s_v2",
        "Standard_NC6s_v3",
        "Standard_ND12s",
        "Standard_ND24rs",
        "Standard_ND24s",
        "Standard_ND6s",
        "Standard_NV12",
        "Standard_NV24",
        "Standard_NV6"
      ]
    },
    "ContainerServiceCustomProfile": {
      "properties": {
        "orchestrator": {
          "type": "string",
          "description": "The name of the custom orchestrator to use."
        }
      },
      "description": "Properties to configure a custom container service cluster.",
      "required": [
        "orchestrator"
      ]
    },
    "KeyVaultSecretRef": {
      "properties": {
        "vaultID": {
          "type": "string",
          "description": "Key vault identifier."
        },
        "secretName": {
          "type": "string",
          "description": "The secret name."
        },
        "version": {
          "type": "string",
          "description": "The secret version."
        }
      },
      "description": "Reference to a secret stored in Azure Key Vault.",
      "required": [
        "vaultID",
        "secretName"
      ]
    },
    "ContainerServiceServicePrincipalProfile": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The ID for the service principal."
        },
        "secret": {
          "type": "string",
          "description": "The secret password associated with the service principal in plain text."
        },
        "keyVaultSecretRef": {
          "$ref": "#/definitions/KeyVaultSecretRef",
          "description": "Reference to a secret stored in Azure Key Vault."
        }
      },
      "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs. Either secret or keyVaultSecretRef must be specified.",
      "required": [
        "clientId"
      ]
    },
    "ContainerServiceOrchestratorProfile": {
      "properties": {
        "orchestratorType": {
          "type": "string",
          "enum": [
            "Kubernetes",
            "Swarm",
            "DCOS",
            "DockerCE",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ContainerServiceOrchestratorTypes",
            "modelAsString": true
          },
          "description": "The orchestrator to use to manage container service cluster resources. Valid values are Kubernetes, Swarm, DCOS, DockerCE and Custom."
        },
        "orchestratorVersion": {
          "type": "string",
          "description": "The version of the orchestrator to use. You can specify the major.minor.patch part of the actual version.For example, you can specify version as \"1.6.11\"."
        }
      },
      "description": "Profile for the container service orchestrator.",
      "required": [
        "orchestratorType"
      ]
    },
    "ContainerServiceMasterProfile": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "enum": [
            1,
            3,
            5
          ],
          "x-ms-enum": {
            "name": "Count",
            "modelAsString": false
          },
          "description": "Number of masters (VMs) in the container service cluster. Allowed values are 1, 3, and 5. The default value is 1.",
          "default": 1
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix to be used to create the FQDN for the master pool."
        },
        "vmSize": {
          "$ref": "#/definitions/ContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "osDiskSizeGB": {
          "$ref": "#/definitions/ContainerServiceOSDisk",
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
        },
        "vnetSubnetID": {
          "$ref": "#/definitions/ContainerServiceVnetSubnetID",
          "description": "VNet SubnetID specifies the VNet's subnet identifier."
        },
        "firstConsecutiveStaticIP": {
          "type": "string",
          "description": "FirstConsecutiveStaticIP used to specify the first static ip of masters.",
          "default": "10.240.255.5"
        },
        "storageProfile": {
          "$ref": "#/definitions/ContainerServiceStorageProfile",
          "description": "Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice."
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the master pool."
        }
      },
      "required": [
        "dnsPrefix",
        "vmSize"
      ],
      "description": "Profile for the container service master."
    },
    "ContainerServiceAgentPoolProfile": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the agent pool profile in the context of the subscription and resource group."
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "minimum": 1,
          "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
          "default": 1
        },
        "vmSize": {
          "$ref": "#/definitions/ContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "osDiskSizeGB": {
          "$ref": "#/definitions/ContainerServiceOSDisk",
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix to be used to create the FQDN for the agent pool."
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the agent pool."
        },
        "ports": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 1,
            "maximum": 65535
          },
          "description": "Ports number array used to expose on this agent pool. The default opened ports are different based on your choice of orchestrator."
        },
        "storageProfile": {
          "$ref": "#/definitions/ContainerServiceStorageProfile",
          "description": "Storage profile specifies what kind of storage used. Choose from StorageAccount and ManagedDisks. Leave it empty, we will choose for you based on the orchestrator choice."
        },
        "vnetSubnetID": {
          "$ref": "#/definitions/ContainerServiceVnetSubnetID",
          "description": "VNet SubnetID specifies the VNet's subnet identifier."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        }
      },
      "required": [
        "name",
        "vmSize"
      ],
      "description": "Profile for the container service agent pool."
    },
    "ContainerServiceWindowsProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for Windows VMs.",
          "pattern": "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$"
        },
        "adminPassword": {
          "type": "string",
          "description": "The administrator password to use for Windows VMs.",
          "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\^&\\*\\(\\)]{12,123}$"
        }
      },
      "required": [
        "adminUsername",
        "adminPassword"
      ],
      "description": "Profile for Windows VMs in the container service cluster."
    },
    "ContainerServiceLinuxProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for Linux VMs.",
          "pattern": "^[A-Za-z][-A-Za-z0-9_]*$"
        },
        "ssh": {
          "$ref": "#/definitions/ContainerServiceSshConfiguration",
          "description": "SSH configuration for Linux-based VMs running on Azure."
        }
      },
      "required": [
        "adminUsername",
        "ssh"
      ],
      "description": "Profile for Linux VMs in the container service cluster."
    },
    "ContainerServiceSshConfiguration": {
      "properties": {
        "publicKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerServiceSshPublicKey"
          },
          "description": "The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
        }
      },
      "description": "SSH configuration for Linux-based VMs running on Azure.",
      "required": [
        "publicKeys"
      ]
    },
    "ContainerServiceSshPublicKey": {
      "properties": {
        "keyData": {
          "type": "string",
          "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
        }
      },
      "required": [
        "keyData"
      ],
      "description": "Contains information about SSH certificate public key data."
    },
    "ContainerServiceDiagnosticsProfile": {
      "properties": {
        "vmDiagnostics": {
          "$ref": "#/definitions/ContainerServiceVMDiagnostics",
          "description": "Profile for diagnostics on the container service VMs."
        }
      },
      "description": "Profile for diagnostics on the container service cluster.",
      "required": [
        "vmDiagnostics"
      ]
    },
    "ContainerServiceVMDiagnostics": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the VM diagnostic agent is provisioned on the VM."
        },
        "storageUri": {
          "readOnly": true,
          "type": "string",
          "description": "The URI of the storage account where diagnostics are stored."
        }
      },
      "description": "Profile for diagnostics on the container service VMs.",
      "required": [
        "enabled"
      ]
    },
    "ContainerService": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "properties": {
              "description": "Properties of the container service.",
              "$ref": "#/definitions/ContainerServiceProperties",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "Container service."
    },
    "ContainerServiceListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerService"
          },
          "description": "The list of container services."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of container service results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Container Services operation."
    },
    "ContainerServiceProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        },
        "orchestratorProfile": {
          "$ref": "#/definitions/ContainerServiceOrchestratorProfile",
          "description": "Profile for the container service orchestrator."
        },
        "customProfile": {
          "$ref": "#/definitions/ContainerServiceCustomProfile",
          "description": "Properties to configure a custom container service cluster."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ContainerServiceServicePrincipalProfile",
          "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs. Exact one of secret or keyVaultSecretRef need to be specified."
        },
        "masterProfile": {
          "$ref": "#/definitions/ContainerServiceMasterProfile",
          "description": "Profile for the container service master."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerServiceAgentPoolProfile"
          },
          "description": "Properties of the agent pool."
        },
        "windowsProfile": {
          "$ref": "#/definitions/ContainerServiceWindowsProfile",
          "description": "Profile for Windows VMs in the container service cluster."
        },
        "linuxProfile": {
          "$ref": "#/definitions/ContainerServiceLinuxProfile",
          "description": "Profile for Linux VMs in the container service cluster."
        },
        "diagnosticsProfile": {
          "$ref": "#/definitions/ContainerServiceDiagnosticsProfile",
          "description": "Profile for diagnostics in the container service cluster."
        }
      },
      "required": [
        "orchestratorProfile",
        "masterProfile",
        "linuxProfile"
      ],
      "description": "Properties of the container service."
    },
    "OrchestratorProfile": {
      "properties": {
        "orchestratorType": {
          "type": "string",
          "description": "Orchestrator type."
        },
        "orchestratorVersion": {
          "type": "string",
          "description": "Orchestrator version (major, minor, patch)."
        },
        "isPreview": {
          "type": "boolean",
          "description": "Whether Kubernetes version is currently in preview."
        }
      },
      "required": [
        "orchestratorVersion"
      ],
      "description": "Contains information about orchestrator."
    },
    "OrchestratorVersionProfile": {
      "properties": {
        "orchestratorType": {
          "type": "string",
          "description": "Orchestrator type."
        },
        "orchestratorVersion": {
          "type": "string",
          "description": "Orchestrator version (major, minor, patch)."
        },
        "default": {
          "type": "boolean",
          "description": "Installed by default if version is not specified."
        },
        "isPreview": {
          "type": "boolean",
          "description": "Whether Kubernetes version is currently in preview."
        },
        "upgrades": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrchestratorProfile"
          },
          "description": "The list of available upgrade versions."
        }
      },
      "required": [
        "orchestratorVersion",
        "orchestratorType"
      ],
      "description": "The profile of an orchestrator and its available versions."
    },
    "OrchestratorVersionProfileProperties": {
      "properties": {
        "orchestrators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrchestratorVersionProfile"
          },
          "description": "List of orchestrator version profiles."
        }
      },
      "required": [
        "orchestrators"
      ],
      "description": "The properties of an orchestrator version profile."
    },
    "OrchestratorVersionProfileListResult": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Id of the orchestrator version profile list result."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the orchestrator version profile list result."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the orchestrator version profile list result."
        },
        "properties": {
          "$ref": "#/definitions/OrchestratorVersionProfileProperties",
          "description": "The properties of an orchestrator version profile.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of versions for supported orchestrators."
    },
    "OperationListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/OperationValue"
          },
          "description": "The list of compute operations"
        }
      },
      "description": "The List Compute Operation operation response."
    },
    "OperationValue": {
      "properties": {
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "The origin of the compute operation."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the compute operation."
        },
        "display": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationValueDisplay",
          "description": "Describes the properties of a Compute Operation Value Display."
        }
      },
      "description": "Describes the properties of a Compute Operation value."
    },
    "OperationValueDisplay": {
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the compute operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "The display name of the resource the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "The description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provider for the operation."
        }
      },
      "description": "Describes the properties of a Compute Operation Value Display."
    },
    "SubResource": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource ID."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        }
      },
      "description": "Reference to another subresource.",
      "x-ms-azure-resource": true
    },
    "ManagedClusterServicePrincipalProfile": {
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The ID for the service principal."
        },
        "secret": {
          "type": "string",
          "description": "The secret password associated with the service principal in plain text."
        }
      },
      "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
      "required": [
        "clientId"
      ]
    },
    "ManagedClusterAgentPoolProfileProperties": {
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1."
        },
        "vmSize": {
          "$ref": "#/definitions/ContainerServiceVMSize",
          "description": "Size of agent VMs."
        },
        "osDiskSizeGB": {
          "$ref": "#/definitions/ContainerServiceOSDisk",
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
        },
        "vnetSubnetID": {
          "$ref": "#/definitions/ContainerServiceVnetSubnetID",
          "description": "VNet SubnetID specifies the VNet's subnet identifier."
        },
        "maxPods": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of pods that can run on a node."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        },
        "maxCount": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of nodes for auto-scaling"
        },
        "minCount": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum number of nodes for auto-scaling"
        },
        "enableAutoScaling": {
          "type": "boolean",
          "description": "Whether to enable auto-scaler"
        },
        "type": {
          "$ref": "#/definitions/AgentPoolType",
          "description": "AgentPoolType represents types of an agent pool"
        },
        "mode": {
          "$ref": "#/definitions/AgentPoolMode",
          "description": "AgentPoolMode represents mode of an agent pool"
        },
        "orchestratorVersion": {
          "type": "string",
          "description": "Version of orchestrator specified when creating the managed cluster."
        },
        "nodeImageVersion": {
          "type": "string",
          "description": "Version of node image"
        },
        "upgradeSettings": {
          "$ref": "#/definitions/AgentPoolUpgradeSettings",
          "description": "Settings for upgrading the agentpool"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType."
        },
        "enableNodePublicIP": {
          "type": "boolean",
          "description": "Enable public IP for nodes"
        },
        "scaleSetPriority": {
          "$ref": "#/definitions/ScaleSetPriority",
          "description": "ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular."
        },
        "scaleSetEvictionPolicy": {
          "$ref": "#/definitions/ScaleSetEvictionPolicy",
          "description": "ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete."
        },
        "spotMaxPrice": {
          "$ref": "#/definitions/SpotMaxPrice",
          "description": "SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Agent pool tags to be persisted on the agent pool virtual machine scale set."
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Agent pool node labels to be persisted across all nodes in agent pool."
        },
        "nodeTaints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
        },
        "proximityPlacementGroupID": {
          "$ref": "#/definitions/ProximityPlacementGroupID",
          "description": "The ID for Proximity Placement Group."
        }
      },
      "description": "Properties for the container service agent pool profile."
    },
    "ManagedClusterAgentPoolProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "Unique name of the agent pool profile in the context of the subscription and resource group.",
              "pattern": "^[a-z][a-z0-9]{0,11}$"
            }
          }
        }
      ],
      "required": [
        "name"
      ],
      "description": "Profile for the container service agent pool."
    },
    "AgentPoolType": {
      "type": "string",
      "enum": [
        "VirtualMachineScaleSets",
        "AvailabilitySet"
      ],
      "x-ms-enum": {
        "name": "AgentPoolType",
        "modelAsString": true
      },
      "description": "AgentPoolType represents types of an agent pool."
    },
    "AgentPoolMode": {
      "type": "string",
      "enum": [
        "System",
        "User"
      ],
      "x-ms-enum": {
        "name": "AgentPoolMode",
        "modelAsString": true
      },
      "description": "AgentPoolMode represents mode of an agent pool."
    },
    "AgentPoolListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgentPool"
          },
          "description": "The list of agent pools."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of agent pool results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Agent Pools operation."
    },
    "AgentPoolUpgradeSettings": {
      "properties": {
        "maxSurge": {
          "type": "string",
          "description": "Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default"
        }
      },
      "description": "Settings for upgrading an agentpool"
    },
    "AgentPool": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        },
        {
          "properties": {
            "properties": {
              "description": "Properties of an agent pool.",
              "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "Agent Pool."
    },
    "ManagedClusterWindowsProfile": {
      "properties": {
        "adminUsername": {
          "type": "string",
          "description": "The administrator username to use for Windows VMs.",
          "pattern": "^[a-zA-Z0-9]+([._]?[a-zA-Z0-9]+)*$"
        },
        "adminPassword": {
          "type": "string",
          "description": "The administrator password to use for Windows VMs.",
          "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%\\^&\\*\\(\\)])[a-zA-Z\\d!@#$%\\^&\\*\\(\\)]{12,123}$"
        }
      },
      "required": [
        "adminUsername"
      ],
      "description": "Profile for Windows VMs in the container service cluster."
    },
    "ContainerServiceNetworkProfile": {
      "properties": {
        "networkPlugin": {
          "type": "string",
          "enum": [
            "azure",
            "kubenet"
          ],
          "default": "kubenet",
          "x-ms-enum": {
            "name": "NetworkPlugin",
            "modelAsString": true
          },
          "description": "Network plugin used for building Kubernetes network."
        },
        "networkPolicy": {
          "type": "string",
          "enum": [
            "calico",
            "azure"
          ],
          "x-ms-enum": {
            "name": "NetworkPolicy",
            "modelAsString": true
          },
          "description": "Network policy used for building Kubernetes network."
        },
        "networkMode": {
          "type": "string",
          "enum": [
            "transparent",
            "bridge"
          ],
          "x-ms-enum": {
            "name": "networkMode",
            "modelAsString": true
          },
          "description": "Network mode used for building Kubernetes network."
        },
        "podCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "10.244.0.0/16",
          "description": "A CIDR notation IP range from which to assign pod IPs when kubenet is used."
        },
        "serviceCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "10.0.0.0/16",
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
        },
        "dnsServiceIP": {
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
          "default": "10.0.0.10",
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
        },
        "dockerBridgeCidr": {
          "type": "string",
          "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
          "default": "172.17.0.1/16",
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
        },
        "outboundType": {
          "type": "string",
          "enum": [
            "loadBalancer",
            "userDefinedRouting"
          ],
          "x-ms-enum": {
            "name": "outboundType",
            "modelAsString": true
          },
          "default": "loadBalancer",
          "description": "The outbound (egress) routing method."
        },
        "loadBalancerSku": {
          "type": "string",
          "enum": [
            "standard",
            "basic"
          ],
          "x-ms-enum": {
            "name": "loadBalancerSku",
            "modelAsString": true
          },
          "description": "The load balancer sku for the managed cluster."
        },
        "loadBalancerProfile": {
          "$ref": "#/definitions/ManagedClusterLoadBalancerProfile",
          "description": "Profile of the cluster load balancer."
        }
      },
      "description": "Profile of network configuration."
    },
    "ManagedClusterLoadBalancerProfile": {
      "properties": {
        "managedOutboundIPs": {
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "description": "Desired number of outbound IP created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
              "default": 1
            }
          },
          "description": "Desired managed outbound IPs for the cluster load balancer."
        },
        "outboundIPPrefixes": {
          "properties": {
            "publicIPPrefixes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "description": "A list of public IP prefix resources."
            }
          },
          "description": "Desired outbound IP Prefix resources for the cluster load balancer."
        },
        "outboundIPs": {
          "properties": {
            "publicIPs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "description": "A list of public IP resources."
            }
          },
          "description": "Desired outbound IP resources for the cluster load balancer."
        },
        "effectiveOutboundIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "description": "The effective outbound IP resources of the cluster load balancer."
        },
        "allocatedOutboundPorts": {
          "type": "integer",
          "format": "int32",
          "maximum": 64000,
          "minimum": 0,
          "description": "Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.",
          "default": 0
        },
        "idleTimeoutInMinutes": {
          "type": "integer",
          "format": "int32",
          "maximum": 120,
          "minimum": 4,
          "description": "Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.",
          "default": 30
        }
      },
      "description": "Profile of the managed cluster load balancer."
    },
    "ResourceReference": {
      "properties": {
        "id": {
          "type": "string",
          "description": "The fully qualified Azure resource id."
        }
      },
      "description": "A reference to an Azure resource."
    },
    "ManagedClusterListResult": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedCluster"
          },
          "description": "The list of managed clusters."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to get the next set of managed cluster results.",
          "readOnly": true
        }
      },
      "description": "The response from the List Managed Clusters operation."
    },
    "ManagedCluster": {
      "properties": {
        "sku": {
          "$ref": "#/definitions/ManagedClusterSKU",
          "description": "The managed cluster SKU."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "properties": {
              "description": "Properties of a managed cluster.",
              "$ref": "#/definitions/ManagedClusterProperties",
              "x-ms-client-flatten": true
            },
            "identity": {
              "$ref": "#/definitions/ManagedClusterIdentity",
              "description": "The identity of the managed cluster, if configured."
            }
          }
        }
      ],
      "description": "Managed cluster."
    },
    "ManagedClusterProperties": {
      "properties": {
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The current deployment or provisioning state, which only appears in the response."
        },
        "maxAgentPools": {
          "readOnly": true,
          "type": "integer",
          "format": "int32",
          "description": "The max number of agent pools for the managed cluster."
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "Version of Kubernetes specified when creating the managed cluster."
        },
        "dnsPrefix": {
          "type": "string",
          "description": "DNS prefix specified when creating the managed cluster."
        },
        "fqdn": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN for the master pool."
        },
        "privateFQDN": {
          "readOnly": true,
          "type": "string",
          "description": "FQDN of private cluster."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterAgentPoolProfile"
          },
          "description": "Properties of the agent pool."
        },
        "linuxProfile": {
          "$ref": "#/definitions/ContainerServiceLinuxProfile",
          "description": "Profile for Linux VMs in the container service cluster."
        },
        "windowsProfile": {
          "$ref": "#/definitions/ManagedClusterWindowsProfile",
          "description": "Profile for Windows VMs in the container service cluster."
        },
        "servicePrincipalProfile": {
          "$ref": "#/definitions/ManagedClusterServicePrincipalProfile",
          "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs."
        },
        "addonProfiles": {
          "additionalProperties": {
            "$ref": "#/definitions/ManagedClusterAddonProfile"
          },
          "description": "Profile of managed cluster add-on."
        },
        "nodeResourceGroup": {
          "type": "string",
          "description": "Name of the resource group containing agent pool nodes."
        },
        "enableRBAC": {
          "type": "boolean",
          "description": "Whether to enable Kubernetes Role-Based Access Control."
        },
        "enablePodSecurityPolicy": {
          "type": "boolean",
          "description": "(PREVIEW) Whether to enable Kubernetes Pod security policy."
        },
        "networkProfile": {
          "$ref": "#/definitions/ContainerServiceNetworkProfile",
          "description": "Profile of network configuration."
        },
        "aadProfile": {
          "$ref": "#/definitions/ManagedClusterAADProfile",
          "description": "Profile of Azure Active Directory configuration."
        },
        "autoScalerProfile": {
          "type": "object",
          "properties": {
            "balance-similar-node-groups": {
              "type": "string"
            },
            "scan-interval": {
              "type": "string"
            },
            "scale-down-delay-after-add": {
              "type": "string"
            },
            "scale-down-delay-after-delete": {
              "type": "string"
            },
            "scale-down-delay-after-failure": {
              "type": "string"
            },
            "scale-down-unneeded-time": {
              "type": "string"
            },
            "scale-down-unready-time": {
              "type": "string"
            },
            "scale-down-utilization-threshold": {
              "type": "string"
            },
            "max-graceful-termination-sec": {
              "type": "string"
            }
          },
          "description": "Parameters to be applied to the cluster-autoscaler when enabled"
        },
        "apiServerAccessProfile": {
          "$ref": "#/definitions/ManagedClusterAPIServerAccessProfile",
          "description": "Access profile for managed cluster API server."
        },
        "diskEncryptionSetID": {
          "type": "string",
          "description": "ResourceId of the disk encryption set to use for enabling encryption at rest."
        },
        "identityProfile": {
          "additionalProperties": {
            "readOnly": true,
            "allOf": [
              {
                "$ref": "#/definitions/UserAssignedIdentity"
              }
            ]
          },
          "description": "Identities associated with the cluster."
        }
      },
      "description": "Properties of the managed cluster."
    },
    "ManagedClusterAPIServerAccessProfile": {
      "properties": {
        "authorizedIPRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Authorized IP Ranges to kubernetes API server."
        },
        "enablePrivateCluster": {
          "type": "boolean",
          "description": "Whether to create the cluster as a private cluster or not."
        }
      },
      "description": "Access profile for managed cluster API server."
    },
    "ManagedClusterIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of the system assigned identity which is used by master components."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the system assigned identity which is used by master components."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the managed cluster. Type 'SystemAssigned' will use an implicitly created identity in master components and an auto-created user assigned identity in MC_ resource group in agent nodes. Type 'None' will not use MSI for the managed cluster, service principal will be used instead.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The user identity associated with the managed cluster. This identity will be used in control plane and only one user assigned identity is allowed. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the managed cluster."
    },
    "UserAssignedIdentity": {
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The resource id of the user assigned identity."
        },
        "clientId": {
          "type": "string",
          "description": "The client id of the user assigned identity."
        },
        "objectId": {
          "type": "string",
          "description": "The object id of the user assigned identity."
        }
      }
    },
    "ManagedClusterAccessProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "properties": {
            "properties": {
              "description": "AccessProfile of a managed cluster.",
              "$ref": "#/definitions/AccessProfile",
              "x-ms-client-flatten": true
            }
          }
        }
      ],
      "description": "Managed cluster Access Profile.",
      "x-ms-azure-resource": false
    },
    "AccessProfile": {
      "type": "object",
      "properties": {
        "kubeConfig": {
          "type": "string",
          "format": "byte",
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "Profile for enabling a user to access a managed cluster."
    },
    "ManagedClusterPoolUpgradeProfile": {
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "Kubernetes version (major, minor, patch)."
        },
        "name": {
          "type": "string",
          "description": "Pool name."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "ContainerServiceOSTypes",
            "modelAsString": true
          },
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        },
        "upgrades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kubernetesVersion": {
                "type": "string",
                "description": "Kubernetes version (major, minor, patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of orchestrator types and versions available for upgrade."
        }
      },
      "required": [
        "kubernetesVersion",
        "osType"
      ],
      "description": "The list of available upgrade versions."
    },
    "ManagedClusterUpgradeProfileProperties": {
      "properties": {
        "controlPlaneProfile": {
          "$ref": "#/definitions/ManagedClusterPoolUpgradeProfile",
          "description": "The list of available upgrade versions for the control plane."
        },
        "agentPoolProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedClusterPoolUpgradeProfile"
          },
          "description": "The list of available upgrade versions for agent pools."
        }
      },
      "required": [
        "controlPlaneProfile",
        "agentPoolProfiles"
      ],
      "description": "Control plane and agent pool upgrade profiles."
    },
    "ManagedClusterAADProfile": {
      "properties": {
        "managed": {
          "type": "boolean",
          "description": "Whether to enable managed AAD."
        },
        "enableAzureRBAC": {
          "type": "boolean",
          "description": "Whether to enable Azure RBAC for Kubernetes authorization."
        },
        "adminGroupObjectIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "AAD group object IDs that will have admin role of the cluster."
        },
        "clientAppID": {
          "type": "string",
          "description": "The client AAD application ID."
        },
        "serverAppID": {
          "type": "string",
          "description": "The server AAD application ID."
        },
        "serverAppSecret": {
          "type": "string",
          "description": "The server AAD application secret."
        },
        "tenantID": {
          "type": "string",
          "description": "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription."
        }
      },
      "description": "AADProfile specifies attributes for Azure Active Directory integration."
    },
    "ManagedClusterAddonProfile": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether the add-on is enabled or not."
        },
        "config": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Key-value pairs for configuring an add-on."
        },
        "identity": {
          "readOnly": true,
          "description": "Information of user assigned identity used by this add-on.",
          "allOf": [
            {
              "$ref": "#/definitions/UserAssignedIdentity"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "description": "A Kubernetes add-on profile for a managed cluster."
    },
    "ManagedClusterUpgradeProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Id of upgrade profile."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of upgrade profile."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of upgrade profile."
        },
        "properties": {
          "$ref": "#/definitions/ManagedClusterUpgradeProfileProperties",
          "description": "Properties of upgrade profile.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available upgrades for compute pools."
    },
    "AgentPoolUpgradeProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Id of the agent pool upgrade profile."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the agent pool upgrade profile."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the agent pool upgrade profile."
        },
        "properties": {
          "$ref": "#/definitions/AgentPoolUpgradeProfileProperties",
          "description": "Properties of agent pool upgrade profile.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available upgrades for an agent pool."
    },
    "AgentPoolUpgradeProfileProperties": {
      "properties": {
        "kubernetesVersion": {
          "type": "string",
          "description": "Kubernetes version (major, minor, patch)."
        },
        "osType": {
          "$ref": "#/definitions/OSType",
          "enum": [
            "Linux",
            "Windows"
          ],
          "x-ms-enum": {
            "name": "ContainerServiceOSTypes",
            "modelAsString": true
          },
          "description": "OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."
        },
        "upgrades": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kubernetesVersion": {
                "type": "string",
                "description": "Kubernetes version (major, minor, patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of orchestrator types and versions available for upgrade."
        },
        "latestNodeImageVersion": {
          "type": "string",
          "description": "LatestNodeImageVersion is the latest AKS supported node image version."
        }
      },
      "required": [
        "kubernetesVersion",
        "osType"
      ],
      "description": "The list of available upgrade versions."
    },
    "AgentPoolAvailableVersions": {
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Id of the agent pool available versions."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Name of the agent pool available versions."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the agent pool  available versions."
        },
        "properties": {
          "$ref": "#/definitions/AgentPoolAvailableVersionsProperties",
          "description": "Properties of agent pool available versions.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "description": "The list of available versions for an agent pool."
    },
    "AgentPoolAvailableVersionsProperties": {
      "properties": {
        "agentPoolVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "default": {
                "type": "boolean",
                "description": "Whether this version is the default agent pool version."
              },
              "kubernetesVersion": {
                "type": "string",
                "description": "Kubernetes version (major, minor, patch)."
              },
              "isPreview": {
                "type": "boolean",
                "description": "Whether Kubernetes version is currently in preview."
              }
            }
          },
          "description": "List of versions available for agent pool."
        }
      },
      "description": "The list of available agent pool versions."
    },
    "ScaleSetPriority": {
      "type": "string",
      "default": "Regular",
      "enum": [
        "Spot",
        "Regular"
      ],
      "x-ms-enum": {
        "name": "ScaleSetPriority",
        "modelAsString": true
      },
      "description": "ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular."
    },
    "ScaleSetEvictionPolicy": {
      "type": "string",
      "default": "Delete",
      "enum": [
        "Delete",
        "Deallocate"
      ],
      "x-ms-enum": {
        "name": "ScaleSetEvictionPolicy",
        "modelAsString": true
      },
      "description": "ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete."
    },
    "SpotMaxPrice": {
      "type": "number",
      "default": -1,
      "description": "SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand."
    },
    "ProximityPlacementGroupID": {
      "type": "string",
      "description": "The ID for Proximity Placement Group."
    },
    "CredentialResults": {
      "properties": {
        "kubeconfigs": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/CredentialResult"
          },
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "The list of credential result response."
    },
    "CredentialResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the credential."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "readOnly": true,
          "description": "Base64-encoded Kubernetes configuration file."
        }
      },
      "description": "The credential result response."
    },
    "ManagedClusterSKU": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of a managed cluster SKU.",
          "enum": [
            "Basic"
          ],
          "x-ms-enum": {
            "name": "ManagedClusterSKUName",
            "modelAsString": true
          }
        },
        "tier": {
          "type": "string",
          "description": "Tier of a managed cluster SKU.",
          "enum": [
            "Paid",
            "Free"
          ],
          "x-ms-enum": {
            "name": "ManagedClusterSKUTier",
            "modelAsString": true
          }
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "type": "object",
      "description": "A list of private endpoint connections",
      "properties": {
        "value": {
          "description": "The collection value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivateEndpointConnection"
          }
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The ID of the private endpoint connection."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the private endpoint connection.",
          "externalDocs": {
            "url": "https://aka.ms/search-naming-rules"
          }
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The resource type."
        },
        "properties": {
          "$ref": "#/definitions/PrivateEndpointConnectionProperties",
          "description": "The properties of a private endpoint connection.",
          "x-ms-client-flatten": true
        }
      },
      "x-ms-azure-resource": true
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The current provisioning state.",
          "enum": [
            "Succeeded",
            "Creating",
            "Deleting",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "PrivateEndpointConnectionProvisioningState",
            "modelAsString": true
          }
        },
        "privateEndpoint": {
          "$ref": "#/definitions/PrivateEndpoint",
          "description": "The resource of private endpoint."
        },
        "privateLinkServiceConnectionState": {
          "$ref": "#/definitions/PrivateLinkServiceConnectionState",
          "description": "A collection of information about the state of the connection between service consumer and provider."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ]
    },
    "PrivateEndpoint": {
      "type": "object",
      "description": "Private endpoint which a connection belongs to.",
      "properties": {
        "id": {
          "description": "The resource Id for private endpoint",
          "type": "string"
        }
      }
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The state of a private link service connection.",
      "type": "object",
      "properties": {
        "status": {
          "enum": [
            "Pending",
            "Approved",
            "Rejected",
            "Disconnected"
          ],
          "type": "string",
          "description": "The private link service connection status.",
          "x-ms-enum": {
            "name": "ConnectionStatus",
            "modelAsString": true
          }
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of a supported Azure region.",
      "x-ms-parameter-location": "method"
    },
    "ResourceTypeParameter": {
      "name": "resource-type",
      "in": "query",
      "required": false,
      "type": "string",
      "description": "resource type for which the list of orchestrators needs to be returned",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "minLength": 1,
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
      "description": "The name of the managed cluster resource.",
      "x-ms-parameter-location": "method"
    }
  }
}