{
 "swagger": "2.0",
 "info": {
  "title": "ApiManagementClient",
  "description": "Use these REST APIs for performing operations in Azure API Management deployment.",
  "version": "2020-06-01-preview"
 },
 "host": "management.azure.com",
 "schemes": [
  "https"
 ],
 "consumes": [
  "application/json"
 ],
 "produces": [
  "application/json"
 ],
 "security": [
  {
   "azure_auth": [
    "user_impersonation"
   ]
  }
 ],
 "securityDefinitions": {
  "azure_auth": {
   "type": "oauth2",
   "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
   "flow": "implicit",
   "description": "Azure Active Directory OAuth2 Flow.",
   "scopes": {
    "user_impersonation": "impersonate your user account"
   }
  }
 },
 "paths": {
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/contentTypes": {
   "get": {
    "tags": [
     "ContentType"
    ],
    "operationId": "ContentType_ListByService",
    "description": "Returns list of content types",
    "x-ms-examples": {
     "ApiManagementListContentTypes": {
      "parameters": {
       "resourceGroupName": "rg1",
       "serviceName": "apimService1",
       "api-version": "2020-06-01-preview",
       "subscriptionId": "subid"
      },
      "responses": {
       "200": {
        "body": {
         "value": [
          {
           "id": "/contentTypes/page",
           "type": "Microsoft.ApiManagement/service/contentTypes",
           "name": "page",
           "properties": {
            "name": "Page",
            "description": "A regular page",
            "schema": {
             "properties": {
              "en_us": {
               "$ref": "#/definitions/metadata"
              }
             },
             "additionalProperties": false,
             "definitions": {
              "metadata": {
               "type": "object",
               "properties": {
                "title": {
                 "title": "Title",
                 "description": "Page title. This property gets included in SEO attributes.",
                 "type": "string",
                 "indexed": true
                },
                "description": {
                 "title": "Description",
                 "description": "Page description. This property gets included in SEO attributes.",
                 "type": "string",
                 "indexed": true
                },
                "keywords": {
                 "title": "Keywords",
                 "description": "Page keywords. This property gets included in SEO attributes.",
                 "type": "string",
                 "indexed": true
                },
                "permalink": {
                 "title": "Permalink",
                 "description": "Page permalink, e.g. '/about'.",
                 "type": "string",
                 "indexed": true
                },
                "documentId": {
                 "title": "Document ID",
                 "description": "Reference to page content document.",
                 "type": "string"
                }
               },
               "additionalProperties": false,
               "required": [
                "title",
                "permalink",
                "documentId"
               ]
              }
             }
            },
            "version": "1.0.0"
           }
          }
         ]
        }
       }
      }
     }
    },
    "parameters": [
     {
      "$ref": "#/parameters/ResourceGroupNameParameter"
     },
     {
      "$ref": "#/parameters/ServiceNameParameter"
     },
     {
      "$ref": "#/parameters/ApiVersionParameter"
     },
     {
      "$ref": "#/parameters/SubscriptionIdParameter"
     }
    ],
    "responses": {
     "200": {
      "description": "Lists a collection of content type entities.",
      "schema": {
       "$ref": "#/definitions/ContentTypeCollection"
      }
     },
     "default": {
      "description": "Error response describing why the operation failed.",
      "schema": {
       "$ref": "#/definitions/ErrorResponse"
      }
     }
    },
    "x-ms-pageable": {
     "nextLinkName": "nextLink"
    }
   }
  }
 },
 "definitions": {
  "ErrorFieldContract": {
   "properties": {
    "code": {
     "type": "string",
     "description": "Property level error code."
    },
    "message": {
     "type": "string",
     "description": "Human-readable representation of property-level error."
    },
    "target": {
     "type": "string",
     "description": "Property name."
    }
   },
   "description": "Error Field contract."
  },
  "ErrorResponseBody": {
   "properties": {
    "code": {
     "type": "string",
     "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response."
    },
    "message": {
     "type": "string",
     "description": "Human-readable representation of the error."
    },
    "details": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ErrorFieldContract"
     },
     "description": "The list of invalid fields send in request, in case of validation error."
    }
   },
   "description": "Error Body contract."
  },
  "ErrorResponse": {
   "properties": {
    "error": {
     "x-ms-client-flatten": true,
     "$ref": "#/definitions/ErrorResponseBody",
     "description": "Properties of the Error Response."
    }
   },
   "description": "Error Response."
  },
  "Resource": {
   "description": "The Resource definition.",
   "x-ms-azure-resource": true,
   "properties": {
    "id": {
     "readOnly": true,
     "type": "string",
     "description": "Resource ID."
    },
    "name": {
     "type": "string",
     "description": "Resource name.",
     "readOnly": true
    },
    "type": {
     "readOnly": true,
     "type": "string",
     "description": "Resource type for API Management resource."
    }
   }
  },
  "ContentItemContractProperties": {
   "properties": {},
   "additionalProperties": {
    "type": "object"
   }
  },
  "ContentItemContract": {
   "properties": {
    "properties": {
     "x-ms-client-flatten": true,
     "$ref": "#/definitions/ContentItemContractProperties",
     "description": "Properties of the content item."
    }
   },
   "allOf": [
    {
     "$ref": "#/definitions/Resource"
    }
   ],
   "description": "Content type contract details."
  },
  "ContentItemCollection": {
   "properties": {
    "value": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ContentItemContract"
     },
     "description": "Collection of content items.",
     "readOnly": true
    },
    "nextLink": {
     "type": "string",
     "description": "Next page link, if any.",
     "readOnly": true
    }
   },
   "description": "Paged list of content items."
  },
  "ContentTypeContractProperties": {
   "properties": {
    "id": {
     "type": "string",
     "description": "Content type identifier"
    },
    "name": {
     "type": "string",
     "description": "Content type name. Must be 1 to 250 characters long."
    },
    "description": {
     "type": "string",
     "description": "Content type description."
    },
    "schema": {
     "type": "object",
     "description": "Content type schema."
    },
    "version": {
     "type": "string",
     "description": "Content type version."
    }
   }
  },
  "ContentTypeContract": {
   "properties": {
    "properties": {
     "x-ms-client-flatten": true,
     "$ref": "#/definitions/ContentTypeContractProperties",
     "description": "Properties of the content type."
    }
   },
   "allOf": [
    {
     "$ref": "#/definitions/Resource"
    }
   ],
   "description": "Content type contract details."
  },
  "ContentTypeCollection": {
   "properties": {
    "value": {
     "type": "array",
     "items": {
      "$ref": "#/definitions/ContentTypeContract"
     },
     "description": "Collection of content types.",
     "readOnly": true
    },
    "nextLink": {
     "type": "string",
     "description": "Next page link, if any.",
     "readOnly": true
    }
   },
   "description": "Paged list of content types."
  }
 },
 "parameters": {
  "SubscriptionIdParameter": {
   "name": "subscriptionId",
   "in": "path",
   "required": true,
   "type": "string",
   "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
  },
  "ApiVersionParameter": {
   "name": "api-version",
   "in": "query",
   "required": true,
   "type": "string",
   "description": "Version of the API to be used with the client request."
  },
  "ContentItemIdParameter": {
   "name": "contentItemId",
   "in": "path",
   "required": true,
   "type": "string",
   "description": "Content item identifier.",
   "minLength": 1,
   "maxLength": 80,
   "x-ms-parameter-location": "method"
  },
  "ContentTypeIdParameter": {
   "name": "contentTypeId",
   "in": "path",
   "required": true,
   "type": "string",
   "description": "Content type identifier.",
   "minLength": 1,
   "maxLength": 80,
   "x-ms-parameter-location": "method"
  },
  "ServiceNameParameter": {
   "name": "serviceName",
   "in": "path",
   "required": true,
   "type": "string",
   "description": "The name of the API Management service.",
   "minLength": 1,
   "maxLength": 50,
   "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
   "x-ms-parameter-location": "method"
  },
  "ResourceGroupNameParameter": {
   "name": "resourceGroupName",
   "in": "path",
   "required": true,
   "type": "string",
   "description": "The name of the resource group.",
   "x-ms-parameter-location": "method"
  }
 }
}